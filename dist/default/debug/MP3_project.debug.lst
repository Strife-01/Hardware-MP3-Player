

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sat Jun  1 23:23:05 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F47Q10
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1
    36                           	psect	text26,global,reloc=2,class=CODE,delta=1
    37                           	psect	text27,global,reloc=2,class=CODE,delta=1
    38                           	psect	text28,global,reloc=2,class=CODE,delta=1
    39                           	psect	text29,global,reloc=2,class=CODE,delta=1
    40                           	psect	text30,global,reloc=2,class=CODE,delta=1
    41                           	psect	text31,global,reloc=2,class=CODE,delta=1
    42                           	psect	text32,global,reloc=2,class=CODE,delta=1
    43                           	psect	text33,global,reloc=2,class=CODE,delta=1
    44                           	psect	text34,global,reloc=2,class=CODE,delta=1
    45                           	psect	text35,global,reloc=2,class=CODE,delta=1
    46                           	psect	text36,global,reloc=2,class=CODE,delta=1
    47                           	psect	text37,global,reloc=2,class=CODE,delta=1
    48                           	psect	text38,global,reloc=2,class=CODE,delta=1
    49                           	psect	text39,global,reloc=2,class=CODE,delta=1
    50                           	psect	text40,global,reloc=2,class=CODE,delta=1
    51                           	psect	text41,global,reloc=2,class=CODE,delta=1
    52                           	psect	text42,global,reloc=2,class=CODE,delta=1
    53                           	psect	text43,global,reloc=2,class=CODE,delta=1
    54                           	psect	text44,global,reloc=2,class=CODE,delta=1
    55                           	psect	text45,global,reloc=2,class=CODE,delta=1
    56                           	psect	text46,global,reloc=2,class=CODE,delta=1
    57                           	psect	text47,global,reloc=2,class=CODE,delta=1
    58                           	psect	text48,global,reloc=2,class=CODE,delta=1
    59                           	psect	text49,global,reloc=2,class=CODE,delta=1
    60                           	psect	text50,global,reloc=2,class=CODE,delta=1
    61                           	psect	text51,global,reloc=2,class=CODE,delta=1
    62                           	psect	text52,global,reloc=2,class=CODE,delta=1
    63                           	psect	text53,global,reloc=2,class=CODE,delta=1
    64                           	psect	text54,global,reloc=2,class=CODE,delta=1
    65                           	psect	text55,global,reloc=2,class=CODE,delta=1
    66                           	psect	text56,global,reloc=2,class=CODE,delta=1
    67                           	psect	text57,global,reloc=2,class=CODE,delta=1
    68                           	psect	text58,global,reloc=2,class=CODE,delta=1
    69                           	psect	text59,global,reloc=2,class=CODE,delta=1
    70                           	psect	text60,global,reloc=2,class=CODE,delta=1
    71                           	psect	text61,global,reloc=2,class=CODE,delta=1
    72                           	psect	text62,global,reloc=2,class=CODE,delta=1
    73                           	psect	text63,global,reloc=2,class=CODE,delta=1
    74                           	psect	text64,global,reloc=2,class=CODE,delta=1
    75                           	psect	text65,global,reloc=2,class=CODE,delta=1
    76                           	psect	text66,global,reloc=2,class=CODE,delta=1
    77                           	psect	text67,global,reloc=2,class=CODE,delta=1
    78                           	psect	text68,global,reloc=2,class=CODE,delta=1
    79                           	psect	text69,global,reloc=2,class=CODE,delta=1
    80                           	psect	text70,global,reloc=2,class=CODE,delta=1
    81                           	psect	text71,global,reloc=2,class=CODE,delta=1
    82                           	psect	text72,global,reloc=2,class=CODE,delta=1
    83                           	psect	text73,global,reloc=2,class=CODE,delta=1
    84                           	psect	text74,global,reloc=2,class=CODE,delta=1
    85                           	psect	text75,global,reloc=2,class=CODE,delta=1
    86                           	psect	text76,global,reloc=2,class=CODE,delta=1
    87                           	psect	text77,global,reloc=2,class=CODE,delta=1
    88                           	psect	text78,global,reloc=2,class=CODE,delta=1
    89                           	psect	text79,global,reloc=2,class=CODE,delta=1
    90                           	psect	text80,global,reloc=2,class=CODE,delta=1
    91                           	psect	text81,global,reloc=2,class=CODE,delta=1
    92                           	psect	text82,global,reloc=2,class=CODE,delta=1
    93                           	psect	text83,global,reloc=2,class=CODE,delta=1
    94                           	psect	text84,global,reloc=2,class=CODE,delta=1
    95                           	psect	text85,global,reloc=2,class=CODE,delta=1
    96                           	psect	text86,global,reloc=2,class=CODE,delta=1
    97                           	psect	text87,global,reloc=2,class=CODE,delta=1
    98                           	psect	text88,global,reloc=2,class=CODE,delta=1
    99                           	psect	text89,global,reloc=2,class=CODE,delta=1
   100                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   101                           	psect	text91,global,reloc=2,class=CODE,delta=1
   102                           	psect	text92,global,reloc=2,class=CODE,delta=1
   103                           	psect	text93,global,reloc=2,class=CODE,delta=1
   104                           	psect	text94,global,reloc=2,class=CODE,delta=1
   105                           	psect	text95,global,reloc=2,class=CODE,delta=1
   106                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
   107                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   108                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   109                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
   110                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   111   000000                     
   112                           ; Generated 18/12/2023 GMT
   113                           ; 
   114                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
   115                           ; All rights reserved.
   116                           ; 
   117                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   118                           ; 
   119                           ; Redistribution and use in source and binary forms, with or without modification, are
   120                           ; permitted provided that the following conditions are met:
   121                           ; 
   122                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   123                           ;        conditions and the following disclaimer.
   124                           ; 
   125                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   126                           ;        of conditions and the following disclaimer in the documentation and/or other
   127                           ;        materials provided with the distribution. Publication is not required when
   128                           ;        this file is used in an embedded application.
   129                           ; 
   130                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   131                           ;        software without specific prior written permission.
   132                           ; 
   133                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   134                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   135                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   136                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   137                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   138                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   139                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   140                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   141                           ; 
   142                           ; 
   143                           ; Code-generator required, PIC18F47Q10 Definitions
   144                           ; 
   145                           ; SFR Addresses
   146   000000                     _SP1BRG	set	3994
   147   000000                     _RC1STA	set	3996
   148   000000                     _TMR0L	set	4050
   149   000000                     _TMR0H	set	4051
   150   000000                     _T0CON0	set	4052
   151   000000                     _PIR2	set	3783
   152   000000                     _PIR1	set	3782
   153   000000                     _INTCON	set	4082
   154   000000                     _RX1PPS	set	3760
   155   000000                     _PIE0	set	3773
   156   000000                     _PIE3	set	3776
   157   000000                     _PIR0	set	3781
   158   000000                     _PIR3	set	3784
   159   000000                     _RC6PPS	set	3832
   160   000000                     _WPUC	set	3867
   161   000000                     _ANSELC	set	3868
   162   000000                     _PIR7	set	3788
   163   000000                     _PIR6	set	3787
   164   000000                     _PIR5	set	3786
   165   000000                     _PIR4	set	3785
   166   000000                     _RC1REG	set	3992
   167   000000                     _TX1REG	set	3993
   168   000000                     _WPUD	set	3872
   169   000000                     _ANSELD	set	3873
   170   000000                     _TRISA	set	3975
   171   000000                     _TRISC	set	3977
   172   000000                     _TRISD	set	3978
   173   000000                     _PORTA	set	3980
   174   000000                     _PORTC	set	3982
   175   000000                     _PORTD	set	3983
   176   000000                     _T0CON1	set	4053
   177   000000                     _BAUD1CON	set	3998
   178   000000                     _TX1STA	set	3997
   179   000000                     _ANSELA	set	3852
   180                           
   181                           ; #config settings
   182                           
   183                           	psect	cinit
   184   001D86                     __pcinit:
   185                           	callstack 0
   186   001D86                     start_initialization:
   187                           	callstack 0
   188   001D86                     __initialization:
   189                           	callstack 0
   190                           
   191                           ; Clear objects allocated to BANK1 (100 bytes)
   192   001D86  EE01  F000         	lfsr	0,__pbssBANK1
   193   001D8A  0E64               	movlw	100
   194   001D8C                     clear_0:
   195   001D8C  6AEE               	clrf	postinc0,c
   196   001D8E  06E8               	decf	wreg,f,c
   197   001D90  E1FD               	bnz	clear_0
   198                           
   199                           ; Clear objects allocated to BANK0 (100 bytes)
   200   001D92  EE00  F060         	lfsr	0,__pbssBANK0
   201   001D96  0E64               	movlw	100
   202   001D98                     clear_1:
   203   001D98  6AEE               	clrf	postinc0,c
   204   001D9A  06E8               	decf	wreg,f,c
   205   001D9C  E1FD               	bnz	clear_1
   206                           
   207                           ; Clear objects allocated to COMRAM (48 bytes)
   208   001D9E  EE00  F001         	lfsr	0,__pbssCOMRAM
   209   001DA2  0E30               	movlw	48
   210   001DA4                     clear_2:
   211   001DA4  6AEE               	clrf	postinc0,c
   212   001DA6  06E8               	decf	wreg,f,c
   213   001DA8  E1FD               	bnz	clear_2
   214   001DAA                     end_of_initialization:
   215                           	callstack 0
   216   001DAA                     __end_of__initialization:
   217                           	callstack 0
   218   001DAA  9045               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   219   001DAC  9245               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   220   001DAE  0100               	movlb	0
   221   001DB0  EF1E  F00D         	goto	_main	;jump to C main() function
   222                           
   223                           	psect	bssCOMRAM
   224   000001                     __pbssCOMRAM:
   225                           	callstack 0
   226   000001                     _local_sending_buffer_index:
   227                           	callstack 0
   228   000001                     	ds	4
   229   000005                     _local_sending_buffer_length:
   230                           	callstack 0
   231   000005                     	ds	4
   232   000009                     _timer_0_offset:
   233                           	callstack 0
   234   000009                     	ds	2
   235   00000B                     _buttons_pressed:
   236                           	callstack 0
   237   00000B                     	ds	2
   238   00000D                     _buttons_pressed_indicator_column_to_line:
   239                           	callstack 0
   240   00000D                     	ds	2
   241   00000F                     _buttons_pressed_indicator_line_to_column:
   242                           	callstack 0
   243   00000F                     	ds	2
   244   000011                     _local_sending_buffer:
   245                           	callstack 0
   246   000011                     	ds	2
   247   000013                     _timer_0_high:
   248                           	callstack 0
   249   000013                     	ds	1
   250   000014                     _timer_0_low:
   251                           	callstack 0
   252   000014                     	ds	1
   253   000015                     _loop_all_songs_from_folder_on:
   254                           	callstack 0
   255   000015                     	ds	1
   256   000016                     _current_song_repeating_on:
   257                           	callstack 0
   258   000016                     	ds	1
   259   000017                     _rx_1_rec_character:
   260                           	callstack 0
   261   000017                     	ds	1
   262   000018                     _sending_in_progress:
   263                           	callstack 0
   264   000018                     	ds	1
   265   000019                     _is_buzzer_on:
   266                           	callstack 0
   267   000019                     	ds	1
   268   00001A                     _ir_tr_rec_is_has_signal:
   269                           	callstack 0
   270   00001A                     	ds	1
   271   00001B                     _rx_1_index:
   272                           	callstack 0
   273   00001B                     	ds	1
   274   00001C                     _finished_received_buffer:
   275                           	callstack 0
   276   00001C                     	ds	1
   277   00001D                     _rx_1_copy_buffer_size:
   278                           	callstack 0
   279   00001D                     	ds	1
   280   00001E                     _rx_1_buffer_size:
   281                           	callstack 0
   282   00001E                     	ds	1
   283   00001F                     _BUFFER_big:
   284                           	callstack 0
   285   00001F                     	ds	10
   286   000029                     _BUFFER_small:
   287                           	callstack 0
   288   000029                     	ds	8
   289                           
   290                           	psect	bssBANK0
   291   000060                     __pbssBANK0:
   292                           	callstack 0
   293   000060                     _rx_1_buffer_receive:
   294                           	callstack 0
   295   000060                     	ds	100
   296                           
   297                           	psect	bssBANK1
   298   000100                     __pbssBANK1:
   299                           	callstack 0
   300   000100                     _rx_copy_buffer:
   301                           	callstack 0
   302   000100                     	ds	100
   303                           
   304                           	psect	cstackCOMRAM
   305   000031                     __pcstackCOMRAM:
   306                           	callstack 0
   307   000031                     clean_rx_1_buffer@index:
   308                           	callstack 0
   309   000031                     copy_rx_1_buffer@index:
   310                           	callstack 0
   311                           
   312                           ; 1 bytes @ 0x0
   313   000031                     	ds	1
   314   000032                     ??_ISR:
   315                           
   316                           ; 1 bytes @ 0x1
   317   000032                     	ds	4
   318   000036                     get_pin_c4_state@output:
   319                           	callstack 0
   320   000036                     get_pin_c3_state@output:
   321                           	callstack 0
   322   000036                     get_pin_c2_state@output:
   323                           	callstack 0
   324   000036                     get_pin_c1_state@output:
   325                           	callstack 0
   326   000036                     get_pin_r1_state@output:
   327                           	callstack 0
   328   000036                     get_pin_r2_state@output:
   329                           	callstack 0
   330   000036                     get_pin_r3_state@output:
   331                           	callstack 0
   332   000036                     get_pin_r4_state@output:
   333                           	callstack 0
   334   000036                     set_line_pin_level@line_index:
   335                           	callstack 0
   336   000036                     set_column_pin_level@column_index:
   337                           	callstack 0
   338   000036                     get_button_pressed_line_to_column@column_index:
   339                           	callstack 0
   340   000036                     get_button_pressed_column_to_line@column_index:
   341                           	callstack 0
   342   000036                     reset_buffer_small@index:
   343                           	callstack 0
   344   000036                     reset_buffer_big@index:
   345                           	callstack 0
   346   000036                     start_sending@source_buffer:
   347                           	callstack 0
   348   000036                     busy_wait@iterations:
   349                           	callstack 0
   350                           
   351                           ; 4 bytes @ 0x5
   352   000036                     	ds	1
   353   000037                     get_line_pin_level@line_index:
   354                           	callstack 0
   355   000037                     get_column_pin_level@column_index:
   356                           	callstack 0
   357   000037                     get_button_pressed_line_to_column@line_index:
   358                           	callstack 0
   359   000037                     get_button_pressed_column_to_line@line_index:
   360                           	callstack 0
   361   000037                     start_sending@source_buffer_length:
   362                           	callstack 0
   363                           
   364                           ; 4 bytes @ 0x6
   365   000037                     	ds	1
   366   000038                     get_line_pin_level@output:
   367                           	callstack 0
   368   000038                     get_column_pin_level@output:
   369                           	callstack 0
   370   000038                     get_button_pressed_line_to_column@output:
   371                           	callstack 0
   372   000038                     get_button_pressed_column_to_line@output:
   373                           	callstack 0
   374                           
   375                           ; 1 bytes @ 0x7
   376   000038                     	ds	1
   377   000039                     update_buttons_checker_line_to_column@column_index:
   378                           	callstack 0
   379   000039                     update_buttons_checker_column_to_line@column_index:
   380                           	callstack 0
   381                           
   382                           ; 1 bytes @ 0x8
   383   000039                     	ds	1
   384   00003A                     update_buttons_checker_line_to_column@line_level_value:
   385                           	callstack 0
   386   00003A                     update_buttons_checker_column_to_line@line_level_value:
   387                           	callstack 0
   388   00003A                     busy_wait@iterator:
   389                           	callstack 0
   390                           
   391                           ; 4 bytes @ 0x9
   392   00003A                     	ds	1
   393   00003B                     update_buttons_checker_line_to_column@column_level_value:
   394                           	callstack 0
   395   00003B                     update_buttons_checker_column_to_line@column_level_value:
   396                           	callstack 0
   397   00003B                     play_specific_from_folder@track_number:
   398                           	callstack 0
   399   00003B                     loop_all_songs_from_folder@loop_option:
   400                           	callstack 0
   401   00003B                     toggle_repeat_current_song@option_corr_code:
   402                           	callstack 0
   403                           
   404                           ; 1 bytes @ 0xA
   405   00003B                     	ds	1
   406   00003C                     update_buttons_checker_line_to_column@button:
   407                           	callstack 0
   408   00003C                     update_buttons_checker_column_to_line@button:
   409                           	callstack 0
   410   00003C                     play_specific_from_folder@folder_number:
   411                           	callstack 0
   412   00003C                     toggle_repeat_current_song@option:
   413                           	callstack 0
   414                           
   415                           ; 1 bytes @ 0xB
   416   00003C                     	ds	1
   417   00003D                     update_buttons_checker_line_to_column@line_index:
   418                           	callstack 0
   419   00003D                     update_buttons_checker_column_to_line@line_index:
   420                           	callstack 0
   421                           
   422                           ; 1 bytes @ 0xC
   423   00003D                     	ds	1
   424   00003E                     check_line_to_column_pins@column_index:
   425                           	callstack 0
   426   00003E                     check_column_to_line_pins@line_index:
   427                           	callstack 0
   428                           
   429                           ; 1 bytes @ 0xD
   430   00003E                     	ds	1
   431   00003F                     check_line_to_column_pins@line_index:
   432                           	callstack 0
   433   00003F                     check_column_to_line_pins@column_index:
   434                           	callstack 0
   435                           
   436                           ; 1 bytes @ 0xE
   437   00003F                     	ds	1
   438   000040                     
   439                           ; 2 bytes @ 0xF
   440   000040                     	ds	2
   441   000042                     
   442                           ; 3 bytes @ 0x11
   443   000042                     	ds	3
   444   000045                     
   445                           ; 1 bytes @ 0x14
   446 ;;
   447 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   448 ;;
   449 ;; *************** function _main *****************
   450 ;; Defined at:
   451 ;;		line 16 in file "src/MP3_project.c"
   452 ;; Parameters:    Size  Location     Type
   453 ;;  argc            2   15[COMRAM] int 
   454 ;;  argv            3   17[COMRAM] PTR PTR unsigned char 
   455 ;; Auto vars:     Size  Location     Type
   456 ;;		None
   457 ;; Return value:  Size  Location     Type
   458 ;;                  2   15[COMRAM] int 
   459 ;; Registers used:
   460 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   461 ;; Tracked objects:
   462 ;;		On entry : 0/0
   463 ;;		On exit  : 0/0
   464 ;;		Unchanged: 0/0
   465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
   466 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   469 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   470 ;;Total ram usage:        5 bytes
   471 ;; Hardware stack levels required when called: 7
   472 ;; This function calls:
   473 ;;		_RX_setup
   474 ;;		_TX_setup
   475 ;;		_boud_rate_setup
   476 ;;		_busy_wait
   477 ;;		_buttons_options_interface
   478 ;;		_buttons_procedure_interface
   479 ;;		_clear_all_interrupt_flags
   480 ;;		_curiosity_leds_setup
   481 ;;		_interrupt_setup
   482 ;;		_keyboards_ansel_setup
   483 ;; This function is called by:
   484 ;;		Startup code after reset
   485 ;; This function uses a non-reentrant model
   486 ;;
   487                           
   488                           	psect	text0
   489   001A3C                     __ptext0:
   490                           	callstack 0
   491   001A3C                     _main:
   492                           	callstack 24
   493   001A3C                     
   494                           ;src/MP3_project.c: 16: int main(int argc, char** argv);src/MP3_project.c: 17: {;src/MP3
      +                          _project.c: 18:     clear_all_interrupt_flags();
   495   001A3C  EC14  F00F         	call	_clear_all_interrupt_flags	;wreg free
   496   001A40                     
   497                           ;src/MP3_project.c: 19:     curiosity_leds_setup();
   498   001A40  ECD0  F00F         	call	_curiosity_leds_setup	;wreg free
   499   001A44                     
   500                           ;src/MP3_project.c: 22:     interrupt_setup();
   501   001A44  ECDB  F00F         	call	_interrupt_setup	;wreg free
   502   001A48                     
   503                           ;src/MP3_project.c: 23:     boud_rate_setup();
   504   001A48  EC9F  F010         	call	_boud_rate_setup	;wreg free
   505   001A4C                     
   506                           ;src/MP3_project.c: 24:     RX_setup();
   507   001A4C  EC48  F00F         	call	_RX_setup	;wreg free
   508   001A50                     
   509                           ;src/MP3_project.c: 25:     TX_setup();
   510   001A50  ECDA  F00E         	call	_TX_setup	;wreg free
   511   001A54                     
   512                           ;src/MP3_project.c: 27:     keyboards_ansel_setup();
   513   001A54  EC08  F010         	call	_keyboards_ansel_setup	;wreg free
   514   001A58                     
   515                           ;src/MP3_project.c: 29:     busy_wait(1000000);
   516   001A58  0E40               	movlw	64
   517   001A5A  6E36               	movwf	busy_wait@iterations^0,c
   518   001A5C  0E42               	movlw	66
   519   001A5E  6E37               	movwf	(busy_wait@iterations+1)^0,c
   520   001A60  0E0F               	movlw	15
   521   001A62  6E38               	movwf	(busy_wait@iterations+2)^0,c
   522   001A64  0E00               	movlw	0
   523   001A66  6E39               	movwf	(busy_wait@iterations+3)^0,c
   524   001A68  EC3E  F00D         	call	_busy_wait	;wreg free
   525   001A6C                     l3147:
   526                           
   527                           ;src/MP3_project.c: 32:     {;src/MP3_project.c: 33:         buttons_procedure_interface
      +                          ();
   528   001A6C  ECEE  F00E         	call	_buttons_procedure_interface	;wreg free
   529   001A70                     
   530                           ;src/MP3_project.c: 34:         buttons_options_interface();
   531   001A70  EC81  F007         	call	_buttons_options_interface	;wreg free
   532   001A74  EF36  F00D         	goto	l3147
   533   001A78  EF77  F000         	goto	start
   534   001A7C                     __end_of_main:
   535                           	callstack 0
   536                           
   537 ;; *************** function _keyboards_ansel_setup *****************
   538 ;; Defined at:
   539 ;;		line 55 in file "src/keyboard_contol_module/keyboard_control.c"
   540 ;; Parameters:    Size  Location     Type
   541 ;;		None
   542 ;; Auto vars:     Size  Location     Type
   543 ;;		None
   544 ;; Return value:  Size  Location     Type
   545 ;;                  1    wreg      void 
   546 ;; Registers used:
   547 ;;		wreg, status,2, status,0
   548 ;; Tracked objects:
   549 ;;		On entry : 0/0
   550 ;;		On exit  : 0/0
   551 ;;		Unchanged: 0/0
   552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
   553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   556 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   557 ;;Total ram usage:        0 bytes
   558 ;; Hardware stack levels used: 1
   559 ;; Hardware stack levels required when called: 2
   560 ;; This function calls:
   561 ;;		Nothing
   562 ;; This function is called by:
   563 ;;		_main
   564 ;; This function uses a non-reentrant model
   565 ;;
   566                           
   567                           	psect	text1
   568   002010                     __ptext1:
   569                           	callstack 0
   570   002010                     _keyboards_ansel_setup:
   571                           	callstack 28
   572   002010                     
   573                           ;src/keyboard_contol_module/keyboard_control.c: 57:     ANSELC = ANSELC & ~0x04;
   574   002010  010F               	movlb	15	; () banked
   575   002012  511C               	movf	28,w,b	;volatile
   576   002014  0BFB               	andlw	251
   577   002016  6F1C               	movwf	28,b	;volatile
   578                           
   579                           ;src/keyboard_contol_module/keyboard_control.c: 58:     ANSELD = ANSELD & ~0xFD;
   580   002018  5121               	movf	33,w,b	;volatile
   581   00201A  0B02               	andlw	2
   582   00201C  6F21               	movwf	33,b	;volatile
   583   00201E                     
   584                           ; BSR set to: 15
   585   00201E  0012               	return		;funcret
   586   002020                     __end_of_keyboards_ansel_setup:
   587                           	callstack 0
   588                           
   589 ;; *************** function _interrupt_setup *****************
   590 ;; Defined at:
   591 ;;		line 7 in file "src/interrupt_control_module/interrupt_setup.c"
   592 ;; Parameters:    Size  Location     Type
   593 ;;		None
   594 ;; Auto vars:     Size  Location     Type
   595 ;;		None
   596 ;; Return value:  Size  Location     Type
   597 ;;                  1    wreg      void 
   598 ;; Registers used:
   599 ;;		wreg, status,2, status,0, cstack
   600 ;; Tracked objects:
   601 ;;		On entry : 0/0
   602 ;;		On exit  : 0/0
   603 ;;		Unchanged: 0/0
   604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
   605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   608 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   609 ;;Total ram usage:        0 bytes
   610 ;; Hardware stack levels used: 1
   611 ;; Hardware stack levels required when called: 3
   612 ;; This function calls:
   613 ;;		_RX_1_interrupt_enable
   614 ;; This function is called by:
   615 ;;		_main
   616 ;; This function uses a non-reentrant model
   617 ;;
   618                           
   619                           	psect	text2
   620   001FB6                     __ptext2:
   621                           	callstack 0
   622   001FB6                     _interrupt_setup:
   623                           	callstack 27
   624   001FB6                     
   625                           ;src/interrupt_control_module/interrupt_setup.c: 11:     INTCON = INTCON | 0b11000000;
   626   001FB6  50F2               	movf	242,w,c	;volatile
   627   001FB8  09C0               	iorlw	192
   628   001FBA  6EF2               	movwf	242,c	;volatile
   629                           
   630                           ;src/interrupt_control_module/interrupt_setup.c: 12:     INTCON = INTCON & 0b11011111;
   631   001FBC  50F2               	movf	242,w,c	;volatile
   632   001FBE  0BDF               	andlw	223
   633   001FC0  6EF2               	movwf	242,c	;volatile
   634   001FC2                     
   635                           ;src/interrupt_control_module/interrupt_setup.c: 15:     RX_1_interrupt_enable();
   636   001FC2  ECA5  F010         	call	_RX_1_interrupt_enable	;wreg free
   637   001FC6  0012               	return		;funcret
   638   001FC8                     __end_of_interrupt_setup:
   639                           	callstack 0
   640                           
   641 ;; *************** function _RX_1_interrupt_enable *****************
   642 ;; Defined at:
   643 ;;		line 29 in file "src/interrupt_control_module/interrupt_setup.c"
   644 ;; Parameters:    Size  Location     Type
   645 ;;		None
   646 ;; Auto vars:     Size  Location     Type
   647 ;;		None
   648 ;; Return value:  Size  Location     Type
   649 ;;                  1    wreg      void 
   650 ;; Registers used:
   651 ;;		wreg, status,2, status,0
   652 ;; Tracked objects:
   653 ;;		On entry : 0/0
   654 ;;		On exit  : 0/0
   655 ;;		Unchanged: 0/0
   656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
   657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   661 ;;Total ram usage:        0 bytes
   662 ;; Hardware stack levels used: 1
   663 ;; Hardware stack levels required when called: 2
   664 ;; This function calls:
   665 ;;		Nothing
   666 ;; This function is called by:
   667 ;;		_interrupt_setup
   668 ;; This function uses a non-reentrant model
   669 ;;
   670                           
   671                           	psect	text3
   672   00214A                     __ptext3:
   673                           	callstack 0
   674   00214A                     _RX_1_interrupt_enable:
   675                           	callstack 27
   676   00214A                     
   677                           ;src/interrupt_control_module/interrupt_setup.c: 31:     PIE3 = PIE3 | 0b00100000;
   678   00214A  010E               	movlb	14	; () banked
   679   00214C  51C0               	movf	192,w,b	;volatile
   680   00214E  0920               	iorlw	32
   681   002150  6FC0               	movwf	192,b	;volatile
   682   002152                     
   683                           ; BSR set to: 14
   684   002152  0012               	return		;funcret
   685   002154                     __end_of_RX_1_interrupt_enable:
   686                           	callstack 0
   687                           
   688 ;; *************** function _curiosity_leds_setup *****************
   689 ;; Defined at:
   690 ;;		line 4 in file "src/curiosity_leds_module/curiosity_leds_module.c"
   691 ;; Parameters:    Size  Location     Type
   692 ;;		None
   693 ;; Auto vars:     Size  Location     Type
   694 ;;		None
   695 ;; Return value:  Size  Location     Type
   696 ;;                  1    wreg      void 
   697 ;; Registers used:
   698 ;;		wreg, status,2, status,0
   699 ;; Tracked objects:
   700 ;;		On entry : 0/0
   701 ;;		On exit  : 0/0
   702 ;;		Unchanged: 0/0
   703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
   704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   707 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   708 ;;Total ram usage:        0 bytes
   709 ;; Hardware stack levels used: 1
   710 ;; Hardware stack levels required when called: 2
   711 ;; This function calls:
   712 ;;		Nothing
   713 ;; This function is called by:
   714 ;;		_main
   715 ;; This function uses a non-reentrant model
   716 ;;
   717                           
   718                           	psect	text4
   719   001FA0                     __ptext4:
   720                           	callstack 0
   721   001FA0                     _curiosity_leds_setup:
   722                           	callstack 28
   723   001FA0                     
   724                           ;src/curiosity_leds_module/curiosity_leds_module.c: 6:     TRISA = TRISA & 0x0F;
   725   001FA0  5087               	movf	135,w,c	;volatile
   726   001FA2  0B0F               	andlw	15
   727   001FA4  6E87               	movwf	135,c	;volatile
   728                           
   729                           ;src/curiosity_leds_module/curiosity_leds_module.c: 7:     ANSELA = ANSELA & 0x0F;
   730   001FA6  010F               	movlb	15	; () banked
   731   001FA8  510C               	movf	12,w,b	;volatile
   732   001FAA  0B0F               	andlw	15
   733   001FAC  6F0C               	movwf	12,b	;volatile
   734                           
   735                           ;src/curiosity_leds_module/curiosity_leds_module.c: 8:     PORTA = PORTA & 0x0F;
   736   001FAE  508C               	movf	140,w,c	;volatile
   737   001FB0  0B0F               	andlw	15
   738   001FB2  6E8C               	movwf	140,c	;volatile
   739   001FB4                     
   740                           ; BSR set to: 15
   741   001FB4  0012               	return		;funcret
   742   001FB6                     __end_of_curiosity_leds_setup:
   743                           	callstack 0
   744                           
   745 ;; *************** function _clear_all_interrupt_flags *****************
   746 ;; Defined at:
   747 ;;		line 39 in file "src/interrupt_control_module/interrupt_setup.c"
   748 ;; Parameters:    Size  Location     Type
   749 ;;		None
   750 ;; Auto vars:     Size  Location     Type
   751 ;;		None
   752 ;; Return value:  Size  Location     Type
   753 ;;                  1    wreg      void 
   754 ;; Registers used:
   755 ;;		wreg, status,2
   756 ;; Tracked objects:
   757 ;;		On entry : 0/0
   758 ;;		On exit  : 0/0
   759 ;;		Unchanged: 0/0
   760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
   761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   765 ;;Total ram usage:        0 bytes
   766 ;; Hardware stack levels used: 1
   767 ;; Hardware stack levels required when called: 2
   768 ;; This function calls:
   769 ;;		Nothing
   770 ;; This function is called by:
   771 ;;		_main
   772 ;; This function uses a non-reentrant model
   773 ;;
   774                           
   775                           	psect	text5
   776   001E28                     __ptext5:
   777                           	callstack 0
   778   001E28                     _clear_all_interrupt_flags:
   779                           	callstack 28
   780   001E28                     
   781                           ;src/interrupt_control_module/interrupt_setup.c: 41:     PIR0 = 0x00;
   782   001E28  0E00               	movlw	0
   783   001E2A  010E               	movlb	14	; () banked
   784   001E2C  6FC5               	movwf	197,b	;volatile
   785                           
   786                           ;src/interrupt_control_module/interrupt_setup.c: 42:     PIR1 = 0x00;
   787   001E2E  0E00               	movlw	0
   788   001E30  6FC6               	movwf	198,b	;volatile
   789                           
   790                           ;src/interrupt_control_module/interrupt_setup.c: 43:     PIR2 = 0x00;
   791   001E32  0E00               	movlw	0
   792   001E34  6FC7               	movwf	199,b	;volatile
   793                           
   794                           ;src/interrupt_control_module/interrupt_setup.c: 44:     PIR3 = 0x00;
   795   001E36  0E00               	movlw	0
   796   001E38  6FC8               	movwf	200,b	;volatile
   797                           
   798                           ;src/interrupt_control_module/interrupt_setup.c: 45:     PIR4 = 0x00;
   799   001E3A  0E00               	movlw	0
   800   001E3C  6FC9               	movwf	201,b	;volatile
   801                           
   802                           ;src/interrupt_control_module/interrupt_setup.c: 46:     PIR5 = 0x00;
   803   001E3E  0E00               	movlw	0
   804   001E40  6FCA               	movwf	202,b	;volatile
   805                           
   806                           ;src/interrupt_control_module/interrupt_setup.c: 47:     PIR6 = 0x00;
   807   001E42  0E00               	movlw	0
   808   001E44  6FCB               	movwf	203,b	;volatile
   809                           
   810                           ;src/interrupt_control_module/interrupt_setup.c: 48:     PIR7 = 0x00;
   811   001E46  0E00               	movlw	0
   812   001E48  6FCC               	movwf	204,b	;volatile
   813   001E4A                     
   814                           ; BSR set to: 14
   815   001E4A  0012               	return		;funcret
   816   001E4C                     __end_of_clear_all_interrupt_flags:
   817                           	callstack 0
   818                           
   819 ;; *************** function _buttons_procedure_interface *****************
   820 ;; Defined at:
   821 ;;		line 956 in file "src/keyboard_contol_module/keyboard_control.c"
   822 ;; Parameters:    Size  Location     Type
   823 ;;		None
   824 ;; Auto vars:     Size  Location     Type
   825 ;;		None
   826 ;; Return value:  Size  Location     Type
   827 ;;                  1    wreg      void 
   828 ;; Registers used:
   829 ;;		wreg, status,2, status,0, cstack
   830 ;; Tracked objects:
   831 ;;		On entry : 0/0
   832 ;;		On exit  : 0/0
   833 ;;		Unchanged: 0/0
   834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
   835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   838 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   839 ;;Total ram usage:        0 bytes
   840 ;; Hardware stack levels used: 1
   841 ;; Hardware stack levels required when called: 6
   842 ;; This function calls:
   843 ;;		_busy_wait
   844 ;;		_check_column_to_line_pins
   845 ;;		_check_line_to_column_pins
   846 ;;		_reset_buttons_pressed
   847 ;;		_set_buttons_pressed_indicator
   848 ;; This function is called by:
   849 ;;		_main
   850 ;; This function uses a non-reentrant model
   851 ;;
   852                           
   853                           	psect	text6
   854   001DDC                     __ptext6:
   855                           	callstack 0
   856   001DDC                     _buttons_procedure_interface:
   857                           	callstack 24
   858   001DDC                     
   859                           ;src/keyboard_contol_module/keyboard_control.c: 958:         reset_buttons_pressed();
   860   001DDC  ECA9  F00E         	call	_reset_buttons_pressed	;wreg free
   861                           
   862                           ;src/keyboard_contol_module/keyboard_control.c: 959:         check_line_to_column_pins()
      +                          ;
   863   001DE0  EC93  F00C         	call	_check_line_to_column_pins	;wreg free
   864                           
   865                           ;src/keyboard_contol_module/keyboard_control.c: 960:         busy_wait(100000);
   866   001DE4  0EA0               	movlw	160
   867   001DE6  6E36               	movwf	busy_wait@iterations^0,c
   868   001DE8  0E86               	movlw	134
   869   001DEA  6E37               	movwf	(busy_wait@iterations+1)^0,c
   870   001DEC  0E01               	movlw	1
   871   001DEE  6E38               	movwf	(busy_wait@iterations+2)^0,c
   872   001DF0  0E00               	movlw	0
   873   001DF2  6E39               	movwf	(busy_wait@iterations+3)^0,c
   874   001DF4  EC3E  F00D         	call	_busy_wait	;wreg free
   875                           
   876                           ;src/keyboard_contol_module/keyboard_control.c: 961:         check_column_to_line_pins()
      +                          ;
   877   001DF8  ECB6  F00C         	call	_check_column_to_line_pins	;wreg free
   878                           
   879                           ;src/keyboard_contol_module/keyboard_control.c: 962:         set_buttons_pressed_indicat
      +                          or();
   880   001DFC  EC98  F010         	call	_set_buttons_pressed_indicator	;wreg free
   881   001E00  0012               	return		;funcret
   882   001E02                     __end_of_buttons_procedure_interface:
   883                           	callstack 0
   884                           
   885 ;; *************** function _set_buttons_pressed_indicator *****************
   886 ;; Defined at:
   887 ;;		line 951 in file "src/keyboard_contol_module/keyboard_control.c"
   888 ;; Parameters:    Size  Location     Type
   889 ;;		None
   890 ;; Auto vars:     Size  Location     Type
   891 ;;		None
   892 ;; Return value:  Size  Location     Type
   893 ;;                  1    wreg      void 
   894 ;; Registers used:
   895 ;;		wreg, status,2, status,0
   896 ;; Tracked objects:
   897 ;;		On entry : 0/0
   898 ;;		On exit  : 0/0
   899 ;;		Unchanged: 0/0
   900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
   901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   904 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   905 ;;Total ram usage:        0 bytes
   906 ;; Hardware stack levels used: 1
   907 ;; Hardware stack levels required when called: 2
   908 ;; This function calls:
   909 ;;		Nothing
   910 ;; This function is called by:
   911 ;;		_buttons_procedure_interface
   912 ;; This function uses a non-reentrant model
   913 ;;
   914                           
   915                           	psect	text7
   916   002130                     __ptext7:
   917                           	callstack 0
   918   002130                     _set_buttons_pressed_indicator:
   919                           	callstack 27
   920   002130                     
   921                           ;src/keyboard_contol_module/keyboard_control.c: 953:     buttons_pressed = buttons_press
      +                          ed_indicator_line_to_column & buttons_pressed_indicator_column_to_line;
   922   002130  500D               	movf	_buttons_pressed_indicator_column_to_line^0,w,c
   923   002132  140F               	andwf	_buttons_pressed_indicator_line_to_column^0,w,c
   924   002134  6E0B               	movwf	_buttons_pressed^0,c
   925   002136  500E               	movf	(_buttons_pressed_indicator_column_to_line+1)^0,w,c
   926   002138  1410               	andwf	(_buttons_pressed_indicator_line_to_column+1)^0,w,c
   927   00213A  6E0C               	movwf	(_buttons_pressed+1)^0,c
   928   00213C  0012               	return		;funcret
   929   00213E                     __end_of_set_buttons_pressed_indicator:
   930                           	callstack 0
   931                           
   932 ;; *************** function _reset_buttons_pressed *****************
   933 ;; Defined at:
   934 ;;		line 939 in file "src/keyboard_contol_module/keyboard_control.c"
   935 ;; Parameters:    Size  Location     Type
   936 ;;		None
   937 ;; Auto vars:     Size  Location     Type
   938 ;;		None
   939 ;; Return value:  Size  Location     Type
   940 ;;                  1    wreg      void 
   941 ;; Registers used:
   942 ;;		wreg, status,2, status,0
   943 ;; Tracked objects:
   944 ;;		On entry : 0/0
   945 ;;		On exit  : 0/0
   946 ;;		Unchanged: 0/0
   947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
   948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   951 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   952 ;;Total ram usage:        0 bytes
   953 ;; Hardware stack levels used: 1
   954 ;; Hardware stack levels required when called: 2
   955 ;; This function calls:
   956 ;;		Nothing
   957 ;; This function is called by:
   958 ;;		_buttons_procedure_interface
   959 ;; This function uses a non-reentrant model
   960 ;;
   961                           
   962                           	psect	text8
   963   001D52                     __ptext8:
   964                           	callstack 0
   965   001D52                     _reset_buttons_pressed:
   966                           	callstack 27
   967   001D52                     
   968                           ;src/keyboard_contol_module/keyboard_control.c: 941:     PORTD = PORTD & ~0xFE;
   969   001D52  508F               	movf	143,w,c	;volatile
   970   001D54  0B01               	andlw	1
   971   001D56  6E8F               	movwf	143,c	;volatile
   972                           
   973                           ;src/keyboard_contol_module/keyboard_control.c: 942:     PORTC = PORTC & ~0x08;
   974   001D58  508E               	movf	142,w,c	;volatile
   975   001D5A  0BF7               	andlw	247
   976   001D5C  6E8E               	movwf	142,c	;volatile
   977                           
   978                           ;src/keyboard_contol_module/keyboard_control.c: 944:     WPUD = WPUD & ~0xFE;
   979   001D5E  010F               	movlb	15	; () banked
   980   001D60  5120               	movf	32,w,b	;volatile
   981   001D62  0B01               	andlw	1
   982   001D64  6F20               	movwf	32,b	;volatile
   983                           
   984                           ;src/keyboard_contol_module/keyboard_control.c: 945:     WPUC = WPUC & ~0x08;
   985   001D66  511B               	movf	27,w,b	;volatile
   986   001D68  0BF7               	andlw	247
   987   001D6A  6F1B               	movwf	27,b	;volatile
   988   001D6C                     
   989                           ; BSR set to: 15
   990                           ;src/keyboard_contol_module/keyboard_control.c: 947:     buttons_pressed_indicator_line_
      +                          to_column = 0x0000;
   991   001D6C  0E00               	movlw	0
   992   001D6E  6E10               	movwf	(_buttons_pressed_indicator_line_to_column+1)^0,c
   993   001D70  0E00               	movlw	0
   994   001D72  6E0F               	movwf	_buttons_pressed_indicator_line_to_column^0,c
   995   001D74                     
   996                           ; BSR set to: 15
   997                           ;src/keyboard_contol_module/keyboard_control.c: 948:     buttons_pressed_indicator_colum
      +                          n_to_line = 0x0000;
   998   001D74  0E00               	movlw	0
   999   001D76  6E0E               	movwf	(_buttons_pressed_indicator_column_to_line+1)^0,c
  1000   001D78  0E00               	movlw	0
  1001   001D7A  6E0D               	movwf	_buttons_pressed_indicator_column_to_line^0,c
  1002   001D7C                     
  1003                           ; BSR set to: 15
  1004                           ;src/keyboard_contol_module/keyboard_control.c: 949:     buttons_pressed = 0x0000;
  1005   001D7C  0E00               	movlw	0
  1006   001D7E  6E0C               	movwf	(_buttons_pressed+1)^0,c
  1007   001D80  0E00               	movlw	0
  1008   001D82  6E0B               	movwf	_buttons_pressed^0,c
  1009   001D84                     
  1010                           ; BSR set to: 15
  1011   001D84  0012               	return		;funcret
  1012   001D86                     __end_of_reset_buttons_pressed:
  1013                           	callstack 0
  1014                           
  1015 ;; *************** function _check_line_to_column_pins *****************
  1016 ;; Defined at:
  1017 ;;		line 901 in file "src/keyboard_contol_module/keyboard_control.c"
  1018 ;; Parameters:    Size  Location     Type
  1019 ;;		None
  1020 ;; Auto vars:     Size  Location     Type
  1021 ;;  line_index      1   14[COMRAM] unsigned char 
  1022 ;;  column_index    1   13[COMRAM] unsigned char 
  1023 ;; Return value:  Size  Location     Type
  1024 ;;                  1    wreg      void 
  1025 ;; Registers used:
  1026 ;;		wreg, status,2, status,0, cstack
  1027 ;; Tracked objects:
  1028 ;;		On entry : 0/0
  1029 ;;		On exit  : 0/0
  1030 ;;		Unchanged: 0/0
  1031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1033 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1035 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1036 ;;Total ram usage:        2 bytes
  1037 ;; Hardware stack levels used: 1
  1038 ;; Hardware stack levels required when called: 5
  1039 ;; This function calls:
  1040 ;;		_set_column_pins_as_input
  1041 ;;		_set_line_pin_level
  1042 ;;		_set_line_pins_as_output
  1043 ;;		_update_buttons_checker_line_to_column
  1044 ;; This function is called by:
  1045 ;;		_buttons_procedure_interface
  1046 ;; This function uses a non-reentrant model
  1047 ;;
  1048                           
  1049                           	psect	text9
  1050   001926                     __ptext9:
  1051                           	callstack 0
  1052   001926                     _check_line_to_column_pins:
  1053                           	callstack 24
  1054   001926                     
  1055                           ;src/keyboard_contol_module/keyboard_control.c: 903:     unsigned char line_index;;src/k
      +                          eyboard_contol_module/keyboard_control.c: 904:     unsigned char column_index;;src/keybo
      +                          ard_contol_module/keyboard_control.c: 906:     set_line_pins_as_output();
  1056   001926  ECE4  F00F         	call	_set_line_pins_as_output	;wreg free
  1057                           
  1058                           ;src/keyboard_contol_module/keyboard_control.c: 907:     set_column_pins_as_input();
  1059   00192A  ECED  F00F         	call	_set_column_pins_as_input	;wreg free
  1060   00192E                     
  1061                           ;src/keyboard_contol_module/keyboard_control.c: 909:     for (line_index = 0; line_index
      +                           < 4; line_index++)
  1062   00192E  0E00               	movlw	0
  1063   001930  6E3F               	movwf	check_line_to_column_pins@line_index^0,c
  1064   001932                     l2711:
  1065                           
  1066                           ;src/keyboard_contol_module/keyboard_control.c: 910:     {;src/keyboard_contol_module/ke
      +                          yboard_control.c: 911:         set_line_pin_level(line_index);
  1067   001932  503F               	movf	check_line_to_column_pins@line_index^0,w,c
  1068   001934  EC97  F00B         	call	_set_line_pin_level
  1069   001938                     
  1070                           ;src/keyboard_contol_module/keyboard_control.c: 913:         for (column_index = 0; colu
      +                          mn_index < 4; column_index++)
  1071   001938  0E00               	movlw	0
  1072   00193A  6E3E               	movwf	check_line_to_column_pins@column_index^0,c
  1073   00193C                     l2719:
  1074                           
  1075                           ;src/keyboard_contol_module/keyboard_control.c: 914:         {;src/keyboard_contol_modul
      +                          e/keyboard_control.c: 915:             update_buttons_checker_line_to_column(line_index,
      +                           column_index);
  1076   00193C  C03E  F039         	movff	check_line_to_column_pins@column_index,update_buttons_checker_line_to_column@colu
      +                          mn_index
  1077   001940  503F               	movf	check_line_to_column_pins@line_index^0,w,c
  1078   001942  EC86  F008         	call	_update_buttons_checker_line_to_column
  1079   001946                     
  1080                           ;src/keyboard_contol_module/keyboard_control.c: 916:         }
  1081   001946  2A3E               	incf	check_line_to_column_pins@column_index^0,f,c
  1082   001948  0E03               	movlw	3
  1083   00194A  643E               	cpfsgt	check_line_to_column_pins@column_index^0,c
  1084   00194C  EFAA  F00C         	goto	u471
  1085   001950  EFAC  F00C         	goto	u470
  1086   001954                     u471:
  1087   001954  EF9E  F00C         	goto	l2719
  1088   001958                     u470:
  1089   001958                     
  1090                           ;src/keyboard_contol_module/keyboard_control.c: 917:     }
  1091   001958  2A3F               	incf	check_line_to_column_pins@line_index^0,f,c
  1092   00195A  0E03               	movlw	3
  1093   00195C  643F               	cpfsgt	check_line_to_column_pins@line_index^0,c
  1094   00195E  EFB3  F00C         	goto	u481
  1095   001962  EFB5  F00C         	goto	u480
  1096   001966                     u481:
  1097   001966  EF99  F00C         	goto	l2711
  1098   00196A                     u480:
  1099   00196A  0012               	return		;funcret
  1100   00196C                     __end_of_check_line_to_column_pins:
  1101                           	callstack 0
  1102                           
  1103 ;; *************** function _update_buttons_checker_line_to_column *****************
  1104 ;; Defined at:
  1105 ;;		line 731 in file "src/keyboard_contol_module/keyboard_control.c"
  1106 ;; Parameters:    Size  Location     Type
  1107 ;;  line_index      1    wreg     unsigned char 
  1108 ;;  column_index    1    8[COMRAM] unsigned char 
  1109 ;; Auto vars:     Size  Location     Type
  1110 ;;  line_index      1   12[COMRAM] unsigned char 
  1111 ;;  button          1   11[COMRAM] unsigned char 
  1112 ;;  column_level    1   10[COMRAM] unsigned char 
  1113 ;;  line_level_v    1    9[COMRAM] unsigned char 
  1114 ;; Return value:  Size  Location     Type
  1115 ;;                  1    wreg      void 
  1116 ;; Registers used:
  1117 ;;		wreg, status,2, status,0, cstack
  1118 ;; Tracked objects:
  1119 ;;		On entry : 0/0
  1120 ;;		On exit  : 0/0
  1121 ;;		Unchanged: 0/0
  1122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1123 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1124 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1126 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1127 ;;Total ram usage:        5 bytes
  1128 ;; Hardware stack levels used: 1
  1129 ;; Hardware stack levels required when called: 4
  1130 ;; This function calls:
  1131 ;;		_get_button_pressed_line_to_column
  1132 ;;		_get_column_pin_level
  1133 ;;		_get_line_pin_level
  1134 ;; This function is called by:
  1135 ;;		_check_line_to_column_pins
  1136 ;; This function uses a non-reentrant model
  1137 ;;
  1138                           
  1139                           	psect	text10
  1140   00110C                     __ptext10:
  1141                           	callstack 0
  1142   00110C                     _update_buttons_checker_line_to_column:
  1143                           	callstack 24
  1144                           
  1145                           ;incstack = 0
  1146                           ;update_buttons_checker_line_to_column@line_index stored from wreg
  1147   00110C  6E3D               	movwf	update_buttons_checker_line_to_column@line_index^0,c
  1148   00110E                     
  1149                           ;src/keyboard_contol_module/keyboard_control.c: 737:     line_level_value = get_line_pin
      +                          _level(line_index);
  1150   00110E  503D               	movf	update_buttons_checker_line_to_column@line_index^0,w,c
  1151   001110  EC15  F00C         	call	_get_line_pin_level
  1152   001114  6E3A               	movwf	update_buttons_checker_line_to_column@line_level_value^0,c
  1153                           
  1154                           ;src/keyboard_contol_module/keyboard_control.c: 738:     column_level_value = get_column
      +                          _pin_level(column_index);
  1155   001116  5039               	movf	update_buttons_checker_line_to_column@column_index^0,w,c
  1156   001118  EC41  F00C         	call	_get_column_pin_level
  1157   00111C  6E3B               	movwf	update_buttons_checker_line_to_column@column_level_value^0,c
  1158   00111E                     
  1159                           ;src/keyboard_contol_module/keyboard_control.c: 740:     if ((line_level_value == 0) && 
      +                          (column_level_value == 0))
  1160   00111E  503A               	movf	update_buttons_checker_line_to_column@line_level_value^0,w,c
  1161   001120  A4D8               	btfss	status,2,c
  1162   001122  EF95  F008         	goto	u421
  1163   001126  EF97  F008         	goto	u420
  1164   00112A                     u421:
  1165   00112A  EF66  F009         	goto	l461
  1166   00112E                     u420:
  1167   00112E  503B               	movf	update_buttons_checker_line_to_column@column_level_value^0,w,c
  1168   001130  A4D8               	btfss	status,2,c
  1169   001132  EF9D  F008         	goto	u431
  1170   001136  EF9F  F008         	goto	u430
  1171   00113A                     u431:
  1172   00113A  EF66  F009         	goto	l461
  1173   00113E                     u430:
  1174   00113E                     
  1175                           ;src/keyboard_contol_module/keyboard_control.c: 741:     {;src/keyboard_contol_module/ke
      +                          yboard_control.c: 742:         button = get_button_pressed_line_to_column(line_index, co
      +                          lumn_index);
  1176   00113E  C039  F036         	movff	update_buttons_checker_line_to_column@column_index,get_button_pressed_line_to_col
      +                          umn@column_index
  1177   001142  503D               	movf	update_buttons_checker_line_to_column@line_index^0,w,c
  1178   001144  EC48  F00A         	call	_get_button_pressed_line_to_column
  1179   001148  6E3C               	movwf	update_buttons_checker_line_to_column@button^0,c
  1180                           
  1181                           ;src/keyboard_contol_module/keyboard_control.c: 744:         switch (button)
  1182   00114A  EF1F  F009         	goto	l2641
  1183   00114E                     l2607:
  1184                           
  1185                           ;src/keyboard_contol_module/keyboard_control.c: 747:                 buttons_pressed_ind
      +                          icator_line_to_column = buttons_pressed_indicator_line_to_column | 0x8000;
  1186   00114E  0E00               	movlw	0
  1187   001150  100F               	iorwf	_buttons_pressed_indicator_line_to_column^0,w,c
  1188   001152  6E0F               	movwf	_buttons_pressed_indicator_line_to_column^0,c
  1189   001154  0E80               	movlw	128
  1190   001156  1010               	iorwf	(_buttons_pressed_indicator_line_to_column+1)^0,w,c
  1191   001158  6E10               	movwf	(_buttons_pressed_indicator_line_to_column+1)^0,c
  1192                           
  1193                           ;src/keyboard_contol_module/keyboard_control.c: 748:                 break;
  1194   00115A  EF66  F009         	goto	l461
  1195   00115E                     l2609:
  1196                           
  1197                           ;src/keyboard_contol_module/keyboard_control.c: 751:                 buttons_pressed_ind
      +                          icator_line_to_column = buttons_pressed_indicator_line_to_column | 0x4000;
  1198   00115E  0E00               	movlw	0
  1199   001160  100F               	iorwf	_buttons_pressed_indicator_line_to_column^0,w,c
  1200   001162  6E0F               	movwf	_buttons_pressed_indicator_line_to_column^0,c
  1201   001164  0E40               	movlw	64
  1202   001166  1010               	iorwf	(_buttons_pressed_indicator_line_to_column+1)^0,w,c
  1203   001168  6E10               	movwf	(_buttons_pressed_indicator_line_to_column+1)^0,c
  1204                           
  1205                           ;src/keyboard_contol_module/keyboard_control.c: 752:                 break;
  1206   00116A  EF66  F009         	goto	l461
  1207   00116E                     l2611:
  1208                           
  1209                           ;src/keyboard_contol_module/keyboard_control.c: 755:                 buttons_pressed_ind
      +                          icator_line_to_column = buttons_pressed_indicator_line_to_column | 0x2000;
  1210   00116E  0E00               	movlw	0
  1211   001170  100F               	iorwf	_buttons_pressed_indicator_line_to_column^0,w,c
  1212   001172  6E0F               	movwf	_buttons_pressed_indicator_line_to_column^0,c
  1213   001174  0E20               	movlw	32
  1214   001176  1010               	iorwf	(_buttons_pressed_indicator_line_to_column+1)^0,w,c
  1215   001178  6E10               	movwf	(_buttons_pressed_indicator_line_to_column+1)^0,c
  1216                           
  1217                           ;src/keyboard_contol_module/keyboard_control.c: 756:                 break;
  1218   00117A  EF66  F009         	goto	l461
  1219   00117E                     l2613:
  1220                           
  1221                           ;src/keyboard_contol_module/keyboard_control.c: 759:                 buttons_pressed_ind
      +                          icator_line_to_column = buttons_pressed_indicator_line_to_column | 0x1000;
  1222   00117E  0E00               	movlw	0
  1223   001180  100F               	iorwf	_buttons_pressed_indicator_line_to_column^0,w,c
  1224   001182  6E0F               	movwf	_buttons_pressed_indicator_line_to_column^0,c
  1225   001184  0E10               	movlw	16
  1226   001186  1010               	iorwf	(_buttons_pressed_indicator_line_to_column+1)^0,w,c
  1227   001188  6E10               	movwf	(_buttons_pressed_indicator_line_to_column+1)^0,c
  1228                           
  1229                           ;src/keyboard_contol_module/keyboard_control.c: 760:                 break;
  1230   00118A  EF66  F009         	goto	l461
  1231   00118E                     l2615:
  1232                           
  1233                           ;src/keyboard_contol_module/keyboard_control.c: 763:                 buttons_pressed_ind
      +                          icator_line_to_column = buttons_pressed_indicator_line_to_column | 0x0800;
  1234   00118E  0E00               	movlw	0
  1235   001190  100F               	iorwf	_buttons_pressed_indicator_line_to_column^0,w,c
  1236   001192  6E0F               	movwf	_buttons_pressed_indicator_line_to_column^0,c
  1237   001194  0E08               	movlw	8
  1238   001196  1010               	iorwf	(_buttons_pressed_indicator_line_to_column+1)^0,w,c
  1239   001198  6E10               	movwf	(_buttons_pressed_indicator_line_to_column+1)^0,c
  1240                           
  1241                           ;src/keyboard_contol_module/keyboard_control.c: 764:                 break;
  1242   00119A  EF66  F009         	goto	l461
  1243   00119E                     l2617:
  1244                           
  1245                           ;src/keyboard_contol_module/keyboard_control.c: 767:                 buttons_pressed_ind
      +                          icator_line_to_column = buttons_pressed_indicator_line_to_column | 0x0400;
  1246   00119E  0E00               	movlw	0
  1247   0011A0  100F               	iorwf	_buttons_pressed_indicator_line_to_column^0,w,c
  1248   0011A2  6E0F               	movwf	_buttons_pressed_indicator_line_to_column^0,c
  1249   0011A4  0E04               	movlw	4
  1250   0011A6  1010               	iorwf	(_buttons_pressed_indicator_line_to_column+1)^0,w,c
  1251   0011A8  6E10               	movwf	(_buttons_pressed_indicator_line_to_column+1)^0,c
  1252                           
  1253                           ;src/keyboard_contol_module/keyboard_control.c: 768:                 break;
  1254   0011AA  EF66  F009         	goto	l461
  1255   0011AE                     l2619:
  1256                           
  1257                           ;src/keyboard_contol_module/keyboard_control.c: 771:                 buttons_pressed_ind
      +                          icator_line_to_column = buttons_pressed_indicator_line_to_column | 0x0200;
  1258   0011AE  0E00               	movlw	0
  1259   0011B0  100F               	iorwf	_buttons_pressed_indicator_line_to_column^0,w,c
  1260   0011B2  6E0F               	movwf	_buttons_pressed_indicator_line_to_column^0,c
  1261   0011B4  0E02               	movlw	2
  1262   0011B6  1010               	iorwf	(_buttons_pressed_indicator_line_to_column+1)^0,w,c
  1263   0011B8  6E10               	movwf	(_buttons_pressed_indicator_line_to_column+1)^0,c
  1264                           
  1265                           ;src/keyboard_contol_module/keyboard_control.c: 772:                 break;
  1266   0011BA  EF66  F009         	goto	l461
  1267   0011BE                     l2621:
  1268                           
  1269                           ;src/keyboard_contol_module/keyboard_control.c: 775:                 buttons_pressed_ind
      +                          icator_line_to_column = buttons_pressed_indicator_line_to_column | 0x0100;
  1270   0011BE  0E00               	movlw	0
  1271   0011C0  100F               	iorwf	_buttons_pressed_indicator_line_to_column^0,w,c
  1272   0011C2  6E0F               	movwf	_buttons_pressed_indicator_line_to_column^0,c
  1273   0011C4  0E01               	movlw	1
  1274   0011C6  1010               	iorwf	(_buttons_pressed_indicator_line_to_column+1)^0,w,c
  1275   0011C8  6E10               	movwf	(_buttons_pressed_indicator_line_to_column+1)^0,c
  1276                           
  1277                           ;src/keyboard_contol_module/keyboard_control.c: 776:                 break;
  1278   0011CA  EF66  F009         	goto	l461
  1279   0011CE                     l2623:
  1280                           
  1281                           ;src/keyboard_contol_module/keyboard_control.c: 779:                 buttons_pressed_ind
      +                          icator_line_to_column = buttons_pressed_indicator_line_to_column | 0x0080;
  1282   0011CE  0E80               	movlw	128
  1283   0011D0  100F               	iorwf	_buttons_pressed_indicator_line_to_column^0,w,c
  1284   0011D2  6E0F               	movwf	_buttons_pressed_indicator_line_to_column^0,c
  1285   0011D4  5010               	movf	(_buttons_pressed_indicator_line_to_column+1)^0,w,c
  1286   0011D6  6E10               	movwf	(_buttons_pressed_indicator_line_to_column+1)^0,c
  1287                           
  1288                           ;src/keyboard_contol_module/keyboard_control.c: 780:                 break;
  1289   0011D8  EF66  F009         	goto	l461
  1290   0011DC                     l2625:
  1291                           
  1292                           ;src/keyboard_contol_module/keyboard_control.c: 783:                 buttons_pressed_ind
      +                          icator_line_to_column = buttons_pressed_indicator_line_to_column | 0x0040;
  1293   0011DC  0E40               	movlw	64
  1294   0011DE  100F               	iorwf	_buttons_pressed_indicator_line_to_column^0,w,c
  1295   0011E0  6E0F               	movwf	_buttons_pressed_indicator_line_to_column^0,c
  1296   0011E2  5010               	movf	(_buttons_pressed_indicator_line_to_column+1)^0,w,c
  1297   0011E4  6E10               	movwf	(_buttons_pressed_indicator_line_to_column+1)^0,c
  1298                           
  1299                           ;src/keyboard_contol_module/keyboard_control.c: 784:                 break;
  1300   0011E6  EF66  F009         	goto	l461
  1301   0011EA                     l2627:
  1302                           
  1303                           ;src/keyboard_contol_module/keyboard_control.c: 787:                 buttons_pressed_ind
      +                          icator_line_to_column = buttons_pressed_indicator_line_to_column | 0x0020;
  1304   0011EA  0E20               	movlw	32
  1305   0011EC  100F               	iorwf	_buttons_pressed_indicator_line_to_column^0,w,c
  1306   0011EE  6E0F               	movwf	_buttons_pressed_indicator_line_to_column^0,c
  1307   0011F0  5010               	movf	(_buttons_pressed_indicator_line_to_column+1)^0,w,c
  1308   0011F2  6E10               	movwf	(_buttons_pressed_indicator_line_to_column+1)^0,c
  1309                           
  1310                           ;src/keyboard_contol_module/keyboard_control.c: 788:                 break;
  1311   0011F4  EF66  F009         	goto	l461
  1312   0011F8                     l2629:
  1313                           
  1314                           ;src/keyboard_contol_module/keyboard_control.c: 791:                 buttons_pressed_ind
      +                          icator_line_to_column = buttons_pressed_indicator_line_to_column | 0x0010;
  1315   0011F8  0E10               	movlw	16
  1316   0011FA  100F               	iorwf	_buttons_pressed_indicator_line_to_column^0,w,c
  1317   0011FC  6E0F               	movwf	_buttons_pressed_indicator_line_to_column^0,c
  1318   0011FE  5010               	movf	(_buttons_pressed_indicator_line_to_column+1)^0,w,c
  1319   001200  6E10               	movwf	(_buttons_pressed_indicator_line_to_column+1)^0,c
  1320                           
  1321                           ;src/keyboard_contol_module/keyboard_control.c: 792:                 break;
  1322   001202  EF66  F009         	goto	l461
  1323   001206                     l2631:
  1324                           
  1325                           ;src/keyboard_contol_module/keyboard_control.c: 795:                 buttons_pressed_ind
      +                          icator_line_to_column = buttons_pressed_indicator_line_to_column | 0x0008;
  1326   001206  0E08               	movlw	8
  1327   001208  100F               	iorwf	_buttons_pressed_indicator_line_to_column^0,w,c
  1328   00120A  6E0F               	movwf	_buttons_pressed_indicator_line_to_column^0,c
  1329   00120C  5010               	movf	(_buttons_pressed_indicator_line_to_column+1)^0,w,c
  1330   00120E  6E10               	movwf	(_buttons_pressed_indicator_line_to_column+1)^0,c
  1331                           
  1332                           ;src/keyboard_contol_module/keyboard_control.c: 796:                 break;
  1333   001210  EF66  F009         	goto	l461
  1334   001214                     l2633:
  1335                           
  1336                           ;src/keyboard_contol_module/keyboard_control.c: 799:                 buttons_pressed_ind
      +                          icator_line_to_column = buttons_pressed_indicator_line_to_column | 0x0004;
  1337   001214  0E04               	movlw	4
  1338   001216  100F               	iorwf	_buttons_pressed_indicator_line_to_column^0,w,c
  1339   001218  6E0F               	movwf	_buttons_pressed_indicator_line_to_column^0,c
  1340   00121A  5010               	movf	(_buttons_pressed_indicator_line_to_column+1)^0,w,c
  1341   00121C  6E10               	movwf	(_buttons_pressed_indicator_line_to_column+1)^0,c
  1342                           
  1343                           ;src/keyboard_contol_module/keyboard_control.c: 800:                 break;
  1344   00121E  EF66  F009         	goto	l461
  1345   001222                     l2635:
  1346                           
  1347                           ;src/keyboard_contol_module/keyboard_control.c: 803:                 buttons_pressed_ind
      +                          icator_line_to_column = buttons_pressed_indicator_line_to_column | 0x0002;
  1348   001222  0E02               	movlw	2
  1349   001224  100F               	iorwf	_buttons_pressed_indicator_line_to_column^0,w,c
  1350   001226  6E0F               	movwf	_buttons_pressed_indicator_line_to_column^0,c
  1351   001228  5010               	movf	(_buttons_pressed_indicator_line_to_column+1)^0,w,c
  1352   00122A  6E10               	movwf	(_buttons_pressed_indicator_line_to_column+1)^0,c
  1353                           
  1354                           ;src/keyboard_contol_module/keyboard_control.c: 804:                 break;
  1355   00122C  EF66  F009         	goto	l461
  1356   001230                     l2637:
  1357                           
  1358                           ;src/keyboard_contol_module/keyboard_control.c: 807:                 buttons_pressed_ind
      +                          icator_line_to_column = buttons_pressed_indicator_line_to_column | 0x0001;
  1359   001230  0E01               	movlw	1
  1360   001232  100F               	iorwf	_buttons_pressed_indicator_line_to_column^0,w,c
  1361   001234  6E0F               	movwf	_buttons_pressed_indicator_line_to_column^0,c
  1362   001236  5010               	movf	(_buttons_pressed_indicator_line_to_column+1)^0,w,c
  1363   001238  6E10               	movwf	(_buttons_pressed_indicator_line_to_column+1)^0,c
  1364                           
  1365                           ;src/keyboard_contol_module/keyboard_control.c: 808:                 break;
  1366   00123A  EF66  F009         	goto	l461
  1367   00123E                     l2641:
  1368   00123E  503C               	movf	update_buttons_checker_line_to_column@button^0,w,c
  1369                           
  1370                           ; Switch size 1, requested type "simple"
  1371                           ; Number of cases is 17, Range of values is 0 to 255
  1372                           ; switch strategies available:
  1373                           ; Name         Instructions Cycles
  1374                           ; simple_byte           52    27 (average)
  1375                           ;	Chosen strategy is simple_byte
  1376   001240  0A00               	xorlw	0	; case 0
  1377   001242  B4D8               	btfsc	status,2,c
  1378   001244  EF18  F009         	goto	l2637
  1379   001248  0A01               	xorlw	1	; case 1
  1380   00124A  B4D8               	btfsc	status,2,c
  1381   00124C  EF11  F009         	goto	l2635
  1382   001250  0A03               	xorlw	3	; case 2
  1383   001252  B4D8               	btfsc	status,2,c
  1384   001254  EF0A  F009         	goto	l2633
  1385   001258  0A01               	xorlw	1	; case 3
  1386   00125A  B4D8               	btfsc	status,2,c
  1387   00125C  EF03  F009         	goto	l2631
  1388   001260  0A07               	xorlw	7	; case 4
  1389   001262  B4D8               	btfsc	status,2,c
  1390   001264  EFFC  F008         	goto	l2629
  1391   001268  0A01               	xorlw	1	; case 5
  1392   00126A  B4D8               	btfsc	status,2,c
  1393   00126C  EFF5  F008         	goto	l2627
  1394   001270  0A03               	xorlw	3	; case 6
  1395   001272  B4D8               	btfsc	status,2,c
  1396   001274  EFEE  F008         	goto	l2625
  1397   001278  0A01               	xorlw	1	; case 7
  1398   00127A  B4D8               	btfsc	status,2,c
  1399   00127C  EFE7  F008         	goto	l2623
  1400   001280  0A0F               	xorlw	15	; case 8
  1401   001282  B4D8               	btfsc	status,2,c
  1402   001284  EFDF  F008         	goto	l2621
  1403   001288  0A01               	xorlw	1	; case 9
  1404   00128A  B4D8               	btfsc	status,2,c
  1405   00128C  EFD7  F008         	goto	l2619
  1406   001290  0A03               	xorlw	3	; case 10
  1407   001292  B4D8               	btfsc	status,2,c
  1408   001294  EFCF  F008         	goto	l2617
  1409   001298  0A01               	xorlw	1	; case 11
  1410   00129A  B4D8               	btfsc	status,2,c
  1411   00129C  EFC7  F008         	goto	l2615
  1412   0012A0  0A07               	xorlw	7	; case 12
  1413   0012A2  B4D8               	btfsc	status,2,c
  1414   0012A4  EFBF  F008         	goto	l2613
  1415   0012A8  0A01               	xorlw	1	; case 13
  1416   0012AA  B4D8               	btfsc	status,2,c
  1417   0012AC  EFB7  F008         	goto	l2611
  1418   0012B0  0A03               	xorlw	3	; case 14
  1419   0012B2  B4D8               	btfsc	status,2,c
  1420   0012B4  EFAF  F008         	goto	l2609
  1421   0012B8  0A01               	xorlw	1	; case 15
  1422   0012BA  B4D8               	btfsc	status,2,c
  1423   0012BC  EFA7  F008         	goto	l2607
  1424   0012C0  0AF0               	xorlw	240	; case 255
  1425   0012C2  B4D8               	btfsc	status,2,c
  1426   0012C4  EF66  F009         	goto	l461
  1427   0012C8  EF66  F009         	goto	l461
  1428   0012CC                     l461:
  1429   0012CC  0012               	return		;funcret
  1430   0012CE                     __end_of_update_buttons_checker_line_to_column:
  1431                           	callstack 0
  1432                           
  1433 ;; *************** function _get_button_pressed_line_to_column *****************
  1434 ;; Defined at:
  1435 ;;		line 495 in file "src/keyboard_contol_module/keyboard_control.c"
  1436 ;; Parameters:    Size  Location     Type
  1437 ;;  line_index      1    wreg     unsigned char 
  1438 ;;  column_index    1    5[COMRAM] unsigned char 
  1439 ;; Auto vars:     Size  Location     Type
  1440 ;;  line_index      1    6[COMRAM] unsigned char 
  1441 ;;  output          1    7[COMRAM] unsigned char 
  1442 ;; Return value:  Size  Location     Type
  1443 ;;                  1    wreg      unsigned char 
  1444 ;; Registers used:
  1445 ;;		wreg, status,2, status,0
  1446 ;; Tracked objects:
  1447 ;;		On entry : 0/0
  1448 ;;		On exit  : 0/0
  1449 ;;		Unchanged: 0/0
  1450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1451 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1452 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1454 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1455 ;;Total ram usage:        3 bytes
  1456 ;; Hardware stack levels used: 1
  1457 ;; Hardware stack levels required when called: 2
  1458 ;; This function calls:
  1459 ;;		Nothing
  1460 ;; This function is called by:
  1461 ;;		_update_buttons_checker_line_to_column
  1462 ;; This function uses a non-reentrant model
  1463 ;;
  1464                           
  1465                           	psect	text11
  1466   001490                     __ptext11:
  1467                           	callstack 0
  1468   001490                     _get_button_pressed_line_to_column:
  1469                           	callstack 25
  1470                           
  1471                           ;incstack = 0
  1472                           ;get_button_pressed_line_to_column@line_index stored from wreg
  1473   001490  6E37               	movwf	get_button_pressed_line_to_column@line_index^0,c
  1474   001492                     
  1475                           ;src/keyboard_contol_module/keyboard_control.c: 495: unsigned char get_button_pressed_li
      +                          ne_to_column (unsigned char line_index, unsigned char column_index);src/keyboard_contol_
      +                          module/keyboard_control.c: 496: {;src/keyboard_contol_module/keyboard_control.c: 497:   
      +                            unsigned char output = 255;
  1476   001492  6838               	setf	get_button_pressed_line_to_column@output^0,c
  1477                           
  1478                           ;src/keyboard_contol_module/keyboard_control.c: 499:     switch (line_index)
  1479   001494  EFDB  F00A         	goto	l2533
  1480   001498                     l2483:
  1481                           
  1482                           ;src/keyboard_contol_module/keyboard_control.c: 506:                     output = 15;
  1483   001498  0E0F               	movlw	15
  1484   00149A  6E38               	movwf	get_button_pressed_line_to_column@output^0,c
  1485                           
  1486                           ;src/keyboard_contol_module/keyboard_control.c: 507:                     break;
  1487   00149C  EFEE  F00A         	goto	l2535
  1488   0014A0                     l2485:
  1489                           
  1490                           ;src/keyboard_contol_module/keyboard_control.c: 510:                     output = 14;
  1491   0014A0  0E0E               	movlw	14
  1492   0014A2  6E38               	movwf	get_button_pressed_line_to_column@output^0,c
  1493                           
  1494                           ;src/keyboard_contol_module/keyboard_control.c: 511:                     break;
  1495   0014A4  EFEE  F00A         	goto	l2535
  1496   0014A8                     l2487:
  1497                           
  1498                           ;src/keyboard_contol_module/keyboard_control.c: 514:                     output = 13;
  1499   0014A8  0E0D               	movlw	13
  1500   0014AA  6E38               	movwf	get_button_pressed_line_to_column@output^0,c
  1501                           
  1502                           ;src/keyboard_contol_module/keyboard_control.c: 515:                     break;
  1503   0014AC  EFEE  F00A         	goto	l2535
  1504   0014B0                     l2489:
  1505                           
  1506                           ;src/keyboard_contol_module/keyboard_control.c: 518:                     output = 12;
  1507   0014B0  0E0C               	movlw	12
  1508   0014B2  6E38               	movwf	get_button_pressed_line_to_column@output^0,c
  1509                           
  1510                           ;src/keyboard_contol_module/keyboard_control.c: 519:                     break;
  1511   0014B4  EFEE  F00A         	goto	l2535
  1512   0014B8                     l375:
  1513                           
  1514                           ;src/keyboard_contol_module/keyboard_control.c: 522:                     output = 255;
  1515   0014B8  6838               	setf	get_button_pressed_line_to_column@output^0,c
  1516                           
  1517                           ;src/keyboard_contol_module/keyboard_control.c: 523:                     break;
  1518   0014BA  EFEE  F00A         	goto	l2535
  1519   0014BE                     l2493:
  1520   0014BE  5036               	movf	get_button_pressed_line_to_column@column_index^0,w,c
  1521                           
  1522                           ; Switch size 1, requested type "simple"
  1523                           ; Number of cases is 4, Range of values is 0 to 3
  1524                           ; switch strategies available:
  1525                           ; Name         Instructions Cycles
  1526                           ; simple_byte           13     7 (average)
  1527                           ;	Chosen strategy is simple_byte
  1528   0014C0  0A00               	xorlw	0	; case 0
  1529   0014C2  B4D8               	btfsc	status,2,c
  1530   0014C4  EF4C  F00A         	goto	l2483
  1531   0014C8  0A01               	xorlw	1	; case 1
  1532   0014CA  B4D8               	btfsc	status,2,c
  1533   0014CC  EF50  F00A         	goto	l2485
  1534   0014D0  0A03               	xorlw	3	; case 2
  1535   0014D2  B4D8               	btfsc	status,2,c
  1536   0014D4  EF54  F00A         	goto	l2487
  1537   0014D8  0A01               	xorlw	1	; case 3
  1538   0014DA  B4D8               	btfsc	status,2,c
  1539   0014DC  EF58  F00A         	goto	l2489
  1540   0014E0  EF5C  F00A         	goto	l375
  1541   0014E4                     l2495:
  1542                           
  1543                           ;src/keyboard_contol_module/keyboard_control.c: 533:                     output = 11;
  1544   0014E4  0E0B               	movlw	11
  1545   0014E6  6E38               	movwf	get_button_pressed_line_to_column@output^0,c
  1546                           
  1547                           ;src/keyboard_contol_module/keyboard_control.c: 534:                     break;
  1548   0014E8  EFEE  F00A         	goto	l2535
  1549   0014EC                     l2497:
  1550                           
  1551                           ;src/keyboard_contol_module/keyboard_control.c: 537:                     output = 10;
  1552   0014EC  0E0A               	movlw	10
  1553   0014EE  6E38               	movwf	get_button_pressed_line_to_column@output^0,c
  1554                           
  1555                           ;src/keyboard_contol_module/keyboard_control.c: 538:                     break;
  1556   0014F0  EFEE  F00A         	goto	l2535
  1557   0014F4                     l2499:
  1558                           
  1559                           ;src/keyboard_contol_module/keyboard_control.c: 541:                     output = 9;
  1560   0014F4  0E09               	movlw	9
  1561   0014F6  6E38               	movwf	get_button_pressed_line_to_column@output^0,c
  1562                           
  1563                           ;src/keyboard_contol_module/keyboard_control.c: 542:                     break;
  1564   0014F8  EFEE  F00A         	goto	l2535
  1565   0014FC                     l2501:
  1566                           
  1567                           ;src/keyboard_contol_module/keyboard_control.c: 545:                     output = 8;
  1568   0014FC  0E08               	movlw	8
  1569   0014FE  6E38               	movwf	get_button_pressed_line_to_column@output^0,c
  1570                           
  1571                           ;src/keyboard_contol_module/keyboard_control.c: 546:                     break;
  1572   001500  EFEE  F00A         	goto	l2535
  1573   001504                     l2505:
  1574   001504  5036               	movf	get_button_pressed_line_to_column@column_index^0,w,c
  1575                           
  1576                           ; Switch size 1, requested type "simple"
  1577                           ; Number of cases is 4, Range of values is 0 to 3
  1578                           ; switch strategies available:
  1579                           ; Name         Instructions Cycles
  1580                           ; simple_byte           13     7 (average)
  1581                           ;	Chosen strategy is simple_byte
  1582   001506  0A00               	xorlw	0	; case 0
  1583   001508  B4D8               	btfsc	status,2,c
  1584   00150A  EF72  F00A         	goto	l2495
  1585   00150E  0A01               	xorlw	1	; case 1
  1586   001510  B4D8               	btfsc	status,2,c
  1587   001512  EF76  F00A         	goto	l2497
  1588   001516  0A03               	xorlw	3	; case 2
  1589   001518  B4D8               	btfsc	status,2,c
  1590   00151A  EF7A  F00A         	goto	l2499
  1591   00151E  0A01               	xorlw	1	; case 3
  1592   001520  B4D8               	btfsc	status,2,c
  1593   001522  EF7E  F00A         	goto	l2501
  1594   001526  EF5C  F00A         	goto	l375
  1595   00152A                     l2507:
  1596                           
  1597                           ;src/keyboard_contol_module/keyboard_control.c: 560:                     output = 7;
  1598   00152A  0E07               	movlw	7
  1599   00152C  6E38               	movwf	get_button_pressed_line_to_column@output^0,c
  1600                           
  1601                           ;src/keyboard_contol_module/keyboard_control.c: 561:                     break;
  1602   00152E  EFEE  F00A         	goto	l2535
  1603   001532                     l2509:
  1604                           
  1605                           ;src/keyboard_contol_module/keyboard_control.c: 564:                     output = 6;
  1606   001532  0E06               	movlw	6
  1607   001534  6E38               	movwf	get_button_pressed_line_to_column@output^0,c
  1608                           
  1609                           ;src/keyboard_contol_module/keyboard_control.c: 565:                     break;
  1610   001536  EFEE  F00A         	goto	l2535
  1611   00153A                     l2511:
  1612                           
  1613                           ;src/keyboard_contol_module/keyboard_control.c: 568:                     output = 5;
  1614   00153A  0E05               	movlw	5
  1615   00153C  6E38               	movwf	get_button_pressed_line_to_column@output^0,c
  1616                           
  1617                           ;src/keyboard_contol_module/keyboard_control.c: 569:                     break;
  1618   00153E  EFEE  F00A         	goto	l2535
  1619   001542                     l2513:
  1620                           
  1621                           ;src/keyboard_contol_module/keyboard_control.c: 572:                     output = 4;
  1622   001542  0E04               	movlw	4
  1623   001544  6E38               	movwf	get_button_pressed_line_to_column@output^0,c
  1624                           
  1625                           ;src/keyboard_contol_module/keyboard_control.c: 573:                     break;
  1626   001546  EFEE  F00A         	goto	l2535
  1627   00154A                     l2517:
  1628   00154A  5036               	movf	get_button_pressed_line_to_column@column_index^0,w,c
  1629                           
  1630                           ; Switch size 1, requested type "simple"
  1631                           ; Number of cases is 4, Range of values is 0 to 3
  1632                           ; switch strategies available:
  1633                           ; Name         Instructions Cycles
  1634                           ; simple_byte           13     7 (average)
  1635                           ;	Chosen strategy is simple_byte
  1636   00154C  0A00               	xorlw	0	; case 0
  1637   00154E  B4D8               	btfsc	status,2,c
  1638   001550  EF95  F00A         	goto	l2507
  1639   001554  0A01               	xorlw	1	; case 1
  1640   001556  B4D8               	btfsc	status,2,c
  1641   001558  EF99  F00A         	goto	l2509
  1642   00155C  0A03               	xorlw	3	; case 2
  1643   00155E  B4D8               	btfsc	status,2,c
  1644   001560  EF9D  F00A         	goto	l2511
  1645   001564  0A01               	xorlw	1	; case 3
  1646   001566  B4D8               	btfsc	status,2,c
  1647   001568  EFA1  F00A         	goto	l2513
  1648   00156C  EF5C  F00A         	goto	l375
  1649   001570                     l2519:
  1650                           
  1651                           ;src/keyboard_contol_module/keyboard_control.c: 587:                     output = 3;
  1652   001570  0E03               	movlw	3
  1653   001572  6E38               	movwf	get_button_pressed_line_to_column@output^0,c
  1654                           
  1655                           ;src/keyboard_contol_module/keyboard_control.c: 588:                     break;
  1656   001574  EFEE  F00A         	goto	l2535
  1657   001578                     l2521:
  1658                           
  1659                           ;src/keyboard_contol_module/keyboard_control.c: 591:                     output = 2;
  1660   001578  0E02               	movlw	2
  1661   00157A  6E38               	movwf	get_button_pressed_line_to_column@output^0,c
  1662                           
  1663                           ;src/keyboard_contol_module/keyboard_control.c: 592:                     break;
  1664   00157C  EFEE  F00A         	goto	l2535
  1665   001580                     l2523:
  1666                           
  1667                           ;src/keyboard_contol_module/keyboard_control.c: 595:                     output = 1;
  1668   001580  0E01               	movlw	1
  1669   001582  6E38               	movwf	get_button_pressed_line_to_column@output^0,c
  1670                           
  1671                           ;src/keyboard_contol_module/keyboard_control.c: 596:                     break;
  1672   001584  EFEE  F00A         	goto	l2535
  1673   001588                     l2525:
  1674                           
  1675                           ;src/keyboard_contol_module/keyboard_control.c: 599:                     output = 0;
  1676   001588  0E00               	movlw	0
  1677   00158A  6E38               	movwf	get_button_pressed_line_to_column@output^0,c
  1678                           
  1679                           ;src/keyboard_contol_module/keyboard_control.c: 600:                     break;
  1680   00158C  EFEE  F00A         	goto	l2535
  1681   001590                     l2529:
  1682   001590  5036               	movf	get_button_pressed_line_to_column@column_index^0,w,c
  1683                           
  1684                           ; Switch size 1, requested type "simple"
  1685                           ; Number of cases is 4, Range of values is 0 to 3
  1686                           ; switch strategies available:
  1687                           ; Name         Instructions Cycles
  1688                           ; simple_byte           13     7 (average)
  1689                           ;	Chosen strategy is simple_byte
  1690   001592  0A00               	xorlw	0	; case 0
  1691   001594  B4D8               	btfsc	status,2,c
  1692   001596  EFB8  F00A         	goto	l2519
  1693   00159A  0A01               	xorlw	1	; case 1
  1694   00159C  B4D8               	btfsc	status,2,c
  1695   00159E  EFBC  F00A         	goto	l2521
  1696   0015A2  0A03               	xorlw	3	; case 2
  1697   0015A4  B4D8               	btfsc	status,2,c
  1698   0015A6  EFC0  F00A         	goto	l2523
  1699   0015AA  0A01               	xorlw	1	; case 3
  1700   0015AC  B4D8               	btfsc	status,2,c
  1701   0015AE  EFC4  F00A         	goto	l2525
  1702   0015B2  EF5C  F00A         	goto	l375
  1703   0015B6                     l2533:
  1704   0015B6  5037               	movf	get_button_pressed_line_to_column@line_index^0,w,c
  1705                           
  1706                           ; Switch size 1, requested type "simple"
  1707                           ; Number of cases is 4, Range of values is 0 to 3
  1708                           ; switch strategies available:
  1709                           ; Name         Instructions Cycles
  1710                           ; simple_byte           13     7 (average)
  1711                           ;	Chosen strategy is simple_byte
  1712   0015B8  0A00               	xorlw	0	; case 0
  1713   0015BA  B4D8               	btfsc	status,2,c
  1714   0015BC  EF5F  F00A         	goto	l2493
  1715   0015C0  0A01               	xorlw	1	; case 1
  1716   0015C2  B4D8               	btfsc	status,2,c
  1717   0015C4  EF82  F00A         	goto	l2505
  1718   0015C8  0A03               	xorlw	3	; case 2
  1719   0015CA  B4D8               	btfsc	status,2,c
  1720   0015CC  EFA5  F00A         	goto	l2517
  1721   0015D0  0A01               	xorlw	1	; case 3
  1722   0015D2  B4D8               	btfsc	status,2,c
  1723   0015D4  EFC8  F00A         	goto	l2529
  1724   0015D8  EFEE  F00A         	goto	l2535
  1725   0015DC                     l2535:
  1726                           
  1727                           ;src/keyboard_contol_module/keyboard_control.c: 610:     return output;
  1728   0015DC  5038               	movf	get_button_pressed_line_to_column@output^0,w,c
  1729   0015DE  0012               	return		;funcret
  1730   0015E0                     __end_of_get_button_pressed_line_to_column:
  1731                           	callstack 0
  1732                           
  1733 ;; *************** function _set_line_pins_as_output *****************
  1734 ;; Defined at:
  1735 ;;		line 421 in file "src/keyboard_contol_module/keyboard_control.c"
  1736 ;; Parameters:    Size  Location     Type
  1737 ;;		None
  1738 ;; Auto vars:     Size  Location     Type
  1739 ;;		None
  1740 ;; Return value:  Size  Location     Type
  1741 ;;                  1    wreg      void 
  1742 ;; Registers used:
  1743 ;;		wreg, status,2, status,0, cstack
  1744 ;; Tracked objects:
  1745 ;;		On entry : 0/0
  1746 ;;		On exit  : 0/0
  1747 ;;		Unchanged: 0/0
  1748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1752 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1753 ;;Total ram usage:        0 bytes
  1754 ;; Hardware stack levels used: 1
  1755 ;; Hardware stack levels required when called: 3
  1756 ;; This function calls:
  1757 ;;		_set_pin_r1_output
  1758 ;;		_set_pin_r2_output
  1759 ;;		_set_pin_r3_output
  1760 ;;		_set_pin_r4_output
  1761 ;; This function is called by:
  1762 ;;		_check_line_to_column_pins
  1763 ;; This function uses a non-reentrant model
  1764 ;;
  1765                           
  1766                           	psect	text12
  1767   001FC8                     __ptext12:
  1768                           	callstack 0
  1769   001FC8                     _set_line_pins_as_output:
  1770                           	callstack 25
  1771   001FC8                     
  1772                           ;src/keyboard_contol_module/keyboard_control.c: 423:     set_pin_r1_output();
  1773   001FC8  EC28  F010         	call	_set_pin_r1_output	;wreg free
  1774                           
  1775                           ;src/keyboard_contol_module/keyboard_control.c: 424:     set_pin_r2_output();
  1776   001FCC  EC20  F010         	call	_set_pin_r2_output	;wreg free
  1777                           
  1778                           ;src/keyboard_contol_module/keyboard_control.c: 425:     set_pin_r3_output();
  1779   001FD0  EC18  F010         	call	_set_pin_r3_output	;wreg free
  1780                           
  1781                           ;src/keyboard_contol_module/keyboard_control.c: 426:     set_pin_r4_output();
  1782   001FD4  EC10  F010         	call	_set_pin_r4_output	;wreg free
  1783   001FD8  0012               	return		;funcret
  1784   001FDA                     __end_of_set_line_pins_as_output:
  1785                           	callstack 0
  1786                           
  1787 ;; *************** function _set_pin_r4_output *****************
  1788 ;; Defined at:
  1789 ;;		line 96 in file "src/keyboard_contol_module/keyboard_control.c"
  1790 ;; Parameters:    Size  Location     Type
  1791 ;;		None
  1792 ;; Auto vars:     Size  Location     Type
  1793 ;;		None
  1794 ;; Return value:  Size  Location     Type
  1795 ;;                  1    wreg      void 
  1796 ;; Registers used:
  1797 ;;		wreg, status,2, status,0
  1798 ;; Tracked objects:
  1799 ;;		On entry : 0/0
  1800 ;;		On exit  : 0/0
  1801 ;;		Unchanged: 0/0
  1802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1807 ;;Total ram usage:        0 bytes
  1808 ;; Hardware stack levels used: 1
  1809 ;; Hardware stack levels required when called: 2
  1810 ;; This function calls:
  1811 ;;		Nothing
  1812 ;; This function is called by:
  1813 ;;		_set_line_pins_as_output
  1814 ;; This function uses a non-reentrant model
  1815 ;;
  1816                           
  1817                           	psect	text13
  1818   002020                     __ptext13:
  1819                           	callstack 0
  1820   002020                     _set_pin_r4_output:
  1821                           	callstack 25
  1822   002020                     
  1823                           ;src/keyboard_contol_module/keyboard_control.c: 98:     WPUD = WPUD & ~0x02;
  1824   002020  010F               	movlb	15	; () banked
  1825   002022  5120               	movf	32,w,b	;volatile
  1826   002024  0BFD               	andlw	253
  1827   002026  6F20               	movwf	32,b	;volatile
  1828                           
  1829                           ;src/keyboard_contol_module/keyboard_control.c: 99:     TRISD = TRISD & ~0x02;
  1830   002028  508A               	movf	138,w,c	;volatile
  1831   00202A  0BFD               	andlw	253
  1832   00202C  6E8A               	movwf	138,c	;volatile
  1833   00202E                     
  1834                           ; BSR set to: 15
  1835   00202E  0012               	return		;funcret
  1836   002030                     __end_of_set_pin_r4_output:
  1837                           	callstack 0
  1838                           
  1839 ;; *************** function _set_pin_r3_output *****************
  1840 ;; Defined at:
  1841 ;;		line 91 in file "src/keyboard_contol_module/keyboard_control.c"
  1842 ;; Parameters:    Size  Location     Type
  1843 ;;		None
  1844 ;; Auto vars:     Size  Location     Type
  1845 ;;		None
  1846 ;; Return value:  Size  Location     Type
  1847 ;;                  1    wreg      void 
  1848 ;; Registers used:
  1849 ;;		wreg, status,2, status,0
  1850 ;; Tracked objects:
  1851 ;;		On entry : 0/0
  1852 ;;		On exit  : 0/0
  1853 ;;		Unchanged: 0/0
  1854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1858 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1859 ;;Total ram usage:        0 bytes
  1860 ;; Hardware stack levels used: 1
  1861 ;; Hardware stack levels required when called: 2
  1862 ;; This function calls:
  1863 ;;		Nothing
  1864 ;; This function is called by:
  1865 ;;		_set_line_pins_as_output
  1866 ;; This function uses a non-reentrant model
  1867 ;;
  1868                           
  1869                           	psect	text14
  1870   002030                     __ptext14:
  1871                           	callstack 0
  1872   002030                     _set_pin_r3_output:
  1873                           	callstack 25
  1874   002030                     
  1875                           ;src/keyboard_contol_module/keyboard_control.c: 93:     WPUC = WPUC & ~0x08;
  1876   002030  010F               	movlb	15	; () banked
  1877   002032  511B               	movf	27,w,b	;volatile
  1878   002034  0BF7               	andlw	247
  1879   002036  6F1B               	movwf	27,b	;volatile
  1880                           
  1881                           ;src/keyboard_contol_module/keyboard_control.c: 94:     TRISC = TRISC & ~0x08;
  1882   002038  5089               	movf	137,w,c	;volatile
  1883   00203A  0BF7               	andlw	247
  1884   00203C  6E89               	movwf	137,c	;volatile
  1885   00203E                     
  1886                           ; BSR set to: 15
  1887   00203E  0012               	return		;funcret
  1888   002040                     __end_of_set_pin_r3_output:
  1889                           	callstack 0
  1890                           
  1891 ;; *************** function _set_pin_r2_output *****************
  1892 ;; Defined at:
  1893 ;;		line 86 in file "src/keyboard_contol_module/keyboard_control.c"
  1894 ;; Parameters:    Size  Location     Type
  1895 ;;		None
  1896 ;; Auto vars:     Size  Location     Type
  1897 ;;		None
  1898 ;; Return value:  Size  Location     Type
  1899 ;;                  1    wreg      void 
  1900 ;; Registers used:
  1901 ;;		wreg, status,2, status,0
  1902 ;; Tracked objects:
  1903 ;;		On entry : 0/0
  1904 ;;		On exit  : 0/0
  1905 ;;		Unchanged: 0/0
  1906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1910 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1911 ;;Total ram usage:        0 bytes
  1912 ;; Hardware stack levels used: 1
  1913 ;; Hardware stack levels required when called: 2
  1914 ;; This function calls:
  1915 ;;		Nothing
  1916 ;; This function is called by:
  1917 ;;		_set_line_pins_as_output
  1918 ;; This function uses a non-reentrant model
  1919 ;;
  1920                           
  1921                           	psect	text15
  1922   002040                     __ptext15:
  1923                           	callstack 0
  1924   002040                     _set_pin_r2_output:
  1925                           	callstack 25
  1926   002040                     
  1927                           ;src/keyboard_contol_module/keyboard_control.c: 88:     WPUD = WPUD & ~0x04;
  1928   002040  010F               	movlb	15	; () banked
  1929   002042  5120               	movf	32,w,b	;volatile
  1930   002044  0BFB               	andlw	251
  1931   002046  6F20               	movwf	32,b	;volatile
  1932                           
  1933                           ;src/keyboard_contol_module/keyboard_control.c: 89:     TRISD = TRISD & ~0x04;
  1934   002048  508A               	movf	138,w,c	;volatile
  1935   00204A  0BFB               	andlw	251
  1936   00204C  6E8A               	movwf	138,c	;volatile
  1937   00204E                     
  1938                           ; BSR set to: 15
  1939   00204E  0012               	return		;funcret
  1940   002050                     __end_of_set_pin_r2_output:
  1941                           	callstack 0
  1942                           
  1943 ;; *************** function _set_pin_r1_output *****************
  1944 ;; Defined at:
  1945 ;;		line 81 in file "src/keyboard_contol_module/keyboard_control.c"
  1946 ;; Parameters:    Size  Location     Type
  1947 ;;		None
  1948 ;; Auto vars:     Size  Location     Type
  1949 ;;		None
  1950 ;; Return value:  Size  Location     Type
  1951 ;;                  1    wreg      void 
  1952 ;; Registers used:
  1953 ;;		wreg, status,2, status,0
  1954 ;; Tracked objects:
  1955 ;;		On entry : 0/0
  1956 ;;		On exit  : 0/0
  1957 ;;		Unchanged: 0/0
  1958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  1959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1962 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1963 ;;Total ram usage:        0 bytes
  1964 ;; Hardware stack levels used: 1
  1965 ;; Hardware stack levels required when called: 2
  1966 ;; This function calls:
  1967 ;;		Nothing
  1968 ;; This function is called by:
  1969 ;;		_set_line_pins_as_output
  1970 ;; This function uses a non-reentrant model
  1971 ;;
  1972                           
  1973                           	psect	text16
  1974   002050                     __ptext16:
  1975                           	callstack 0
  1976   002050                     _set_pin_r1_output:
  1977                           	callstack 25
  1978   002050                     
  1979                           ;src/keyboard_contol_module/keyboard_control.c: 83:     WPUD = WPUD & ~0x08;
  1980   002050  010F               	movlb	15	; () banked
  1981   002052  5120               	movf	32,w,b	;volatile
  1982   002054  0BF7               	andlw	247
  1983   002056  6F20               	movwf	32,b	;volatile
  1984                           
  1985                           ;src/keyboard_contol_module/keyboard_control.c: 84:     TRISD = TRISD & ~0x08;
  1986   002058  508A               	movf	138,w,c	;volatile
  1987   00205A  0BF7               	andlw	247
  1988   00205C  6E8A               	movwf	138,c	;volatile
  1989   00205E                     
  1990                           ; BSR set to: 15
  1991   00205E  0012               	return		;funcret
  1992   002060                     __end_of_set_pin_r1_output:
  1993                           	callstack 0
  1994                           
  1995 ;; *************** function _set_line_pin_level *****************
  1996 ;; Defined at:
  1997 ;;		line 330 in file "src/keyboard_contol_module/keyboard_control.c"
  1998 ;; Parameters:    Size  Location     Type
  1999 ;;  line_index      1    wreg     unsigned char 
  2000 ;; Auto vars:     Size  Location     Type
  2001 ;;  line_index      1    5[COMRAM] unsigned char 
  2002 ;; Return value:  Size  Location     Type
  2003 ;;                  1    wreg      void 
  2004 ;; Registers used:
  2005 ;;		wreg, status,2, status,0, cstack
  2006 ;; Tracked objects:
  2007 ;;		On entry : 0/0
  2008 ;;		On exit  : 0/0
  2009 ;;		Unchanged: 0/0
  2010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2012 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2014 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2015 ;;Total ram usage:        1 bytes
  2016 ;; Hardware stack levels used: 1
  2017 ;; Hardware stack levels required when called: 3
  2018 ;; This function calls:
  2019 ;;		_set_pin_r1_0
  2020 ;;		_set_pin_r1_1
  2021 ;;		_set_pin_r2_0
  2022 ;;		_set_pin_r2_1
  2023 ;;		_set_pin_r3_0
  2024 ;;		_set_pin_r3_1
  2025 ;;		_set_pin_r4_0
  2026 ;;		_set_pin_r4_1
  2027 ;; This function is called by:
  2028 ;;		_check_line_to_column_pins
  2029 ;; This function uses a non-reentrant model
  2030 ;;
  2031                           
  2032                           	psect	text17
  2033   00172E                     __ptext17:
  2034                           	callstack 0
  2035   00172E                     _set_line_pin_level:
  2036                           	callstack 25
  2037                           
  2038                           ; BSR set to: 15
  2039                           ;incstack = 0
  2040                           ;set_line_pin_level@line_index stored from wreg
  2041   00172E  6E36               	movwf	set_line_pin_level@line_index^0,c
  2042   001730                     
  2043                           ;src/keyboard_contol_module/keyboard_control.c: 330: void set_line_pin_level (unsigned c
      +                          har line_index);src/keyboard_contol_module/keyboard_control.c: 331: {;src/keyboard_conto
      +                          l_module/keyboard_control.c: 332:     switch (line_index)
  2044   001730  EFC2  F00B         	goto	l1759
  2045   001734                     l1749:
  2046                           
  2047                           ;src/keyboard_contol_module/keyboard_control.c: 335:         {;src/keyboard_contol_modul
      +                          e/keyboard_control.c: 336:             set_pin_r1_0();
  2048   001734  ECD5  F010         	call	_set_pin_r1_0	;wreg free
  2049                           
  2050                           ;src/keyboard_contol_module/keyboard_control.c: 337:             set_pin_r2_1();
  2051   001738  ECC9  F010         	call	_set_pin_r2_1	;wreg free
  2052                           
  2053                           ;src/keyboard_contol_module/keyboard_control.c: 338:             set_pin_r3_1();
  2054   00173C  ECC1  F010         	call	_set_pin_r3_1	;wreg free
  2055                           
  2056                           ;src/keyboard_contol_module/keyboard_control.c: 339:             set_pin_r4_1();
  2057   001740  ECB9  F010         	call	_set_pin_r4_1	;wreg free
  2058                           
  2059                           ;src/keyboard_contol_module/keyboard_control.c: 340:         };src/keyboard_contol_modul
      +                          e/keyboard_control.c: 341:         break;
  2060   001744  EFD5  F00B         	goto	l325
  2061   001748                     l1751:
  2062                           
  2063                           ;src/keyboard_contol_module/keyboard_control.c: 344:         {;src/keyboard_contol_modul
      +                          e/keyboard_control.c: 345:             set_pin_r1_1();
  2064   001748  ECD1  F010         	call	_set_pin_r1_1	;wreg free
  2065                           
  2066                           ;src/keyboard_contol_module/keyboard_control.c: 346:             set_pin_r2_0();
  2067   00174C  ECCD  F010         	call	_set_pin_r2_0	;wreg free
  2068                           
  2069                           ;src/keyboard_contol_module/keyboard_control.c: 347:             set_pin_r3_1();
  2070   001750  ECC1  F010         	call	_set_pin_r3_1	;wreg free
  2071                           
  2072                           ;src/keyboard_contol_module/keyboard_control.c: 348:             set_pin_r4_1();
  2073   001754  ECB9  F010         	call	_set_pin_r4_1	;wreg free
  2074                           
  2075                           ;src/keyboard_contol_module/keyboard_control.c: 349:         };src/keyboard_contol_modul
      +                          e/keyboard_control.c: 350:         break;
  2076   001758  EFD5  F00B         	goto	l325
  2077   00175C                     l1753:
  2078                           
  2079                           ;src/keyboard_contol_module/keyboard_control.c: 353:         {;src/keyboard_contol_modul
      +                          e/keyboard_control.c: 354:             set_pin_r1_1();
  2080   00175C  ECD1  F010         	call	_set_pin_r1_1	;wreg free
  2081                           
  2082                           ;src/keyboard_contol_module/keyboard_control.c: 355:             set_pin_r2_1();
  2083   001760  ECC9  F010         	call	_set_pin_r2_1	;wreg free
  2084                           
  2085                           ;src/keyboard_contol_module/keyboard_control.c: 356:             set_pin_r3_0();
  2086   001764  ECC5  F010         	call	_set_pin_r3_0	;wreg free
  2087                           
  2088                           ;src/keyboard_contol_module/keyboard_control.c: 357:             set_pin_r4_1();
  2089   001768  ECB9  F010         	call	_set_pin_r4_1	;wreg free
  2090                           
  2091                           ;src/keyboard_contol_module/keyboard_control.c: 358:         };src/keyboard_contol_modul
      +                          e/keyboard_control.c: 359:         break;
  2092   00176C  EFD5  F00B         	goto	l325
  2093   001770                     l1755:
  2094                           
  2095                           ;src/keyboard_contol_module/keyboard_control.c: 362:         {;src/keyboard_contol_modul
      +                          e/keyboard_control.c: 363:             set_pin_r1_1();
  2096   001770  ECD1  F010         	call	_set_pin_r1_1	;wreg free
  2097                           
  2098                           ;src/keyboard_contol_module/keyboard_control.c: 364:             set_pin_r2_1();
  2099   001774  ECC9  F010         	call	_set_pin_r2_1	;wreg free
  2100                           
  2101                           ;src/keyboard_contol_module/keyboard_control.c: 365:             set_pin_r3_1();
  2102   001778  ECC1  F010         	call	_set_pin_r3_1	;wreg free
  2103                           
  2104                           ;src/keyboard_contol_module/keyboard_control.c: 366:             set_pin_r4_0();
  2105   00177C  ECBD  F010         	call	_set_pin_r4_0	;wreg free
  2106                           
  2107                           ;src/keyboard_contol_module/keyboard_control.c: 367:         };src/keyboard_contol_modul
      +                          e/keyboard_control.c: 368:         break;
  2108   001780  EFD5  F00B         	goto	l325
  2109   001784                     l1759:
  2110   001784  5036               	movf	set_line_pin_level@line_index^0,w,c
  2111                           
  2112                           ; Switch size 1, requested type "simple"
  2113                           ; Number of cases is 4, Range of values is 0 to 3
  2114                           ; switch strategies available:
  2115                           ; Name         Instructions Cycles
  2116                           ; simple_byte           13     7 (average)
  2117                           ;	Chosen strategy is simple_byte
  2118   001786  0A00               	xorlw	0	; case 0
  2119   001788  B4D8               	btfsc	status,2,c
  2120   00178A  EF9A  F00B         	goto	l1749
  2121   00178E  0A01               	xorlw	1	; case 1
  2122   001790  B4D8               	btfsc	status,2,c
  2123   001792  EFA4  F00B         	goto	l1751
  2124   001796  0A03               	xorlw	3	; case 2
  2125   001798  B4D8               	btfsc	status,2,c
  2126   00179A  EFAE  F00B         	goto	l1753
  2127   00179E  0A01               	xorlw	1	; case 3
  2128   0017A0  B4D8               	btfsc	status,2,c
  2129   0017A2  EFB8  F00B         	goto	l1755
  2130   0017A6  EFD5  F00B         	goto	l325
  2131   0017AA                     l325:
  2132   0017AA  0012               	return		;funcret
  2133   0017AC                     __end_of_set_line_pin_level:
  2134                           	callstack 0
  2135                           
  2136 ;; *************** function _set_pin_r4_1 *****************
  2137 ;; Defined at:
  2138 ;;		line 325 in file "src/keyboard_contol_module/keyboard_control.c"
  2139 ;; Parameters:    Size  Location     Type
  2140 ;;		None
  2141 ;; Auto vars:     Size  Location     Type
  2142 ;;		None
  2143 ;; Return value:  Size  Location     Type
  2144 ;;                  1    wreg      void 
  2145 ;; Registers used:
  2146 ;;		wreg, status,2, status,0
  2147 ;; Tracked objects:
  2148 ;;		On entry : 0/0
  2149 ;;		On exit  : 0/0
  2150 ;;		Unchanged: 0/0
  2151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2155 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2156 ;;Total ram usage:        0 bytes
  2157 ;; Hardware stack levels used: 1
  2158 ;; Hardware stack levels required when called: 2
  2159 ;; This function calls:
  2160 ;;		Nothing
  2161 ;; This function is called by:
  2162 ;;		_set_line_pin_level
  2163 ;; This function uses a non-reentrant model
  2164 ;;
  2165                           
  2166                           	psect	text18
  2167   002172                     __ptext18:
  2168                           	callstack 0
  2169   002172                     _set_pin_r4_1:
  2170                           	callstack 25
  2171   002172                     
  2172                           ;src/keyboard_contol_module/keyboard_control.c: 327:     PORTD = PORTD | 0x02;
  2173   002172  508F               	movf	143,w,c	;volatile
  2174   002174  0902               	iorlw	2
  2175   002176  6E8F               	movwf	143,c	;volatile
  2176   002178  0012               	return		;funcret
  2177   00217A                     __end_of_set_pin_r4_1:
  2178                           	callstack 0
  2179                           
  2180 ;; *************** function _set_pin_r4_0 *****************
  2181 ;; Defined at:
  2182 ;;		line 292 in file "src/keyboard_contol_module/keyboard_control.c"
  2183 ;; Parameters:    Size  Location     Type
  2184 ;;		None
  2185 ;; Auto vars:     Size  Location     Type
  2186 ;;		None
  2187 ;; Return value:  Size  Location     Type
  2188 ;;                  1    wreg      void 
  2189 ;; Registers used:
  2190 ;;		wreg, status,2, status,0
  2191 ;; Tracked objects:
  2192 ;;		On entry : 0/0
  2193 ;;		On exit  : 0/0
  2194 ;;		Unchanged: 0/0
  2195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2199 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2200 ;;Total ram usage:        0 bytes
  2201 ;; Hardware stack levels used: 1
  2202 ;; Hardware stack levels required when called: 2
  2203 ;; This function calls:
  2204 ;;		Nothing
  2205 ;; This function is called by:
  2206 ;;		_set_line_pin_level
  2207 ;; This function uses a non-reentrant model
  2208 ;;
  2209                           
  2210                           	psect	text19
  2211   00217A                     __ptext19:
  2212                           	callstack 0
  2213   00217A                     _set_pin_r4_0:
  2214                           	callstack 25
  2215   00217A                     
  2216                           ;src/keyboard_contol_module/keyboard_control.c: 294:     PORTD = PORTD & ~0x02;
  2217   00217A  508F               	movf	143,w,c	;volatile
  2218   00217C  0BFD               	andlw	253
  2219   00217E  6E8F               	movwf	143,c	;volatile
  2220   002180  0012               	return		;funcret
  2221   002182                     __end_of_set_pin_r4_0:
  2222                           	callstack 0
  2223                           
  2224 ;; *************** function _set_pin_r3_1 *****************
  2225 ;; Defined at:
  2226 ;;		line 321 in file "src/keyboard_contol_module/keyboard_control.c"
  2227 ;; Parameters:    Size  Location     Type
  2228 ;;		None
  2229 ;; Auto vars:     Size  Location     Type
  2230 ;;		None
  2231 ;; Return value:  Size  Location     Type
  2232 ;;                  1    wreg      void 
  2233 ;; Registers used:
  2234 ;;		wreg, status,2, status,0
  2235 ;; Tracked objects:
  2236 ;;		On entry : 0/0
  2237 ;;		On exit  : 0/0
  2238 ;;		Unchanged: 0/0
  2239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2243 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2244 ;;Total ram usage:        0 bytes
  2245 ;; Hardware stack levels used: 1
  2246 ;; Hardware stack levels required when called: 2
  2247 ;; This function calls:
  2248 ;;		Nothing
  2249 ;; This function is called by:
  2250 ;;		_set_line_pin_level
  2251 ;; This function uses a non-reentrant model
  2252 ;;
  2253                           
  2254                           	psect	text20
  2255   002182                     __ptext20:
  2256                           	callstack 0
  2257   002182                     _set_pin_r3_1:
  2258                           	callstack 25
  2259   002182                     
  2260                           ;src/keyboard_contol_module/keyboard_control.c: 323:     PORTC = PORTC | 0x08;
  2261   002182  508E               	movf	142,w,c	;volatile
  2262   002184  0908               	iorlw	8
  2263   002186  6E8E               	movwf	142,c	;volatile
  2264   002188  0012               	return		;funcret
  2265   00218A                     __end_of_set_pin_r3_1:
  2266                           	callstack 0
  2267                           
  2268 ;; *************** function _set_pin_r3_0 *****************
  2269 ;; Defined at:
  2270 ;;		line 288 in file "src/keyboard_contol_module/keyboard_control.c"
  2271 ;; Parameters:    Size  Location     Type
  2272 ;;		None
  2273 ;; Auto vars:     Size  Location     Type
  2274 ;;		None
  2275 ;; Return value:  Size  Location     Type
  2276 ;;                  1    wreg      void 
  2277 ;; Registers used:
  2278 ;;		wreg, status,2, status,0
  2279 ;; Tracked objects:
  2280 ;;		On entry : 0/0
  2281 ;;		On exit  : 0/0
  2282 ;;		Unchanged: 0/0
  2283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2287 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2288 ;;Total ram usage:        0 bytes
  2289 ;; Hardware stack levels used: 1
  2290 ;; Hardware stack levels required when called: 2
  2291 ;; This function calls:
  2292 ;;		Nothing
  2293 ;; This function is called by:
  2294 ;;		_set_line_pin_level
  2295 ;; This function uses a non-reentrant model
  2296 ;;
  2297                           
  2298                           	psect	text21
  2299   00218A                     __ptext21:
  2300                           	callstack 0
  2301   00218A                     _set_pin_r3_0:
  2302                           	callstack 25
  2303   00218A                     
  2304                           ;src/keyboard_contol_module/keyboard_control.c: 290:     PORTC = PORTC & ~0x08;
  2305   00218A  508E               	movf	142,w,c	;volatile
  2306   00218C  0BF7               	andlw	247
  2307   00218E  6E8E               	movwf	142,c	;volatile
  2308   002190  0012               	return		;funcret
  2309   002192                     __end_of_set_pin_r3_0:
  2310                           	callstack 0
  2311                           
  2312 ;; *************** function _set_pin_r2_1 *****************
  2313 ;; Defined at:
  2314 ;;		line 317 in file "src/keyboard_contol_module/keyboard_control.c"
  2315 ;; Parameters:    Size  Location     Type
  2316 ;;		None
  2317 ;; Auto vars:     Size  Location     Type
  2318 ;;		None
  2319 ;; Return value:  Size  Location     Type
  2320 ;;                  1    wreg      void 
  2321 ;; Registers used:
  2322 ;;		wreg, status,2, status,0
  2323 ;; Tracked objects:
  2324 ;;		On entry : 0/0
  2325 ;;		On exit  : 0/0
  2326 ;;		Unchanged: 0/0
  2327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2331 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2332 ;;Total ram usage:        0 bytes
  2333 ;; Hardware stack levels used: 1
  2334 ;; Hardware stack levels required when called: 2
  2335 ;; This function calls:
  2336 ;;		Nothing
  2337 ;; This function is called by:
  2338 ;;		_set_line_pin_level
  2339 ;; This function uses a non-reentrant model
  2340 ;;
  2341                           
  2342                           	psect	text22
  2343   002192                     __ptext22:
  2344                           	callstack 0
  2345   002192                     _set_pin_r2_1:
  2346                           	callstack 25
  2347   002192                     
  2348                           ;src/keyboard_contol_module/keyboard_control.c: 319:     PORTD = PORTD | 0x04;
  2349   002192  508F               	movf	143,w,c	;volatile
  2350   002194  0904               	iorlw	4
  2351   002196  6E8F               	movwf	143,c	;volatile
  2352   002198  0012               	return		;funcret
  2353   00219A                     __end_of_set_pin_r2_1:
  2354                           	callstack 0
  2355                           
  2356 ;; *************** function _set_pin_r2_0 *****************
  2357 ;; Defined at:
  2358 ;;		line 284 in file "src/keyboard_contol_module/keyboard_control.c"
  2359 ;; Parameters:    Size  Location     Type
  2360 ;;		None
  2361 ;; Auto vars:     Size  Location     Type
  2362 ;;		None
  2363 ;; Return value:  Size  Location     Type
  2364 ;;                  1    wreg      void 
  2365 ;; Registers used:
  2366 ;;		wreg, status,2, status,0
  2367 ;; Tracked objects:
  2368 ;;		On entry : 0/0
  2369 ;;		On exit  : 0/0
  2370 ;;		Unchanged: 0/0
  2371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2375 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2376 ;;Total ram usage:        0 bytes
  2377 ;; Hardware stack levels used: 1
  2378 ;; Hardware stack levels required when called: 2
  2379 ;; This function calls:
  2380 ;;		Nothing
  2381 ;; This function is called by:
  2382 ;;		_set_line_pin_level
  2383 ;; This function uses a non-reentrant model
  2384 ;;
  2385                           
  2386                           	psect	text23
  2387   00219A                     __ptext23:
  2388                           	callstack 0
  2389   00219A                     _set_pin_r2_0:
  2390                           	callstack 25
  2391   00219A                     
  2392                           ;src/keyboard_contol_module/keyboard_control.c: 286:     PORTD = PORTD & ~0x04;
  2393   00219A  508F               	movf	143,w,c	;volatile
  2394   00219C  0BFB               	andlw	251
  2395   00219E  6E8F               	movwf	143,c	;volatile
  2396   0021A0  0012               	return		;funcret
  2397   0021A2                     __end_of_set_pin_r2_0:
  2398                           	callstack 0
  2399                           
  2400 ;; *************** function _set_pin_r1_1 *****************
  2401 ;; Defined at:
  2402 ;;		line 313 in file "src/keyboard_contol_module/keyboard_control.c"
  2403 ;; Parameters:    Size  Location     Type
  2404 ;;		None
  2405 ;; Auto vars:     Size  Location     Type
  2406 ;;		None
  2407 ;; Return value:  Size  Location     Type
  2408 ;;                  1    wreg      void 
  2409 ;; Registers used:
  2410 ;;		wreg, status,2, status,0
  2411 ;; Tracked objects:
  2412 ;;		On entry : 0/0
  2413 ;;		On exit  : 0/0
  2414 ;;		Unchanged: 0/0
  2415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2420 ;;Total ram usage:        0 bytes
  2421 ;; Hardware stack levels used: 1
  2422 ;; Hardware stack levels required when called: 2
  2423 ;; This function calls:
  2424 ;;		Nothing
  2425 ;; This function is called by:
  2426 ;;		_set_line_pin_level
  2427 ;; This function uses a non-reentrant model
  2428 ;;
  2429                           
  2430                           	psect	text24
  2431   0021A2                     __ptext24:
  2432                           	callstack 0
  2433   0021A2                     _set_pin_r1_1:
  2434                           	callstack 25
  2435   0021A2                     
  2436                           ;src/keyboard_contol_module/keyboard_control.c: 315:     PORTD = PORTD | 0x08;
  2437   0021A2  508F               	movf	143,w,c	;volatile
  2438   0021A4  0908               	iorlw	8
  2439   0021A6  6E8F               	movwf	143,c	;volatile
  2440   0021A8  0012               	return		;funcret
  2441   0021AA                     __end_of_set_pin_r1_1:
  2442                           	callstack 0
  2443                           
  2444 ;; *************** function _set_pin_r1_0 *****************
  2445 ;; Defined at:
  2446 ;;		line 280 in file "src/keyboard_contol_module/keyboard_control.c"
  2447 ;; Parameters:    Size  Location     Type
  2448 ;;		None
  2449 ;; Auto vars:     Size  Location     Type
  2450 ;;		None
  2451 ;; Return value:  Size  Location     Type
  2452 ;;                  1    wreg      void 
  2453 ;; Registers used:
  2454 ;;		wreg, status,2, status,0
  2455 ;; Tracked objects:
  2456 ;;		On entry : 0/0
  2457 ;;		On exit  : 0/0
  2458 ;;		Unchanged: 0/0
  2459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2463 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2464 ;;Total ram usage:        0 bytes
  2465 ;; Hardware stack levels used: 1
  2466 ;; Hardware stack levels required when called: 2
  2467 ;; This function calls:
  2468 ;;		Nothing
  2469 ;; This function is called by:
  2470 ;;		_set_line_pin_level
  2471 ;; This function uses a non-reentrant model
  2472 ;;
  2473                           
  2474                           	psect	text25
  2475   0021AA                     __ptext25:
  2476                           	callstack 0
  2477   0021AA                     _set_pin_r1_0:
  2478                           	callstack 25
  2479   0021AA                     
  2480                           ;src/keyboard_contol_module/keyboard_control.c: 282:     PORTD = PORTD & ~0x08;
  2481   0021AA  508F               	movf	143,w,c	;volatile
  2482   0021AC  0BF7               	andlw	247
  2483   0021AE  6E8F               	movwf	143,c	;volatile
  2484   0021B0  0012               	return		;funcret
  2485   0021B2                     __end_of_set_pin_r1_0:
  2486                           	callstack 0
  2487                           
  2488 ;; *************** function _set_column_pins_as_input *****************
  2489 ;; Defined at:
  2490 ;;		line 429 in file "src/keyboard_contol_module/keyboard_control.c"
  2491 ;; Parameters:    Size  Location     Type
  2492 ;;		None
  2493 ;; Auto vars:     Size  Location     Type
  2494 ;;		None
  2495 ;; Return value:  Size  Location     Type
  2496 ;;                  1    wreg      void 
  2497 ;; Registers used:
  2498 ;;		wreg, status,2, status,0, cstack
  2499 ;; Tracked objects:
  2500 ;;		On entry : 0/0
  2501 ;;		On exit  : 0/0
  2502 ;;		Unchanged: 0/0
  2503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2508 ;;Total ram usage:        0 bytes
  2509 ;; Hardware stack levels used: 1
  2510 ;; Hardware stack levels required when called: 3
  2511 ;; This function calls:
  2512 ;;		_set_pin_c1_input
  2513 ;;		_set_pin_c2_input
  2514 ;;		_set_pin_c3_input
  2515 ;;		_set_pin_c4_input
  2516 ;; This function is called by:
  2517 ;;		_check_line_to_column_pins
  2518 ;; This function uses a non-reentrant model
  2519 ;;
  2520                           
  2521                           	psect	text26
  2522   001FDA                     __ptext26:
  2523                           	callstack 0
  2524   001FDA                     _set_column_pins_as_input:
  2525                           	callstack 25
  2526   001FDA                     
  2527                           ;src/keyboard_contol_module/keyboard_control.c: 431:     set_pin_c1_input();
  2528   001FDA  EC48  F010         	call	_set_pin_c1_input	;wreg free
  2529                           
  2530                           ;src/keyboard_contol_module/keyboard_control.c: 432:     set_pin_c2_input();
  2531   001FDE  EC40  F010         	call	_set_pin_c2_input	;wreg free
  2532                           
  2533                           ;src/keyboard_contol_module/keyboard_control.c: 433:     set_pin_c3_input();
  2534   001FE2  EC38  F010         	call	_set_pin_c3_input	;wreg free
  2535                           
  2536                           ;src/keyboard_contol_module/keyboard_control.c: 434:     set_pin_c4_input();
  2537   001FE6  EC30  F010         	call	_set_pin_c4_input	;wreg free
  2538   001FEA  0012               	return		;funcret
  2539   001FEC                     __end_of_set_column_pins_as_input:
  2540                           	callstack 0
  2541                           
  2542 ;; *************** function _set_pin_c4_input *****************
  2543 ;; Defined at:
  2544 ;;		line 102 in file "src/keyboard_contol_module/keyboard_control.c"
  2545 ;; Parameters:    Size  Location     Type
  2546 ;;		None
  2547 ;; Auto vars:     Size  Location     Type
  2548 ;;		None
  2549 ;; Return value:  Size  Location     Type
  2550 ;;                  1    wreg      void 
  2551 ;; Registers used:
  2552 ;;		wreg, status,2, status,0
  2553 ;; Tracked objects:
  2554 ;;		On entry : 0/0
  2555 ;;		On exit  : 0/0
  2556 ;;		Unchanged: 0/0
  2557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2562 ;;Total ram usage:        0 bytes
  2563 ;; Hardware stack levels used: 1
  2564 ;; Hardware stack levels required when called: 2
  2565 ;; This function calls:
  2566 ;;		Nothing
  2567 ;; This function is called by:
  2568 ;;		_set_column_pins_as_input
  2569 ;; This function uses a non-reentrant model
  2570 ;;
  2571                           
  2572                           	psect	text27
  2573   002060                     __ptext27:
  2574                           	callstack 0
  2575   002060                     _set_pin_c4_input:
  2576                           	callstack 25
  2577   002060                     
  2578                           ;src/keyboard_contol_module/keyboard_control.c: 104:     TRISD = TRISD | 0x80;
  2579   002060  508A               	movf	138,w,c	;volatile
  2580   002062  0980               	iorlw	128
  2581   002064  6E8A               	movwf	138,c	;volatile
  2582                           
  2583                           ;src/keyboard_contol_module/keyboard_control.c: 105:     WPUD = WPUD | 0x80;
  2584   002066  010F               	movlb	15	; () banked
  2585   002068  5120               	movf	32,w,b	;volatile
  2586   00206A  0980               	iorlw	128
  2587   00206C  6F20               	movwf	32,b	;volatile
  2588   00206E                     
  2589                           ; BSR set to: 15
  2590   00206E  0012               	return		;funcret
  2591   002070                     __end_of_set_pin_c4_input:
  2592                           	callstack 0
  2593                           
  2594 ;; *************** function _set_pin_c3_input *****************
  2595 ;; Defined at:
  2596 ;;		line 107 in file "src/keyboard_contol_module/keyboard_control.c"
  2597 ;; Parameters:    Size  Location     Type
  2598 ;;		None
  2599 ;; Auto vars:     Size  Location     Type
  2600 ;;		None
  2601 ;; Return value:  Size  Location     Type
  2602 ;;                  1    wreg      void 
  2603 ;; Registers used:
  2604 ;;		wreg, status,2, status,0
  2605 ;; Tracked objects:
  2606 ;;		On entry : 0/0
  2607 ;;		On exit  : 0/0
  2608 ;;		Unchanged: 0/0
  2609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2613 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2614 ;;Total ram usage:        0 bytes
  2615 ;; Hardware stack levels used: 1
  2616 ;; Hardware stack levels required when called: 2
  2617 ;; This function calls:
  2618 ;;		Nothing
  2619 ;; This function is called by:
  2620 ;;		_set_column_pins_as_input
  2621 ;; This function uses a non-reentrant model
  2622 ;;
  2623                           
  2624                           	psect	text28
  2625   002070                     __ptext28:
  2626                           	callstack 0
  2627   002070                     _set_pin_c3_input:
  2628                           	callstack 25
  2629   002070                     
  2630                           ;src/keyboard_contol_module/keyboard_control.c: 109:     TRISD = TRISD | 0x40;
  2631   002070  508A               	movf	138,w,c	;volatile
  2632   002072  0940               	iorlw	64
  2633   002074  6E8A               	movwf	138,c	;volatile
  2634                           
  2635                           ;src/keyboard_contol_module/keyboard_control.c: 110:     WPUD = WPUD | 0x40;
  2636   002076  010F               	movlb	15	; () banked
  2637   002078  5120               	movf	32,w,b	;volatile
  2638   00207A  0940               	iorlw	64
  2639   00207C  6F20               	movwf	32,b	;volatile
  2640   00207E                     
  2641                           ; BSR set to: 15
  2642   00207E  0012               	return		;funcret
  2643   002080                     __end_of_set_pin_c3_input:
  2644                           	callstack 0
  2645                           
  2646 ;; *************** function _set_pin_c2_input *****************
  2647 ;; Defined at:
  2648 ;;		line 112 in file "src/keyboard_contol_module/keyboard_control.c"
  2649 ;; Parameters:    Size  Location     Type
  2650 ;;		None
  2651 ;; Auto vars:     Size  Location     Type
  2652 ;;		None
  2653 ;; Return value:  Size  Location     Type
  2654 ;;                  1    wreg      void 
  2655 ;; Registers used:
  2656 ;;		wreg, status,2, status,0
  2657 ;; Tracked objects:
  2658 ;;		On entry : 0/0
  2659 ;;		On exit  : 0/0
  2660 ;;		Unchanged: 0/0
  2661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2665 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2666 ;;Total ram usage:        0 bytes
  2667 ;; Hardware stack levels used: 1
  2668 ;; Hardware stack levels required when called: 2
  2669 ;; This function calls:
  2670 ;;		Nothing
  2671 ;; This function is called by:
  2672 ;;		_set_column_pins_as_input
  2673 ;; This function uses a non-reentrant model
  2674 ;;
  2675                           
  2676                           	psect	text29
  2677   002080                     __ptext29:
  2678                           	callstack 0
  2679   002080                     _set_pin_c2_input:
  2680                           	callstack 25
  2681   002080                     
  2682                           ;src/keyboard_contol_module/keyboard_control.c: 114:     TRISD = TRISD | 0x20;
  2683   002080  508A               	movf	138,w,c	;volatile
  2684   002082  0920               	iorlw	32
  2685   002084  6E8A               	movwf	138,c	;volatile
  2686                           
  2687                           ;src/keyboard_contol_module/keyboard_control.c: 115:     WPUD = WPUD | 0x20;
  2688   002086  010F               	movlb	15	; () banked
  2689   002088  5120               	movf	32,w,b	;volatile
  2690   00208A  0920               	iorlw	32
  2691   00208C  6F20               	movwf	32,b	;volatile
  2692   00208E                     
  2693                           ; BSR set to: 15
  2694   00208E  0012               	return		;funcret
  2695   002090                     __end_of_set_pin_c2_input:
  2696                           	callstack 0
  2697                           
  2698 ;; *************** function _set_pin_c1_input *****************
  2699 ;; Defined at:
  2700 ;;		line 117 in file "src/keyboard_contol_module/keyboard_control.c"
  2701 ;; Parameters:    Size  Location     Type
  2702 ;;		None
  2703 ;; Auto vars:     Size  Location     Type
  2704 ;;		None
  2705 ;; Return value:  Size  Location     Type
  2706 ;;                  1    wreg      void 
  2707 ;; Registers used:
  2708 ;;		wreg, status,2, status,0
  2709 ;; Tracked objects:
  2710 ;;		On entry : 0/0
  2711 ;;		On exit  : 0/0
  2712 ;;		Unchanged: 0/0
  2713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2718 ;;Total ram usage:        0 bytes
  2719 ;; Hardware stack levels used: 1
  2720 ;; Hardware stack levels required when called: 2
  2721 ;; This function calls:
  2722 ;;		Nothing
  2723 ;; This function is called by:
  2724 ;;		_set_column_pins_as_input
  2725 ;; This function uses a non-reentrant model
  2726 ;;
  2727                           
  2728                           	psect	text30
  2729   002090                     __ptext30:
  2730                           	callstack 0
  2731   002090                     _set_pin_c1_input:
  2732                           	callstack 25
  2733   002090                     
  2734                           ;src/keyboard_contol_module/keyboard_control.c: 119:     TRISD = TRISD | 0x10;
  2735   002090  508A               	movf	138,w,c	;volatile
  2736   002092  0910               	iorlw	16
  2737   002094  6E8A               	movwf	138,c	;volatile
  2738                           
  2739                           ;src/keyboard_contol_module/keyboard_control.c: 120:     WPUD = WPUD | 0x10;
  2740   002096  010F               	movlb	15	; () banked
  2741   002098  5120               	movf	32,w,b	;volatile
  2742   00209A  0910               	iorlw	16
  2743   00209C  6F20               	movwf	32,b	;volatile
  2744   00209E                     
  2745                           ; BSR set to: 15
  2746   00209E  0012               	return		;funcret
  2747   0020A0                     __end_of_set_pin_c1_input:
  2748                           	callstack 0
  2749                           
  2750 ;; *************** function _check_column_to_line_pins *****************
  2751 ;; Defined at:
  2752 ;;		line 920 in file "src/keyboard_contol_module/keyboard_control.c"
  2753 ;; Parameters:    Size  Location     Type
  2754 ;;		None
  2755 ;; Auto vars:     Size  Location     Type
  2756 ;;  column_index    1   14[COMRAM] unsigned char 
  2757 ;;  line_index      1   13[COMRAM] unsigned char 
  2758 ;; Return value:  Size  Location     Type
  2759 ;;                  1    wreg      void 
  2760 ;; Registers used:
  2761 ;;		wreg, status,2, status,0, cstack
  2762 ;; Tracked objects:
  2763 ;;		On entry : 0/0
  2764 ;;		On exit  : 0/0
  2765 ;;		Unchanged: 0/0
  2766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2768 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2770 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2771 ;;Total ram usage:        2 bytes
  2772 ;; Hardware stack levels used: 1
  2773 ;; Hardware stack levels required when called: 5
  2774 ;; This function calls:
  2775 ;;		_set_column_pin_level
  2776 ;;		_set_column_pins_as_output
  2777 ;;		_set_line_pins_as_input
  2778 ;;		_update_buttons_checker_column_to_line
  2779 ;; This function is called by:
  2780 ;;		_buttons_procedure_interface
  2781 ;; This function uses a non-reentrant model
  2782 ;;
  2783                           
  2784                           	psect	text31
  2785   00196C                     __ptext31:
  2786                           	callstack 0
  2787   00196C                     _check_column_to_line_pins:
  2788                           	callstack 24
  2789   00196C                     
  2790                           ;src/keyboard_contol_module/keyboard_control.c: 922:     unsigned char line_index;;src/k
      +                          eyboard_contol_module/keyboard_control.c: 923:     unsigned char column_index;;src/keybo
      +                          ard_contol_module/keyboard_control.c: 925:     set_column_pins_as_output();
  2791   00196C  ECFF  F00F         	call	_set_column_pins_as_output	;wreg free
  2792                           
  2793                           ;src/keyboard_contol_module/keyboard_control.c: 926:     set_line_pins_as_input();
  2794   001970  ECF6  F00F         	call	_set_line_pins_as_input	;wreg free
  2795   001974                     
  2796                           ;src/keyboard_contol_module/keyboard_control.c: 928:     for (column_index = 0; column_i
      +                          ndex < 4; column_index++)
  2797   001974  0E00               	movlw	0
  2798   001976  6E3F               	movwf	check_column_to_line_pins@column_index^0,c
  2799   001978                     l2737:
  2800                           
  2801                           ;src/keyboard_contol_module/keyboard_control.c: 929:     {;src/keyboard_contol_module/ke
      +                          yboard_control.c: 930:         set_column_pin_level(column_index);
  2802   001978  503F               	movf	check_column_to_line_pins@column_index^0,w,c
  2803   00197A  ECD6  F00B         	call	_set_column_pin_level
  2804   00197E                     
  2805                           ;src/keyboard_contol_module/keyboard_control.c: 932:         for (line_index = 0; line_i
      +                          ndex < 4; line_index++)
  2806   00197E  0E00               	movlw	0
  2807   001980  6E3E               	movwf	check_column_to_line_pins@line_index^0,c
  2808   001982                     l2745:
  2809                           
  2810                           ;src/keyboard_contol_module/keyboard_control.c: 933:         {;src/keyboard_contol_modul
      +                          e/keyboard_control.c: 934:             update_buttons_checker_column_to_line(line_index,
      +                           column_index);
  2811   001982  C03F  F039         	movff	check_column_to_line_pins@column_index,update_buttons_checker_column_to_line@colu
      +                          mn_index
  2812   001986  503E               	movf	check_column_to_line_pins@line_index^0,w,c
  2813   001988  EC67  F009         	call	_update_buttons_checker_column_to_line
  2814   00198C                     
  2815                           ;src/keyboard_contol_module/keyboard_control.c: 935:         }
  2816   00198C  2A3E               	incf	check_column_to_line_pins@line_index^0,f,c
  2817   00198E  0E03               	movlw	3
  2818   001990  643E               	cpfsgt	check_column_to_line_pins@line_index^0,c
  2819   001992  EFCD  F00C         	goto	u491
  2820   001996  EFCF  F00C         	goto	u490
  2821   00199A                     u491:
  2822   00199A  EFC1  F00C         	goto	l2745
  2823   00199E                     u490:
  2824   00199E                     
  2825                           ;src/keyboard_contol_module/keyboard_control.c: 936:     }
  2826   00199E  2A3F               	incf	check_column_to_line_pins@column_index^0,f,c
  2827   0019A0  0E03               	movlw	3
  2828   0019A2  643F               	cpfsgt	check_column_to_line_pins@column_index^0,c
  2829   0019A4  EFD6  F00C         	goto	u501
  2830   0019A8  EFD8  F00C         	goto	u500
  2831   0019AC                     u501:
  2832   0019AC  EFBC  F00C         	goto	l2737
  2833   0019B0                     u500:
  2834   0019B0  0012               	return		;funcret
  2835   0019B2                     __end_of_check_column_to_line_pins:
  2836                           	callstack 0
  2837                           
  2838 ;; *************** function _update_buttons_checker_column_to_line *****************
  2839 ;; Defined at:
  2840 ;;		line 816 in file "src/keyboard_contol_module/keyboard_control.c"
  2841 ;; Parameters:    Size  Location     Type
  2842 ;;  line_index      1    wreg     unsigned char 
  2843 ;;  column_index    1    8[COMRAM] unsigned char 
  2844 ;; Auto vars:     Size  Location     Type
  2845 ;;  line_index      1   12[COMRAM] unsigned char 
  2846 ;;  button          1   11[COMRAM] unsigned char 
  2847 ;;  column_level    1   10[COMRAM] unsigned char 
  2848 ;;  line_level_v    1    9[COMRAM] unsigned char 
  2849 ;; Return value:  Size  Location     Type
  2850 ;;                  1    wreg      void 
  2851 ;; Registers used:
  2852 ;;		wreg, status,2, status,0, cstack
  2853 ;; Tracked objects:
  2854 ;;		On entry : 0/0
  2855 ;;		On exit  : 0/0
  2856 ;;		Unchanged: 0/0
  2857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  2858 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2859 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2861 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2862 ;;Total ram usage:        5 bytes
  2863 ;; Hardware stack levels used: 1
  2864 ;; Hardware stack levels required when called: 4
  2865 ;; This function calls:
  2866 ;;		_get_button_pressed_column_to_line
  2867 ;;		_get_column_pin_level
  2868 ;;		_get_line_pin_level
  2869 ;; This function is called by:
  2870 ;;		_check_column_to_line_pins
  2871 ;; This function uses a non-reentrant model
  2872 ;;
  2873                           
  2874                           	psect	text32
  2875   0012CE                     __ptext32:
  2876                           	callstack 0
  2877   0012CE                     _update_buttons_checker_column_to_line:
  2878                           	callstack 24
  2879                           
  2880                           ;incstack = 0
  2881                           ;update_buttons_checker_column_to_line@line_index stored from wreg
  2882   0012CE  6E3D               	movwf	update_buttons_checker_column_to_line@line_index^0,c
  2883   0012D0                     
  2884                           ;src/keyboard_contol_module/keyboard_control.c: 822:     column_level_value = get_column
      +                          _pin_level(column_index);
  2885   0012D0  5039               	movf	update_buttons_checker_column_to_line@column_index^0,w,c
  2886   0012D2  EC41  F00C         	call	_get_column_pin_level
  2887   0012D6  6E3B               	movwf	update_buttons_checker_column_to_line@column_level_value^0,c
  2888                           
  2889                           ;src/keyboard_contol_module/keyboard_control.c: 823:     line_level_value = get_line_pin
      +                          _level(line_index);
  2890   0012D8  503D               	movf	update_buttons_checker_column_to_line@line_index^0,w,c
  2891   0012DA  EC15  F00C         	call	_get_line_pin_level
  2892   0012DE  6E3A               	movwf	update_buttons_checker_column_to_line@line_level_value^0,c
  2893   0012E0                     
  2894                           ;src/keyboard_contol_module/keyboard_control.c: 825:     if ((line_level_value == 0) && 
      +                          (column_level_value == 0))
  2895   0012E0  503A               	movf	update_buttons_checker_column_to_line@line_level_value^0,w,c
  2896   0012E2  A4D8               	btfss	status,2,c
  2897   0012E4  EF76  F009         	goto	u441
  2898   0012E8  EF78  F009         	goto	u440
  2899   0012EC                     u441:
  2900   0012EC  EF47  F00A         	goto	l484
  2901   0012F0                     u440:
  2902   0012F0  503B               	movf	update_buttons_checker_column_to_line@column_level_value^0,w,c
  2903   0012F2  A4D8               	btfss	status,2,c
  2904   0012F4  EF7E  F009         	goto	u451
  2905   0012F8  EF80  F009         	goto	u450
  2906   0012FC                     u451:
  2907   0012FC  EF47  F00A         	goto	l484
  2908   001300                     u450:
  2909   001300                     
  2910                           ;src/keyboard_contol_module/keyboard_control.c: 826:     {;src/keyboard_contol_module/ke
      +                          yboard_control.c: 827:         button = get_button_pressed_column_to_line(line_index, co
      +                          lumn_index);
  2911   001300  C039  F036         	movff	update_buttons_checker_column_to_line@column_index,get_button_pressed_column_to_l
      +                          ine@column_index
  2912   001304  503D               	movf	update_buttons_checker_column_to_line@line_index^0,w,c
  2913   001306  ECF0  F00A         	call	_get_button_pressed_column_to_line
  2914   00130A  6E3C               	movwf	update_buttons_checker_column_to_line@button^0,c
  2915                           
  2916                           ;src/keyboard_contol_module/keyboard_control.c: 829:         switch (button)
  2917   00130C  EF00  F00A         	goto	l2687
  2918   001310                     l2653:
  2919                           
  2920                           ;src/keyboard_contol_module/keyboard_control.c: 832:                 buttons_pressed_ind
      +                          icator_column_to_line = buttons_pressed_indicator_column_to_line | 0x8000;
  2921   001310  0E00               	movlw	0
  2922   001312  100D               	iorwf	_buttons_pressed_indicator_column_to_line^0,w,c
  2923   001314  6E0D               	movwf	_buttons_pressed_indicator_column_to_line^0,c
  2924   001316  0E80               	movlw	128
  2925   001318  100E               	iorwf	(_buttons_pressed_indicator_column_to_line+1)^0,w,c
  2926   00131A  6E0E               	movwf	(_buttons_pressed_indicator_column_to_line+1)^0,c
  2927                           
  2928                           ;src/keyboard_contol_module/keyboard_control.c: 833:                 break;
  2929   00131C  EF47  F00A         	goto	l484
  2930   001320                     l2655:
  2931                           
  2932                           ;src/keyboard_contol_module/keyboard_control.c: 836:                 buttons_pressed_ind
      +                          icator_column_to_line = buttons_pressed_indicator_column_to_line | 0x4000;
  2933   001320  0E00               	movlw	0
  2934   001322  100D               	iorwf	_buttons_pressed_indicator_column_to_line^0,w,c
  2935   001324  6E0D               	movwf	_buttons_pressed_indicator_column_to_line^0,c
  2936   001326  0E40               	movlw	64
  2937   001328  100E               	iorwf	(_buttons_pressed_indicator_column_to_line+1)^0,w,c
  2938   00132A  6E0E               	movwf	(_buttons_pressed_indicator_column_to_line+1)^0,c
  2939                           
  2940                           ;src/keyboard_contol_module/keyboard_control.c: 837:                 break;
  2941   00132C  EF47  F00A         	goto	l484
  2942   001330                     l2657:
  2943                           
  2944                           ;src/keyboard_contol_module/keyboard_control.c: 840:                 buttons_pressed_ind
      +                          icator_column_to_line = buttons_pressed_indicator_column_to_line | 0x2000;
  2945   001330  0E00               	movlw	0
  2946   001332  100D               	iorwf	_buttons_pressed_indicator_column_to_line^0,w,c
  2947   001334  6E0D               	movwf	_buttons_pressed_indicator_column_to_line^0,c
  2948   001336  0E20               	movlw	32
  2949   001338  100E               	iorwf	(_buttons_pressed_indicator_column_to_line+1)^0,w,c
  2950   00133A  6E0E               	movwf	(_buttons_pressed_indicator_column_to_line+1)^0,c
  2951                           
  2952                           ;src/keyboard_contol_module/keyboard_control.c: 841:                 break;
  2953   00133C  EF47  F00A         	goto	l484
  2954   001340                     l2659:
  2955                           
  2956                           ;src/keyboard_contol_module/keyboard_control.c: 844:                 buttons_pressed_ind
      +                          icator_column_to_line = buttons_pressed_indicator_column_to_line | 0x1000;
  2957   001340  0E00               	movlw	0
  2958   001342  100D               	iorwf	_buttons_pressed_indicator_column_to_line^0,w,c
  2959   001344  6E0D               	movwf	_buttons_pressed_indicator_column_to_line^0,c
  2960   001346  0E10               	movlw	16
  2961   001348  100E               	iorwf	(_buttons_pressed_indicator_column_to_line+1)^0,w,c
  2962   00134A  6E0E               	movwf	(_buttons_pressed_indicator_column_to_line+1)^0,c
  2963                           
  2964                           ;src/keyboard_contol_module/keyboard_control.c: 845:                 break;
  2965   00134C  EF47  F00A         	goto	l484
  2966   001350                     l2661:
  2967                           
  2968                           ;src/keyboard_contol_module/keyboard_control.c: 848:                 buttons_pressed_ind
      +                          icator_column_to_line = buttons_pressed_indicator_column_to_line | 0x0800;
  2969   001350  0E00               	movlw	0
  2970   001352  100D               	iorwf	_buttons_pressed_indicator_column_to_line^0,w,c
  2971   001354  6E0D               	movwf	_buttons_pressed_indicator_column_to_line^0,c
  2972   001356  0E08               	movlw	8
  2973   001358  100E               	iorwf	(_buttons_pressed_indicator_column_to_line+1)^0,w,c
  2974   00135A  6E0E               	movwf	(_buttons_pressed_indicator_column_to_line+1)^0,c
  2975                           
  2976                           ;src/keyboard_contol_module/keyboard_control.c: 849:                 break;
  2977   00135C  EF47  F00A         	goto	l484
  2978   001360                     l2663:
  2979                           
  2980                           ;src/keyboard_contol_module/keyboard_control.c: 852:                 buttons_pressed_ind
      +                          icator_column_to_line = buttons_pressed_indicator_column_to_line | 0x0400;
  2981   001360  0E00               	movlw	0
  2982   001362  100D               	iorwf	_buttons_pressed_indicator_column_to_line^0,w,c
  2983   001364  6E0D               	movwf	_buttons_pressed_indicator_column_to_line^0,c
  2984   001366  0E04               	movlw	4
  2985   001368  100E               	iorwf	(_buttons_pressed_indicator_column_to_line+1)^0,w,c
  2986   00136A  6E0E               	movwf	(_buttons_pressed_indicator_column_to_line+1)^0,c
  2987                           
  2988                           ;src/keyboard_contol_module/keyboard_control.c: 853:                 break;
  2989   00136C  EF47  F00A         	goto	l484
  2990   001370                     l2665:
  2991                           
  2992                           ;src/keyboard_contol_module/keyboard_control.c: 856:                 buttons_pressed_ind
      +                          icator_column_to_line = buttons_pressed_indicator_column_to_line | 0x0200;
  2993   001370  0E00               	movlw	0
  2994   001372  100D               	iorwf	_buttons_pressed_indicator_column_to_line^0,w,c
  2995   001374  6E0D               	movwf	_buttons_pressed_indicator_column_to_line^0,c
  2996   001376  0E02               	movlw	2
  2997   001378  100E               	iorwf	(_buttons_pressed_indicator_column_to_line+1)^0,w,c
  2998   00137A  6E0E               	movwf	(_buttons_pressed_indicator_column_to_line+1)^0,c
  2999                           
  3000                           ;src/keyboard_contol_module/keyboard_control.c: 857:                 break;
  3001   00137C  EF47  F00A         	goto	l484
  3002   001380                     l2667:
  3003                           
  3004                           ;src/keyboard_contol_module/keyboard_control.c: 860:                 buttons_pressed_ind
      +                          icator_column_to_line = buttons_pressed_indicator_column_to_line | 0x0100;
  3005   001380  0E00               	movlw	0
  3006   001382  100D               	iorwf	_buttons_pressed_indicator_column_to_line^0,w,c
  3007   001384  6E0D               	movwf	_buttons_pressed_indicator_column_to_line^0,c
  3008   001386  0E01               	movlw	1
  3009   001388  100E               	iorwf	(_buttons_pressed_indicator_column_to_line+1)^0,w,c
  3010   00138A  6E0E               	movwf	(_buttons_pressed_indicator_column_to_line+1)^0,c
  3011                           
  3012                           ;src/keyboard_contol_module/keyboard_control.c: 861:                 break;
  3013   00138C  EF47  F00A         	goto	l484
  3014   001390                     l2669:
  3015                           
  3016                           ;src/keyboard_contol_module/keyboard_control.c: 864:                 buttons_pressed_ind
      +                          icator_column_to_line = buttons_pressed_indicator_column_to_line | 0x0080;
  3017   001390  0E80               	movlw	128
  3018   001392  100D               	iorwf	_buttons_pressed_indicator_column_to_line^0,w,c
  3019   001394  6E0D               	movwf	_buttons_pressed_indicator_column_to_line^0,c
  3020   001396  500E               	movf	(_buttons_pressed_indicator_column_to_line+1)^0,w,c
  3021   001398  6E0E               	movwf	(_buttons_pressed_indicator_column_to_line+1)^0,c
  3022                           
  3023                           ;src/keyboard_contol_module/keyboard_control.c: 865:                 break;
  3024   00139A  EF47  F00A         	goto	l484
  3025   00139E                     l2671:
  3026                           
  3027                           ;src/keyboard_contol_module/keyboard_control.c: 868:                 buttons_pressed_ind
      +                          icator_column_to_line = buttons_pressed_indicator_column_to_line | 0x0040;
  3028   00139E  0E40               	movlw	64
  3029   0013A0  100D               	iorwf	_buttons_pressed_indicator_column_to_line^0,w,c
  3030   0013A2  6E0D               	movwf	_buttons_pressed_indicator_column_to_line^0,c
  3031   0013A4  500E               	movf	(_buttons_pressed_indicator_column_to_line+1)^0,w,c
  3032   0013A6  6E0E               	movwf	(_buttons_pressed_indicator_column_to_line+1)^0,c
  3033                           
  3034                           ;src/keyboard_contol_module/keyboard_control.c: 869:                 break;
  3035   0013A8  EF47  F00A         	goto	l484
  3036   0013AC                     l2673:
  3037                           
  3038                           ;src/keyboard_contol_module/keyboard_control.c: 872:                 buttons_pressed_ind
      +                          icator_column_to_line = buttons_pressed_indicator_column_to_line | 0x0020;
  3039   0013AC  0E20               	movlw	32
  3040   0013AE  100D               	iorwf	_buttons_pressed_indicator_column_to_line^0,w,c
  3041   0013B0  6E0D               	movwf	_buttons_pressed_indicator_column_to_line^0,c
  3042   0013B2  500E               	movf	(_buttons_pressed_indicator_column_to_line+1)^0,w,c
  3043   0013B4  6E0E               	movwf	(_buttons_pressed_indicator_column_to_line+1)^0,c
  3044                           
  3045                           ;src/keyboard_contol_module/keyboard_control.c: 873:                 break;
  3046   0013B6  EF47  F00A         	goto	l484
  3047   0013BA                     l2675:
  3048                           
  3049                           ;src/keyboard_contol_module/keyboard_control.c: 876:                 buttons_pressed_ind
      +                          icator_column_to_line = buttons_pressed_indicator_column_to_line | 0x0010;
  3050   0013BA  0E10               	movlw	16
  3051   0013BC  100D               	iorwf	_buttons_pressed_indicator_column_to_line^0,w,c
  3052   0013BE  6E0D               	movwf	_buttons_pressed_indicator_column_to_line^0,c
  3053   0013C0  500E               	movf	(_buttons_pressed_indicator_column_to_line+1)^0,w,c
  3054   0013C2  6E0E               	movwf	(_buttons_pressed_indicator_column_to_line+1)^0,c
  3055                           
  3056                           ;src/keyboard_contol_module/keyboard_control.c: 877:                 break;
  3057   0013C4  EF47  F00A         	goto	l484
  3058   0013C8                     l2677:
  3059                           
  3060                           ;src/keyboard_contol_module/keyboard_control.c: 880:                 buttons_pressed_ind
      +                          icator_column_to_line = buttons_pressed_indicator_column_to_line | 0x0008;
  3061   0013C8  0E08               	movlw	8
  3062   0013CA  100D               	iorwf	_buttons_pressed_indicator_column_to_line^0,w,c
  3063   0013CC  6E0D               	movwf	_buttons_pressed_indicator_column_to_line^0,c
  3064   0013CE  500E               	movf	(_buttons_pressed_indicator_column_to_line+1)^0,w,c
  3065   0013D0  6E0E               	movwf	(_buttons_pressed_indicator_column_to_line+1)^0,c
  3066                           
  3067                           ;src/keyboard_contol_module/keyboard_control.c: 881:                 break;
  3068   0013D2  EF47  F00A         	goto	l484
  3069   0013D6                     l2679:
  3070                           
  3071                           ;src/keyboard_contol_module/keyboard_control.c: 884:                 buttons_pressed_ind
      +                          icator_column_to_line = buttons_pressed_indicator_column_to_line | 0x0004;
  3072   0013D6  0E04               	movlw	4
  3073   0013D8  100D               	iorwf	_buttons_pressed_indicator_column_to_line^0,w,c
  3074   0013DA  6E0D               	movwf	_buttons_pressed_indicator_column_to_line^0,c
  3075   0013DC  500E               	movf	(_buttons_pressed_indicator_column_to_line+1)^0,w,c
  3076   0013DE  6E0E               	movwf	(_buttons_pressed_indicator_column_to_line+1)^0,c
  3077                           
  3078                           ;src/keyboard_contol_module/keyboard_control.c: 885:                 break;
  3079   0013E0  EF47  F00A         	goto	l484
  3080   0013E4                     l2681:
  3081                           
  3082                           ;src/keyboard_contol_module/keyboard_control.c: 888:                 buttons_pressed_ind
      +                          icator_column_to_line = buttons_pressed_indicator_column_to_line | 0x0002;
  3083   0013E4  0E02               	movlw	2
  3084   0013E6  100D               	iorwf	_buttons_pressed_indicator_column_to_line^0,w,c
  3085   0013E8  6E0D               	movwf	_buttons_pressed_indicator_column_to_line^0,c
  3086   0013EA  500E               	movf	(_buttons_pressed_indicator_column_to_line+1)^0,w,c
  3087   0013EC  6E0E               	movwf	(_buttons_pressed_indicator_column_to_line+1)^0,c
  3088                           
  3089                           ;src/keyboard_contol_module/keyboard_control.c: 889:                 break;
  3090   0013EE  EF47  F00A         	goto	l484
  3091   0013F2                     l2683:
  3092                           
  3093                           ;src/keyboard_contol_module/keyboard_control.c: 892:                 buttons_pressed_ind
      +                          icator_column_to_line = buttons_pressed_indicator_column_to_line | 0x0001;
  3094   0013F2  0E01               	movlw	1
  3095   0013F4  100D               	iorwf	_buttons_pressed_indicator_column_to_line^0,w,c
  3096   0013F6  6E0D               	movwf	_buttons_pressed_indicator_column_to_line^0,c
  3097   0013F8  500E               	movf	(_buttons_pressed_indicator_column_to_line+1)^0,w,c
  3098   0013FA  6E0E               	movwf	(_buttons_pressed_indicator_column_to_line+1)^0,c
  3099                           
  3100                           ;src/keyboard_contol_module/keyboard_control.c: 893:                 break;
  3101   0013FC  EF47  F00A         	goto	l484
  3102   001400                     l2687:
  3103   001400  503C               	movf	update_buttons_checker_column_to_line@button^0,w,c
  3104                           
  3105                           ; Switch size 1, requested type "simple"
  3106                           ; Number of cases is 17, Range of values is 0 to 255
  3107                           ; switch strategies available:
  3108                           ; Name         Instructions Cycles
  3109                           ; simple_byte           52    27 (average)
  3110                           ;	Chosen strategy is simple_byte
  3111   001402  0A00               	xorlw	0	; case 0
  3112   001404  B4D8               	btfsc	status,2,c
  3113   001406  EFF9  F009         	goto	l2683
  3114   00140A  0A01               	xorlw	1	; case 1
  3115   00140C  B4D8               	btfsc	status,2,c
  3116   00140E  EFF2  F009         	goto	l2681
  3117   001412  0A03               	xorlw	3	; case 2
  3118   001414  B4D8               	btfsc	status,2,c
  3119   001416  EFEB  F009         	goto	l2679
  3120   00141A  0A01               	xorlw	1	; case 3
  3121   00141C  B4D8               	btfsc	status,2,c
  3122   00141E  EFE4  F009         	goto	l2677
  3123   001422  0A07               	xorlw	7	; case 4
  3124   001424  B4D8               	btfsc	status,2,c
  3125   001426  EFDD  F009         	goto	l2675
  3126   00142A  0A01               	xorlw	1	; case 5
  3127   00142C  B4D8               	btfsc	status,2,c
  3128   00142E  EFD6  F009         	goto	l2673
  3129   001432  0A03               	xorlw	3	; case 6
  3130   001434  B4D8               	btfsc	status,2,c
  3131   001436  EFCF  F009         	goto	l2671
  3132   00143A  0A01               	xorlw	1	; case 7
  3133   00143C  B4D8               	btfsc	status,2,c
  3134   00143E  EFC8  F009         	goto	l2669
  3135   001442  0A0F               	xorlw	15	; case 8
  3136   001444  B4D8               	btfsc	status,2,c
  3137   001446  EFC0  F009         	goto	l2667
  3138   00144A  0A01               	xorlw	1	; case 9
  3139   00144C  B4D8               	btfsc	status,2,c
  3140   00144E  EFB8  F009         	goto	l2665
  3141   001452  0A03               	xorlw	3	; case 10
  3142   001454  B4D8               	btfsc	status,2,c
  3143   001456  EFB0  F009         	goto	l2663
  3144   00145A  0A01               	xorlw	1	; case 11
  3145   00145C  B4D8               	btfsc	status,2,c
  3146   00145E  EFA8  F009         	goto	l2661
  3147   001462  0A07               	xorlw	7	; case 12
  3148   001464  B4D8               	btfsc	status,2,c
  3149   001466  EFA0  F009         	goto	l2659
  3150   00146A  0A01               	xorlw	1	; case 13
  3151   00146C  B4D8               	btfsc	status,2,c
  3152   00146E  EF98  F009         	goto	l2657
  3153   001472  0A03               	xorlw	3	; case 14
  3154   001474  B4D8               	btfsc	status,2,c
  3155   001476  EF90  F009         	goto	l2655
  3156   00147A  0A01               	xorlw	1	; case 15
  3157   00147C  B4D8               	btfsc	status,2,c
  3158   00147E  EF88  F009         	goto	l2653
  3159   001482  0AF0               	xorlw	240	; case 255
  3160   001484  B4D8               	btfsc	status,2,c
  3161   001486  EF47  F00A         	goto	l484
  3162   00148A  EF47  F00A         	goto	l484
  3163   00148E                     l484:
  3164   00148E  0012               	return		;funcret
  3165   001490                     __end_of_update_buttons_checker_column_to_line:
  3166                           	callstack 0
  3167                           
  3168 ;; *************** function _get_line_pin_level *****************
  3169 ;; Defined at:
  3170 ;;		line 444 in file "src/keyboard_contol_module/keyboard_control.c"
  3171 ;; Parameters:    Size  Location     Type
  3172 ;;  line_index      1    wreg     unsigned char 
  3173 ;; Auto vars:     Size  Location     Type
  3174 ;;  line_index      1    6[COMRAM] unsigned char 
  3175 ;;  output          1    7[COMRAM] unsigned char 
  3176 ;; Return value:  Size  Location     Type
  3177 ;;                  1    wreg      unsigned char 
  3178 ;; Registers used:
  3179 ;;		wreg, status,2, status,0, cstack
  3180 ;; Tracked objects:
  3181 ;;		On entry : 0/0
  3182 ;;		On exit  : 0/0
  3183 ;;		Unchanged: 0/0
  3184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3186 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3188 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3189 ;;Total ram usage:        2 bytes
  3190 ;; Hardware stack levels used: 1
  3191 ;; Hardware stack levels required when called: 3
  3192 ;; This function calls:
  3193 ;;		_get_pin_r1_state
  3194 ;;		_get_pin_r2_state
  3195 ;;		_get_pin_r3_state
  3196 ;;		_get_pin_r4_state
  3197 ;; This function is called by:
  3198 ;;		_update_buttons_checker_line_to_column
  3199 ;;		_update_buttons_checker_column_to_line
  3200 ;; This function uses a non-reentrant model
  3201 ;;
  3202                           
  3203                           	psect	text33
  3204   00182A                     __ptext33:
  3205                           	callstack 0
  3206   00182A                     _get_line_pin_level:
  3207                           	callstack 24
  3208                           
  3209                           ;incstack = 0
  3210                           ;get_line_pin_level@line_index stored from wreg
  3211   00182A  6E37               	movwf	get_line_pin_level@line_index^0,c
  3212   00182C                     
  3213                           ;src/keyboard_contol_module/keyboard_control.c: 444: unsigned char get_line_pin_level (u
      +                          nsigned char line_index);src/keyboard_contol_module/keyboard_control.c: 445: {;src/keybo
      +                          ard_contol_module/keyboard_control.c: 446:     unsigned char output;;src/keyboard_contol
      +                          _module/keyboard_control.c: 448:     switch (line_index)
  3214   00182C  EF2C  F00C         	goto	l1605
  3215   001830                     l1595:
  3216                           
  3217                           ;src/keyboard_contol_module/keyboard_control.c: 451:             output = get_pin_r1_sta
      +                          te();
  3218   001830  EC85  F00F         	call	_get_pin_r1_state	;wreg free
  3219   001834  6E38               	movwf	get_line_pin_level@output^0,c
  3220                           
  3221                           ;src/keyboard_contol_module/keyboard_control.c: 452:             break;
  3222   001836  EF3F  F00C         	goto	l1607
  3223   00183A                     l1597:
  3224                           
  3225                           ;src/keyboard_contol_module/keyboard_control.c: 455:             output = get_pin_r2_sta
      +                          te();
  3226   00183A  EC76  F00F         	call	_get_pin_r2_state	;wreg free
  3227   00183E  6E38               	movwf	get_line_pin_level@output^0,c
  3228                           
  3229                           ;src/keyboard_contol_module/keyboard_control.c: 456:             break;
  3230   001840  EF3F  F00C         	goto	l1607
  3231   001844                     l1599:
  3232                           
  3233                           ;src/keyboard_contol_module/keyboard_control.c: 459:             output = get_pin_r3_sta
      +                          te();
  3234   001844  EC67  F00F         	call	_get_pin_r3_state	;wreg free
  3235   001848  6E38               	movwf	get_line_pin_level@output^0,c
  3236                           
  3237                           ;src/keyboard_contol_module/keyboard_control.c: 460:             break;
  3238   00184A  EF3F  F00C         	goto	l1607
  3239   00184E                     l1601:
  3240                           
  3241                           ;src/keyboard_contol_module/keyboard_control.c: 463:             output = get_pin_r4_sta
      +                          te();
  3242   00184E  EC58  F00F         	call	_get_pin_r4_state	;wreg free
  3243   001852  6E38               	movwf	get_line_pin_level@output^0,c
  3244                           
  3245                           ;src/keyboard_contol_module/keyboard_control.c: 464:             break;
  3246   001854  EF3F  F00C         	goto	l1607
  3247   001858                     l1605:
  3248   001858  5037               	movf	get_line_pin_level@line_index^0,w,c
  3249                           
  3250                           ; Switch size 1, requested type "simple"
  3251                           ; Number of cases is 4, Range of values is 0 to 3
  3252                           ; switch strategies available:
  3253                           ; Name         Instructions Cycles
  3254                           ; simple_byte           13     7 (average)
  3255                           ;	Chosen strategy is simple_byte
  3256   00185A  0A00               	xorlw	0	; case 0
  3257   00185C  B4D8               	btfsc	status,2,c
  3258   00185E  EF18  F00C         	goto	l1595
  3259   001862  0A01               	xorlw	1	; case 1
  3260   001864  B4D8               	btfsc	status,2,c
  3261   001866  EF1D  F00C         	goto	l1597
  3262   00186A  0A03               	xorlw	3	; case 2
  3263   00186C  B4D8               	btfsc	status,2,c
  3264   00186E  EF22  F00C         	goto	l1599
  3265   001872  0A01               	xorlw	1	; case 3
  3266   001874  B4D8               	btfsc	status,2,c
  3267   001876  EF27  F00C         	goto	l1601
  3268   00187A  EF3F  F00C         	goto	l1607
  3269   00187E                     l1607:
  3270                           
  3271                           ;src/keyboard_contol_module/keyboard_control.c: 467:     return output;
  3272   00187E  5038               	movf	get_line_pin_level@output^0,w,c
  3273   001880  0012               	return		;funcret
  3274   001882                     __end_of_get_line_pin_level:
  3275                           	callstack 0
  3276                           
  3277 ;; *************** function _get_pin_r4_state *****************
  3278 ;; Defined at:
  3279 ;;		line 248 in file "src/keyboard_contol_module/keyboard_control.c"
  3280 ;; Parameters:    Size  Location     Type
  3281 ;;		None
  3282 ;; Auto vars:     Size  Location     Type
  3283 ;;  output          1    5[COMRAM] unsigned char 
  3284 ;; Return value:  Size  Location     Type
  3285 ;;                  1    wreg      unsigned char 
  3286 ;; Registers used:
  3287 ;;		wreg, status,2
  3288 ;; Tracked objects:
  3289 ;;		On entry : 0/0
  3290 ;;		On exit  : 0/0
  3291 ;;		Unchanged: 0/0
  3292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3294 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3296 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3297 ;;Total ram usage:        1 bytes
  3298 ;; Hardware stack levels used: 1
  3299 ;; Hardware stack levels required when called: 2
  3300 ;; This function calls:
  3301 ;;		Nothing
  3302 ;; This function is called by:
  3303 ;;		_get_line_pin_level
  3304 ;; This function uses a non-reentrant model
  3305 ;;
  3306                           
  3307                           	psect	text34
  3308   001EB0                     __ptext34:
  3309                           	callstack 0
  3310   001EB0                     _get_pin_r4_state:
  3311                           	callstack 24
  3312   001EB0                     
  3313                           ;src/keyboard_contol_module/keyboard_control.c: 250:     unsigned char output;;src/keybo
      +                          ard_contol_module/keyboard_control.c: 252:     if ((PORTD & 0x02) == 0x02)
  3314   001EB0  A28F               	btfss	143,1,c	;volatile
  3315   001EB2  EF5D  F00F         	goto	u81
  3316   001EB6  EF5F  F00F         	goto	u80
  3317   001EBA                     u81:
  3318   001EBA  EF63  F00F         	goto	l1523
  3319   001EBE                     u80:
  3320   001EBE                     
  3321                           ;src/keyboard_contol_module/keyboard_control.c: 253:     {;src/keyboard_contol_module/ke
      +                          yboard_control.c: 254:         output = 1;
  3322   001EBE  0E01               	movlw	1
  3323   001EC0  6E36               	movwf	get_pin_r4_state@output^0,c
  3324                           
  3325                           ;src/keyboard_contol_module/keyboard_control.c: 255:     }
  3326   001EC2  EF65  F00F         	goto	l267
  3327   001EC6                     l1523:
  3328                           
  3329                           ;src/keyboard_contol_module/keyboard_control.c: 257:     {;src/keyboard_contol_module/ke
      +                          yboard_control.c: 258:         output = 0;
  3330   001EC6  0E00               	movlw	0
  3331   001EC8  6E36               	movwf	get_pin_r4_state@output^0,c
  3332   001ECA                     l267:
  3333                           
  3334                           ;src/keyboard_contol_module/keyboard_control.c: 261:     return output;
  3335   001ECA  5036               	movf	get_pin_r4_state@output^0,w,c
  3336   001ECC  0012               	return		;funcret
  3337   001ECE                     __end_of_get_pin_r4_state:
  3338                           	callstack 0
  3339                           
  3340 ;; *************** function _get_pin_r3_state *****************
  3341 ;; Defined at:
  3342 ;;		line 233 in file "src/keyboard_contol_module/keyboard_control.c"
  3343 ;; Parameters:    Size  Location     Type
  3344 ;;		None
  3345 ;; Auto vars:     Size  Location     Type
  3346 ;;  output          1    5[COMRAM] unsigned char 
  3347 ;; Return value:  Size  Location     Type
  3348 ;;                  1    wreg      unsigned char 
  3349 ;; Registers used:
  3350 ;;		wreg, status,2
  3351 ;; Tracked objects:
  3352 ;;		On entry : 0/0
  3353 ;;		On exit  : 0/0
  3354 ;;		Unchanged: 0/0
  3355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3357 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3359 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3360 ;;Total ram usage:        1 bytes
  3361 ;; Hardware stack levels used: 1
  3362 ;; Hardware stack levels required when called: 2
  3363 ;; This function calls:
  3364 ;;		Nothing
  3365 ;; This function is called by:
  3366 ;;		_get_line_pin_level
  3367 ;; This function uses a non-reentrant model
  3368 ;;
  3369                           
  3370                           	psect	text35
  3371   001ECE                     __ptext35:
  3372                           	callstack 0
  3373   001ECE                     _get_pin_r3_state:
  3374                           	callstack 24
  3375   001ECE                     
  3376                           ;src/keyboard_contol_module/keyboard_control.c: 235:     unsigned char output;;src/keybo
      +                          ard_contol_module/keyboard_control.c: 237:     if ((PORTC & 0x08) == 0x08)
  3377   001ECE  A68E               	btfss	142,3,c	;volatile
  3378   001ED0  EF6C  F00F         	goto	u71
  3379   001ED4  EF6E  F00F         	goto	u70
  3380   001ED8                     u71:
  3381   001ED8  EF72  F00F         	goto	l1515
  3382   001EDC                     u70:
  3383   001EDC                     
  3384                           ;src/keyboard_contol_module/keyboard_control.c: 238:     {;src/keyboard_contol_module/ke
      +                          yboard_control.c: 239:         output = 1;
  3385   001EDC  0E01               	movlw	1
  3386   001EDE  6E36               	movwf	get_pin_r3_state@output^0,c
  3387                           
  3388                           ;src/keyboard_contol_module/keyboard_control.c: 240:     }
  3389   001EE0  EF74  F00F         	goto	l262
  3390   001EE4                     l1515:
  3391                           
  3392                           ;src/keyboard_contol_module/keyboard_control.c: 242:     {;src/keyboard_contol_module/ke
      +                          yboard_control.c: 243:         output = 0;
  3393   001EE4  0E00               	movlw	0
  3394   001EE6  6E36               	movwf	get_pin_r3_state@output^0,c
  3395   001EE8                     l262:
  3396                           
  3397                           ;src/keyboard_contol_module/keyboard_control.c: 246:     return output;
  3398   001EE8  5036               	movf	get_pin_r3_state@output^0,w,c
  3399   001EEA  0012               	return		;funcret
  3400   001EEC                     __end_of_get_pin_r3_state:
  3401                           	callstack 0
  3402                           
  3403 ;; *************** function _get_pin_r2_state *****************
  3404 ;; Defined at:
  3405 ;;		line 218 in file "src/keyboard_contol_module/keyboard_control.c"
  3406 ;; Parameters:    Size  Location     Type
  3407 ;;		None
  3408 ;; Auto vars:     Size  Location     Type
  3409 ;;  output          1    5[COMRAM] unsigned char 
  3410 ;; Return value:  Size  Location     Type
  3411 ;;                  1    wreg      unsigned char 
  3412 ;; Registers used:
  3413 ;;		wreg, status,2
  3414 ;; Tracked objects:
  3415 ;;		On entry : 0/0
  3416 ;;		On exit  : 0/0
  3417 ;;		Unchanged: 0/0
  3418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3420 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3422 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3423 ;;Total ram usage:        1 bytes
  3424 ;; Hardware stack levels used: 1
  3425 ;; Hardware stack levels required when called: 2
  3426 ;; This function calls:
  3427 ;;		Nothing
  3428 ;; This function is called by:
  3429 ;;		_get_line_pin_level
  3430 ;; This function uses a non-reentrant model
  3431 ;;
  3432                           
  3433                           	psect	text36
  3434   001EEC                     __ptext36:
  3435                           	callstack 0
  3436   001EEC                     _get_pin_r2_state:
  3437                           	callstack 24
  3438   001EEC                     
  3439                           ;src/keyboard_contol_module/keyboard_control.c: 220:     unsigned char output;;src/keybo
      +                          ard_contol_module/keyboard_control.c: 222:     if ((PORTD & 0x04) == 0x04)
  3440   001EEC  A48F               	btfss	143,2,c	;volatile
  3441   001EEE  EF7B  F00F         	goto	u61
  3442   001EF2  EF7D  F00F         	goto	u60
  3443   001EF6                     u61:
  3444   001EF6  EF81  F00F         	goto	l1507
  3445   001EFA                     u60:
  3446   001EFA                     
  3447                           ;src/keyboard_contol_module/keyboard_control.c: 223:     {;src/keyboard_contol_module/ke
      +                          yboard_control.c: 224:         output = 1;
  3448   001EFA  0E01               	movlw	1
  3449   001EFC  6E36               	movwf	get_pin_r2_state@output^0,c
  3450                           
  3451                           ;src/keyboard_contol_module/keyboard_control.c: 225:     }
  3452   001EFE  EF83  F00F         	goto	l257
  3453   001F02                     l1507:
  3454                           
  3455                           ;src/keyboard_contol_module/keyboard_control.c: 227:     {;src/keyboard_contol_module/ke
      +                          yboard_control.c: 228:         output = 0;
  3456   001F02  0E00               	movlw	0
  3457   001F04  6E36               	movwf	get_pin_r2_state@output^0,c
  3458   001F06                     l257:
  3459                           
  3460                           ;src/keyboard_contol_module/keyboard_control.c: 231:     return output;
  3461   001F06  5036               	movf	get_pin_r2_state@output^0,w,c
  3462   001F08  0012               	return		;funcret
  3463   001F0A                     __end_of_get_pin_r2_state:
  3464                           	callstack 0
  3465                           
  3466 ;; *************** function _get_pin_r1_state *****************
  3467 ;; Defined at:
  3468 ;;		line 203 in file "src/keyboard_contol_module/keyboard_control.c"
  3469 ;; Parameters:    Size  Location     Type
  3470 ;;		None
  3471 ;; Auto vars:     Size  Location     Type
  3472 ;;  output          1    5[COMRAM] unsigned char 
  3473 ;; Return value:  Size  Location     Type
  3474 ;;                  1    wreg      unsigned char 
  3475 ;; Registers used:
  3476 ;;		wreg, status,2
  3477 ;; Tracked objects:
  3478 ;;		On entry : 0/0
  3479 ;;		On exit  : 0/0
  3480 ;;		Unchanged: 0/0
  3481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3483 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3485 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3486 ;;Total ram usage:        1 bytes
  3487 ;; Hardware stack levels used: 1
  3488 ;; Hardware stack levels required when called: 2
  3489 ;; This function calls:
  3490 ;;		Nothing
  3491 ;; This function is called by:
  3492 ;;		_get_line_pin_level
  3493 ;; This function uses a non-reentrant model
  3494 ;;
  3495                           
  3496                           	psect	text37
  3497   001F0A                     __ptext37:
  3498                           	callstack 0
  3499   001F0A                     _get_pin_r1_state:
  3500                           	callstack 24
  3501   001F0A                     
  3502                           ;src/keyboard_contol_module/keyboard_control.c: 205:     unsigned char output;;src/keybo
      +                          ard_contol_module/keyboard_control.c: 207:     if ((PORTD & 0x08) == 0x08)
  3503   001F0A  A68F               	btfss	143,3,c	;volatile
  3504   001F0C  EF8A  F00F         	goto	u51
  3505   001F10  EF8C  F00F         	goto	u50
  3506   001F14                     u51:
  3507   001F14  EF90  F00F         	goto	l1499
  3508   001F18                     u50:
  3509   001F18                     
  3510                           ;src/keyboard_contol_module/keyboard_control.c: 208:     {;src/keyboard_contol_module/ke
      +                          yboard_control.c: 209:         output = 1;
  3511   001F18  0E01               	movlw	1
  3512   001F1A  6E36               	movwf	get_pin_r1_state@output^0,c
  3513                           
  3514                           ;src/keyboard_contol_module/keyboard_control.c: 210:     }
  3515   001F1C  EF92  F00F         	goto	l252
  3516   001F20                     l1499:
  3517                           
  3518                           ;src/keyboard_contol_module/keyboard_control.c: 212:     {;src/keyboard_contol_module/ke
      +                          yboard_control.c: 213:         output = 0;
  3519   001F20  0E00               	movlw	0
  3520   001F22  6E36               	movwf	get_pin_r1_state@output^0,c
  3521   001F24                     l252:
  3522                           
  3523                           ;src/keyboard_contol_module/keyboard_control.c: 216:     return output;
  3524   001F24  5036               	movf	get_pin_r1_state@output^0,w,c
  3525   001F26  0012               	return		;funcret
  3526   001F28                     __end_of_get_pin_r1_state:
  3527                           	callstack 0
  3528                           
  3529 ;; *************** function _get_column_pin_level *****************
  3530 ;; Defined at:
  3531 ;;		line 469 in file "src/keyboard_contol_module/keyboard_control.c"
  3532 ;; Parameters:    Size  Location     Type
  3533 ;;  column_index    1    wreg     unsigned char 
  3534 ;; Auto vars:     Size  Location     Type
  3535 ;;  column_index    1    6[COMRAM] unsigned char 
  3536 ;;  output          1    7[COMRAM] unsigned char 
  3537 ;; Return value:  Size  Location     Type
  3538 ;;                  1    wreg      unsigned char 
  3539 ;; Registers used:
  3540 ;;		wreg, status,2, status,0, cstack
  3541 ;; Tracked objects:
  3542 ;;		On entry : 0/0
  3543 ;;		On exit  : 0/0
  3544 ;;		Unchanged: 0/0
  3545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3547 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3549 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3550 ;;Total ram usage:        2 bytes
  3551 ;; Hardware stack levels used: 1
  3552 ;; Hardware stack levels required when called: 3
  3553 ;; This function calls:
  3554 ;;		_get_pin_c1_state
  3555 ;;		_get_pin_c2_state
  3556 ;;		_get_pin_c3_state
  3557 ;;		_get_pin_c4_state
  3558 ;; This function is called by:
  3559 ;;		_update_buttons_checker_line_to_column
  3560 ;;		_update_buttons_checker_column_to_line
  3561 ;; This function uses a non-reentrant model
  3562 ;;
  3563                           
  3564                           	psect	text38
  3565   001882                     __ptext38:
  3566                           	callstack 0
  3567   001882                     _get_column_pin_level:
  3568                           	callstack 24
  3569                           
  3570                           ;incstack = 0
  3571                           ;get_column_pin_level@column_index stored from wreg
  3572   001882  6E37               	movwf	get_column_pin_level@column_index^0,c
  3573   001884                     
  3574                           ;src/keyboard_contol_module/keyboard_control.c: 469: unsigned char get_column_pin_level 
      +                          (unsigned char column_index);src/keyboard_contol_module/keyboard_control.c: 470: {;src/k
      +                          eyboard_contol_module/keyboard_control.c: 471:     unsigned char output;;src/keyboard_co
      +                          ntol_module/keyboard_control.c: 473:     switch (column_index)
  3575   001884  EF58  F00C         	goto	l1623
  3576   001888                     l1613:
  3577                           
  3578                           ;src/keyboard_contol_module/keyboard_control.c: 476:             output = get_pin_c1_sta
      +                          te();
  3579   001888  ECC1  F00F         	call	_get_pin_c1_state	;wreg free
  3580   00188C  6E38               	movwf	get_column_pin_level@output^0,c
  3581                           
  3582                           ;src/keyboard_contol_module/keyboard_control.c: 477:             break;
  3583   00188E  EF6B  F00C         	goto	l1625
  3584   001892                     l1615:
  3585                           
  3586                           ;src/keyboard_contol_module/keyboard_control.c: 480:             output = get_pin_c2_sta
      +                          te();
  3587   001892  ECB2  F00F         	call	_get_pin_c2_state	;wreg free
  3588   001896  6E38               	movwf	get_column_pin_level@output^0,c
  3589                           
  3590                           ;src/keyboard_contol_module/keyboard_control.c: 481:             break;
  3591   001898  EF6B  F00C         	goto	l1625
  3592   00189C                     l1617:
  3593                           
  3594                           ;src/keyboard_contol_module/keyboard_control.c: 484:             output = get_pin_c3_sta
      +                          te();
  3595   00189C  ECA3  F00F         	call	_get_pin_c3_state	;wreg free
  3596   0018A0  6E38               	movwf	get_column_pin_level@output^0,c
  3597                           
  3598                           ;src/keyboard_contol_module/keyboard_control.c: 485:             break;
  3599   0018A2  EF6B  F00C         	goto	l1625
  3600   0018A6                     l1619:
  3601                           
  3602                           ;src/keyboard_contol_module/keyboard_control.c: 488:             output = get_pin_c4_sta
      +                          te();
  3603   0018A6  EC94  F00F         	call	_get_pin_c4_state	;wreg free
  3604   0018AA  6E38               	movwf	get_column_pin_level@output^0,c
  3605                           
  3606                           ;src/keyboard_contol_module/keyboard_control.c: 489:             break;
  3607   0018AC  EF6B  F00C         	goto	l1625
  3608   0018B0                     l1623:
  3609   0018B0  5037               	movf	get_column_pin_level@column_index^0,w,c
  3610                           
  3611                           ; Switch size 1, requested type "simple"
  3612                           ; Number of cases is 4, Range of values is 0 to 3
  3613                           ; switch strategies available:
  3614                           ; Name         Instructions Cycles
  3615                           ; simple_byte           13     7 (average)
  3616                           ;	Chosen strategy is simple_byte
  3617   0018B2  0A00               	xorlw	0	; case 0
  3618   0018B4  B4D8               	btfsc	status,2,c
  3619   0018B6  EF44  F00C         	goto	l1613
  3620   0018BA  0A01               	xorlw	1	; case 1
  3621   0018BC  B4D8               	btfsc	status,2,c
  3622   0018BE  EF49  F00C         	goto	l1615
  3623   0018C2  0A03               	xorlw	3	; case 2
  3624   0018C4  B4D8               	btfsc	status,2,c
  3625   0018C6  EF4E  F00C         	goto	l1617
  3626   0018CA  0A01               	xorlw	1	; case 3
  3627   0018CC  B4D8               	btfsc	status,2,c
  3628   0018CE  EF53  F00C         	goto	l1619
  3629   0018D2  EF6B  F00C         	goto	l1625
  3630   0018D6                     l1625:
  3631                           
  3632                           ;src/keyboard_contol_module/keyboard_control.c: 492:     return output;
  3633   0018D6  5038               	movf	get_column_pin_level@output^0,w,c
  3634   0018D8  0012               	return		;funcret
  3635   0018DA                     __end_of_get_column_pin_level:
  3636                           	callstack 0
  3637                           
  3638 ;; *************** function _get_pin_c4_state *****************
  3639 ;; Defined at:
  3640 ;;		line 143 in file "src/keyboard_contol_module/keyboard_control.c"
  3641 ;; Parameters:    Size  Location     Type
  3642 ;;		None
  3643 ;; Auto vars:     Size  Location     Type
  3644 ;;  output          1    5[COMRAM] unsigned char 
  3645 ;; Return value:  Size  Location     Type
  3646 ;;                  1    wreg      unsigned char 
  3647 ;; Registers used:
  3648 ;;		wreg, status,2
  3649 ;; Tracked objects:
  3650 ;;		On entry : 0/0
  3651 ;;		On exit  : 0/0
  3652 ;;		Unchanged: 0/0
  3653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3655 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3657 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3658 ;;Total ram usage:        1 bytes
  3659 ;; Hardware stack levels used: 1
  3660 ;; Hardware stack levels required when called: 2
  3661 ;; This function calls:
  3662 ;;		Nothing
  3663 ;; This function is called by:
  3664 ;;		_get_column_pin_level
  3665 ;; This function uses a non-reentrant model
  3666 ;;
  3667                           
  3668                           	psect	text39
  3669   001F28                     __ptext39:
  3670                           	callstack 0
  3671   001F28                     _get_pin_c4_state:
  3672                           	callstack 24
  3673   001F28                     
  3674                           ;src/keyboard_contol_module/keyboard_control.c: 145:     unsigned char output;;src/keybo
      +                          ard_contol_module/keyboard_control.c: 147:     if ((PORTD & 0x80) == 0x80)
  3675   001F28  AE8F               	btfss	143,7,c	;volatile
  3676   001F2A  EF99  F00F         	goto	u11
  3677   001F2E  EF9B  F00F         	goto	u10
  3678   001F32                     u11:
  3679   001F32  EF9F  F00F         	goto	l1467
  3680   001F36                     u10:
  3681   001F36                     
  3682                           ;src/keyboard_contol_module/keyboard_control.c: 148:     {;src/keyboard_contol_module/ke
      +                          yboard_control.c: 149:         output = 1;
  3683   001F36  0E01               	movlw	1
  3684   001F38  6E36               	movwf	get_pin_c4_state@output^0,c
  3685                           
  3686                           ;src/keyboard_contol_module/keyboard_control.c: 150:     }
  3687   001F3A  EFA1  F00F         	goto	l232
  3688   001F3E                     l1467:
  3689                           
  3690                           ;src/keyboard_contol_module/keyboard_control.c: 152:     {;src/keyboard_contol_module/ke
      +                          yboard_control.c: 153:         output = 0;
  3691   001F3E  0E00               	movlw	0
  3692   001F40  6E36               	movwf	get_pin_c4_state@output^0,c
  3693   001F42                     l232:
  3694                           
  3695                           ;src/keyboard_contol_module/keyboard_control.c: 156:     return output;
  3696   001F42  5036               	movf	get_pin_c4_state@output^0,w,c
  3697   001F44  0012               	return		;funcret
  3698   001F46                     __end_of_get_pin_c4_state:
  3699                           	callstack 0
  3700                           
  3701 ;; *************** function _get_pin_c3_state *****************
  3702 ;; Defined at:
  3703 ;;		line 158 in file "src/keyboard_contol_module/keyboard_control.c"
  3704 ;; Parameters:    Size  Location     Type
  3705 ;;		None
  3706 ;; Auto vars:     Size  Location     Type
  3707 ;;  output          1    5[COMRAM] unsigned char 
  3708 ;; Return value:  Size  Location     Type
  3709 ;;                  1    wreg      unsigned char 
  3710 ;; Registers used:
  3711 ;;		wreg, status,2
  3712 ;; Tracked objects:
  3713 ;;		On entry : 0/0
  3714 ;;		On exit  : 0/0
  3715 ;;		Unchanged: 0/0
  3716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3718 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3720 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3721 ;;Total ram usage:        1 bytes
  3722 ;; Hardware stack levels used: 1
  3723 ;; Hardware stack levels required when called: 2
  3724 ;; This function calls:
  3725 ;;		Nothing
  3726 ;; This function is called by:
  3727 ;;		_get_column_pin_level
  3728 ;; This function uses a non-reentrant model
  3729 ;;
  3730                           
  3731                           	psect	text40
  3732   001F46                     __ptext40:
  3733                           	callstack 0
  3734   001F46                     _get_pin_c3_state:
  3735                           	callstack 24
  3736   001F46                     
  3737                           ;src/keyboard_contol_module/keyboard_control.c: 160:     unsigned char output;;src/keybo
      +                          ard_contol_module/keyboard_control.c: 162:     if ((PORTD & 0x40) == 0x40)
  3738   001F46  AC8F               	btfss	143,6,c	;volatile
  3739   001F48  EFA8  F00F         	goto	u21
  3740   001F4C  EFAA  F00F         	goto	u20
  3741   001F50                     u21:
  3742   001F50  EFAE  F00F         	goto	l1475
  3743   001F54                     u20:
  3744   001F54                     
  3745                           ;src/keyboard_contol_module/keyboard_control.c: 163:     {;src/keyboard_contol_module/ke
      +                          yboard_control.c: 164:         output = 1;
  3746   001F54  0E01               	movlw	1
  3747   001F56  6E36               	movwf	get_pin_c3_state@output^0,c
  3748                           
  3749                           ;src/keyboard_contol_module/keyboard_control.c: 165:     }
  3750   001F58  EFB0  F00F         	goto	l237
  3751   001F5C                     l1475:
  3752                           
  3753                           ;src/keyboard_contol_module/keyboard_control.c: 167:     {;src/keyboard_contol_module/ke
      +                          yboard_control.c: 168:         output = 0;
  3754   001F5C  0E00               	movlw	0
  3755   001F5E  6E36               	movwf	get_pin_c3_state@output^0,c
  3756   001F60                     l237:
  3757                           
  3758                           ;src/keyboard_contol_module/keyboard_control.c: 171:     return output;
  3759   001F60  5036               	movf	get_pin_c3_state@output^0,w,c
  3760   001F62  0012               	return		;funcret
  3761   001F64                     __end_of_get_pin_c3_state:
  3762                           	callstack 0
  3763                           
  3764 ;; *************** function _get_pin_c2_state *****************
  3765 ;; Defined at:
  3766 ;;		line 173 in file "src/keyboard_contol_module/keyboard_control.c"
  3767 ;; Parameters:    Size  Location     Type
  3768 ;;		None
  3769 ;; Auto vars:     Size  Location     Type
  3770 ;;  output          1    5[COMRAM] unsigned char 
  3771 ;; Return value:  Size  Location     Type
  3772 ;;                  1    wreg      unsigned char 
  3773 ;; Registers used:
  3774 ;;		wreg, status,2
  3775 ;; Tracked objects:
  3776 ;;		On entry : 0/0
  3777 ;;		On exit  : 0/0
  3778 ;;		Unchanged: 0/0
  3779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3781 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3783 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3784 ;;Total ram usage:        1 bytes
  3785 ;; Hardware stack levels used: 1
  3786 ;; Hardware stack levels required when called: 2
  3787 ;; This function calls:
  3788 ;;		Nothing
  3789 ;; This function is called by:
  3790 ;;		_get_column_pin_level
  3791 ;; This function uses a non-reentrant model
  3792 ;;
  3793                           
  3794                           	psect	text41
  3795   001F64                     __ptext41:
  3796                           	callstack 0
  3797   001F64                     _get_pin_c2_state:
  3798                           	callstack 24
  3799   001F64                     
  3800                           ;src/keyboard_contol_module/keyboard_control.c: 175:     unsigned char output;;src/keybo
      +                          ard_contol_module/keyboard_control.c: 177:     if ((PORTD & 0x20) == 0x20)
  3801   001F64  AA8F               	btfss	143,5,c	;volatile
  3802   001F66  EFB7  F00F         	goto	u31
  3803   001F6A  EFB9  F00F         	goto	u30
  3804   001F6E                     u31:
  3805   001F6E  EFBD  F00F         	goto	l1483
  3806   001F72                     u30:
  3807   001F72                     
  3808                           ;src/keyboard_contol_module/keyboard_control.c: 178:     {;src/keyboard_contol_module/ke
      +                          yboard_control.c: 179:         output = 1;
  3809   001F72  0E01               	movlw	1
  3810   001F74  6E36               	movwf	get_pin_c2_state@output^0,c
  3811                           
  3812                           ;src/keyboard_contol_module/keyboard_control.c: 180:     }
  3813   001F76  EFBF  F00F         	goto	l242
  3814   001F7A                     l1483:
  3815                           
  3816                           ;src/keyboard_contol_module/keyboard_control.c: 182:     {;src/keyboard_contol_module/ke
      +                          yboard_control.c: 183:         output = 0;
  3817   001F7A  0E00               	movlw	0
  3818   001F7C  6E36               	movwf	get_pin_c2_state@output^0,c
  3819   001F7E                     l242:
  3820                           
  3821                           ;src/keyboard_contol_module/keyboard_control.c: 186:     return output;
  3822   001F7E  5036               	movf	get_pin_c2_state@output^0,w,c
  3823   001F80  0012               	return		;funcret
  3824   001F82                     __end_of_get_pin_c2_state:
  3825                           	callstack 0
  3826                           
  3827 ;; *************** function _get_pin_c1_state *****************
  3828 ;; Defined at:
  3829 ;;		line 188 in file "src/keyboard_contol_module/keyboard_control.c"
  3830 ;; Parameters:    Size  Location     Type
  3831 ;;		None
  3832 ;; Auto vars:     Size  Location     Type
  3833 ;;  output          1    5[COMRAM] unsigned char 
  3834 ;; Return value:  Size  Location     Type
  3835 ;;                  1    wreg      unsigned char 
  3836 ;; Registers used:
  3837 ;;		wreg, status,2
  3838 ;; Tracked objects:
  3839 ;;		On entry : 0/0
  3840 ;;		On exit  : 0/0
  3841 ;;		Unchanged: 0/0
  3842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3844 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3846 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3847 ;;Total ram usage:        1 bytes
  3848 ;; Hardware stack levels used: 1
  3849 ;; Hardware stack levels required when called: 2
  3850 ;; This function calls:
  3851 ;;		Nothing
  3852 ;; This function is called by:
  3853 ;;		_get_column_pin_level
  3854 ;; This function uses a non-reentrant model
  3855 ;;
  3856                           
  3857                           	psect	text42
  3858   001F82                     __ptext42:
  3859                           	callstack 0
  3860   001F82                     _get_pin_c1_state:
  3861                           	callstack 24
  3862   001F82                     
  3863                           ;src/keyboard_contol_module/keyboard_control.c: 190:     unsigned char output;;src/keybo
      +                          ard_contol_module/keyboard_control.c: 192:     if ((PORTD & 0x10) == 0x10)
  3864   001F82  A88F               	btfss	143,4,c	;volatile
  3865   001F84  EFC6  F00F         	goto	u41
  3866   001F88  EFC8  F00F         	goto	u40
  3867   001F8C                     u41:
  3868   001F8C  EFCC  F00F         	goto	l1491
  3869   001F90                     u40:
  3870   001F90                     
  3871                           ;src/keyboard_contol_module/keyboard_control.c: 193:     {;src/keyboard_contol_module/ke
      +                          yboard_control.c: 194:         output = 1;
  3872   001F90  0E01               	movlw	1
  3873   001F92  6E36               	movwf	get_pin_c1_state@output^0,c
  3874                           
  3875                           ;src/keyboard_contol_module/keyboard_control.c: 195:     }
  3876   001F94  EFCE  F00F         	goto	l247
  3877   001F98                     l1491:
  3878                           
  3879                           ;src/keyboard_contol_module/keyboard_control.c: 197:     {;src/keyboard_contol_module/ke
      +                          yboard_control.c: 198:         output = 0;
  3880   001F98  0E00               	movlw	0
  3881   001F9A  6E36               	movwf	get_pin_c1_state@output^0,c
  3882   001F9C                     l247:
  3883                           
  3884                           ;src/keyboard_contol_module/keyboard_control.c: 201:     return output;
  3885   001F9C  5036               	movf	get_pin_c1_state@output^0,w,c
  3886   001F9E  0012               	return		;funcret
  3887   001FA0                     __end_of_get_pin_c1_state:
  3888                           	callstack 0
  3889                           
  3890 ;; *************** function _get_button_pressed_column_to_line *****************
  3891 ;; Defined at:
  3892 ;;		line 613 in file "src/keyboard_contol_module/keyboard_control.c"
  3893 ;; Parameters:    Size  Location     Type
  3894 ;;  line_index      1    wreg     unsigned char 
  3895 ;;  column_index    1    5[COMRAM] unsigned char 
  3896 ;; Auto vars:     Size  Location     Type
  3897 ;;  line_index      1    6[COMRAM] unsigned char 
  3898 ;;  output          1    7[COMRAM] unsigned char 
  3899 ;; Return value:  Size  Location     Type
  3900 ;;                  1    wreg      unsigned char 
  3901 ;; Registers used:
  3902 ;;		wreg, status,2, status,0
  3903 ;; Tracked objects:
  3904 ;;		On entry : 0/0
  3905 ;;		On exit  : 0/0
  3906 ;;		Unchanged: 0/0
  3907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  3908 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3909 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3911 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3912 ;;Total ram usage:        3 bytes
  3913 ;; Hardware stack levels used: 1
  3914 ;; Hardware stack levels required when called: 2
  3915 ;; This function calls:
  3916 ;;		Nothing
  3917 ;; This function is called by:
  3918 ;;		_update_buttons_checker_column_to_line
  3919 ;; This function uses a non-reentrant model
  3920 ;;
  3921                           
  3922                           	psect	text43
  3923   0015E0                     __ptext43:
  3924                           	callstack 0
  3925   0015E0                     _get_button_pressed_column_to_line:
  3926                           	callstack 25
  3927                           
  3928                           ;incstack = 0
  3929                           ;get_button_pressed_column_to_line@line_index stored from wreg
  3930   0015E0  6E37               	movwf	get_button_pressed_column_to_line@line_index^0,c
  3931   0015E2                     
  3932                           ;src/keyboard_contol_module/keyboard_control.c: 613: unsigned char get_button_pressed_co
      +                          lumn_to_line (unsigned char line_index, unsigned char column_index);src/keyboard_contol_
      +                          module/keyboard_control.c: 614: {;src/keyboard_contol_module/keyboard_control.c: 615:   
      +                            unsigned char output;;src/keyboard_contol_module/keyboard_control.c: 617:     switch (
      +                          column_index)
  3933   0015E2  EF82  F00B         	goto	l2591
  3934   0015E6                     l2541:
  3935                           
  3936                           ;src/keyboard_contol_module/keyboard_control.c: 624:                     output = 15;
  3937   0015E6  0E0F               	movlw	15
  3938   0015E8  6E38               	movwf	get_button_pressed_column_to_line@output^0,c
  3939                           
  3940                           ;src/keyboard_contol_module/keyboard_control.c: 625:                     break;
  3941   0015EA  EF95  F00B         	goto	l2593
  3942   0015EE                     l2543:
  3943                           
  3944                           ;src/keyboard_contol_module/keyboard_control.c: 628:                     output = 11;
  3945   0015EE  0E0B               	movlw	11
  3946   0015F0  6E38               	movwf	get_button_pressed_column_to_line@output^0,c
  3947                           
  3948                           ;src/keyboard_contol_module/keyboard_control.c: 629:                     break;
  3949   0015F2  EF95  F00B         	goto	l2593
  3950   0015F6                     l2545:
  3951                           
  3952                           ;src/keyboard_contol_module/keyboard_control.c: 632:                     output = 7;
  3953   0015F6  0E07               	movlw	7
  3954   0015F8  6E38               	movwf	get_button_pressed_column_to_line@output^0,c
  3955                           
  3956                           ;src/keyboard_contol_module/keyboard_control.c: 633:                     break;
  3957   0015FA  EF95  F00B         	goto	l2593
  3958   0015FE                     l2547:
  3959                           
  3960                           ;src/keyboard_contol_module/keyboard_control.c: 636:                     output = 3;
  3961   0015FE  0E03               	movlw	3
  3962   001600  6E38               	movwf	get_button_pressed_column_to_line@output^0,c
  3963                           
  3964                           ;src/keyboard_contol_module/keyboard_control.c: 637:                     break;
  3965   001602  EF95  F00B         	goto	l2593
  3966   001606                     l412:
  3967                           
  3968                           ;src/keyboard_contol_module/keyboard_control.c: 640:                     output = 255;
  3969   001606  6838               	setf	get_button_pressed_column_to_line@output^0,c
  3970                           
  3971                           ;src/keyboard_contol_module/keyboard_control.c: 641:                     break;
  3972   001608  EF95  F00B         	goto	l2593
  3973   00160C                     l2551:
  3974   00160C  5037               	movf	get_button_pressed_column_to_line@line_index^0,w,c
  3975                           
  3976                           ; Switch size 1, requested type "simple"
  3977                           ; Number of cases is 4, Range of values is 0 to 3
  3978                           ; switch strategies available:
  3979                           ; Name         Instructions Cycles
  3980                           ; simple_byte           13     7 (average)
  3981                           ;	Chosen strategy is simple_byte
  3982   00160E  0A00               	xorlw	0	; case 0
  3983   001610  B4D8               	btfsc	status,2,c
  3984   001612  EFF3  F00A         	goto	l2541
  3985   001616  0A01               	xorlw	1	; case 1
  3986   001618  B4D8               	btfsc	status,2,c
  3987   00161A  EFF7  F00A         	goto	l2543
  3988   00161E  0A03               	xorlw	3	; case 2
  3989   001620  B4D8               	btfsc	status,2,c
  3990   001622  EFFB  F00A         	goto	l2545
  3991   001626  0A01               	xorlw	1	; case 3
  3992   001628  B4D8               	btfsc	status,2,c
  3993   00162A  EFFF  F00A         	goto	l2547
  3994   00162E  EF03  F00B         	goto	l412
  3995   001632                     l2553:
  3996                           
  3997                           ;src/keyboard_contol_module/keyboard_control.c: 651:                     output = 14;
  3998   001632  0E0E               	movlw	14
  3999   001634  6E38               	movwf	get_button_pressed_column_to_line@output^0,c
  4000                           
  4001                           ;src/keyboard_contol_module/keyboard_control.c: 652:                     break;
  4002   001636  EF95  F00B         	goto	l2593
  4003   00163A                     l2555:
  4004                           
  4005                           ;src/keyboard_contol_module/keyboard_control.c: 655:                     output = 10;
  4006   00163A  0E0A               	movlw	10
  4007   00163C  6E38               	movwf	get_button_pressed_column_to_line@output^0,c
  4008                           
  4009                           ;src/keyboard_contol_module/keyboard_control.c: 656:                     break;
  4010   00163E  EF95  F00B         	goto	l2593
  4011   001642                     l2557:
  4012                           
  4013                           ;src/keyboard_contol_module/keyboard_control.c: 659:                     output = 6;
  4014   001642  0E06               	movlw	6
  4015   001644  6E38               	movwf	get_button_pressed_column_to_line@output^0,c
  4016                           
  4017                           ;src/keyboard_contol_module/keyboard_control.c: 660:                     break;
  4018   001646  EF95  F00B         	goto	l2593
  4019   00164A                     l2559:
  4020                           
  4021                           ;src/keyboard_contol_module/keyboard_control.c: 663:                     output = 2;
  4022   00164A  0E02               	movlw	2
  4023   00164C  6E38               	movwf	get_button_pressed_column_to_line@output^0,c
  4024                           
  4025                           ;src/keyboard_contol_module/keyboard_control.c: 664:                     break;
  4026   00164E  EF95  F00B         	goto	l2593
  4027   001652                     l2563:
  4028   001652  5037               	movf	get_button_pressed_column_to_line@line_index^0,w,c
  4029                           
  4030                           ; Switch size 1, requested type "simple"
  4031                           ; Number of cases is 4, Range of values is 0 to 3
  4032                           ; switch strategies available:
  4033                           ; Name         Instructions Cycles
  4034                           ; simple_byte           13     7 (average)
  4035                           ;	Chosen strategy is simple_byte
  4036   001654  0A00               	xorlw	0	; case 0
  4037   001656  B4D8               	btfsc	status,2,c
  4038   001658  EF19  F00B         	goto	l2553
  4039   00165C  0A01               	xorlw	1	; case 1
  4040   00165E  B4D8               	btfsc	status,2,c
  4041   001660  EF1D  F00B         	goto	l2555
  4042   001664  0A03               	xorlw	3	; case 2
  4043   001666  B4D8               	btfsc	status,2,c
  4044   001668  EF21  F00B         	goto	l2557
  4045   00166C  0A01               	xorlw	1	; case 3
  4046   00166E  B4D8               	btfsc	status,2,c
  4047   001670  EF25  F00B         	goto	l2559
  4048   001674  EF03  F00B         	goto	l412
  4049   001678                     l2565:
  4050                           
  4051                           ;src/keyboard_contol_module/keyboard_control.c: 678:                     output = 13;
  4052   001678  0E0D               	movlw	13
  4053   00167A  6E38               	movwf	get_button_pressed_column_to_line@output^0,c
  4054                           
  4055                           ;src/keyboard_contol_module/keyboard_control.c: 679:                     break;
  4056   00167C  EF95  F00B         	goto	l2593
  4057   001680                     l2567:
  4058                           
  4059                           ;src/keyboard_contol_module/keyboard_control.c: 682:                     output = 9;
  4060   001680  0E09               	movlw	9
  4061   001682  6E38               	movwf	get_button_pressed_column_to_line@output^0,c
  4062                           
  4063                           ;src/keyboard_contol_module/keyboard_control.c: 683:                     break;
  4064   001684  EF95  F00B         	goto	l2593
  4065   001688                     l2569:
  4066                           
  4067                           ;src/keyboard_contol_module/keyboard_control.c: 686:                     output = 5;
  4068   001688  0E05               	movlw	5
  4069   00168A  6E38               	movwf	get_button_pressed_column_to_line@output^0,c
  4070                           
  4071                           ;src/keyboard_contol_module/keyboard_control.c: 687:                     break;
  4072   00168C  EF95  F00B         	goto	l2593
  4073   001690                     l2571:
  4074                           
  4075                           ;src/keyboard_contol_module/keyboard_control.c: 690:                     output = 1;
  4076   001690  0E01               	movlw	1
  4077   001692  6E38               	movwf	get_button_pressed_column_to_line@output^0,c
  4078                           
  4079                           ;src/keyboard_contol_module/keyboard_control.c: 691:                     break;
  4080   001694  EF95  F00B         	goto	l2593
  4081   001698                     l2575:
  4082   001698  5037               	movf	get_button_pressed_column_to_line@line_index^0,w,c
  4083                           
  4084                           ; Switch size 1, requested type "simple"
  4085                           ; Number of cases is 4, Range of values is 0 to 3
  4086                           ; switch strategies available:
  4087                           ; Name         Instructions Cycles
  4088                           ; simple_byte           13     7 (average)
  4089                           ;	Chosen strategy is simple_byte
  4090   00169A  0A00               	xorlw	0	; case 0
  4091   00169C  B4D8               	btfsc	status,2,c
  4092   00169E  EF3C  F00B         	goto	l2565
  4093   0016A2  0A01               	xorlw	1	; case 1
  4094   0016A4  B4D8               	btfsc	status,2,c
  4095   0016A6  EF40  F00B         	goto	l2567
  4096   0016AA  0A03               	xorlw	3	; case 2
  4097   0016AC  B4D8               	btfsc	status,2,c
  4098   0016AE  EF44  F00B         	goto	l2569
  4099   0016B2  0A01               	xorlw	1	; case 3
  4100   0016B4  B4D8               	btfsc	status,2,c
  4101   0016B6  EF48  F00B         	goto	l2571
  4102   0016BA  EF03  F00B         	goto	l412
  4103   0016BE                     l2577:
  4104                           
  4105                           ;src/keyboard_contol_module/keyboard_control.c: 705:                     output = 12;
  4106   0016BE  0E0C               	movlw	12
  4107   0016C0  6E38               	movwf	get_button_pressed_column_to_line@output^0,c
  4108                           
  4109                           ;src/keyboard_contol_module/keyboard_control.c: 706:                     break;
  4110   0016C2  EF95  F00B         	goto	l2593
  4111   0016C6                     l2579:
  4112                           
  4113                           ;src/keyboard_contol_module/keyboard_control.c: 709:                     output = 8;
  4114   0016C6  0E08               	movlw	8
  4115   0016C8  6E38               	movwf	get_button_pressed_column_to_line@output^0,c
  4116                           
  4117                           ;src/keyboard_contol_module/keyboard_control.c: 710:                     break;
  4118   0016CA  EF95  F00B         	goto	l2593
  4119   0016CE                     l2581:
  4120                           
  4121                           ;src/keyboard_contol_module/keyboard_control.c: 713:                     output = 4;
  4122   0016CE  0E04               	movlw	4
  4123   0016D0  6E38               	movwf	get_button_pressed_column_to_line@output^0,c
  4124                           
  4125                           ;src/keyboard_contol_module/keyboard_control.c: 714:                     break;
  4126   0016D2  EF95  F00B         	goto	l2593
  4127   0016D6                     l2583:
  4128                           
  4129                           ;src/keyboard_contol_module/keyboard_control.c: 717:                     output = 0;
  4130   0016D6  0E00               	movlw	0
  4131   0016D8  6E38               	movwf	get_button_pressed_column_to_line@output^0,c
  4132                           
  4133                           ;src/keyboard_contol_module/keyboard_control.c: 718:                     break;
  4134   0016DA  EF95  F00B         	goto	l2593
  4135   0016DE                     l2587:
  4136   0016DE  5037               	movf	get_button_pressed_column_to_line@line_index^0,w,c
  4137                           
  4138                           ; Switch size 1, requested type "simple"
  4139                           ; Number of cases is 4, Range of values is 0 to 3
  4140                           ; switch strategies available:
  4141                           ; Name         Instructions Cycles
  4142                           ; simple_byte           13     7 (average)
  4143                           ;	Chosen strategy is simple_byte
  4144   0016E0  0A00               	xorlw	0	; case 0
  4145   0016E2  B4D8               	btfsc	status,2,c
  4146   0016E4  EF5F  F00B         	goto	l2577
  4147   0016E8  0A01               	xorlw	1	; case 1
  4148   0016EA  B4D8               	btfsc	status,2,c
  4149   0016EC  EF63  F00B         	goto	l2579
  4150   0016F0  0A03               	xorlw	3	; case 2
  4151   0016F2  B4D8               	btfsc	status,2,c
  4152   0016F4  EF67  F00B         	goto	l2581
  4153   0016F8  0A01               	xorlw	1	; case 3
  4154   0016FA  B4D8               	btfsc	status,2,c
  4155   0016FC  EF6B  F00B         	goto	l2583
  4156   001700  EF03  F00B         	goto	l412
  4157   001704                     l2591:
  4158   001704  5036               	movf	get_button_pressed_column_to_line@column_index^0,w,c
  4159                           
  4160                           ; Switch size 1, requested type "simple"
  4161                           ; Number of cases is 4, Range of values is 0 to 3
  4162                           ; switch strategies available:
  4163                           ; Name         Instructions Cycles
  4164                           ; simple_byte           13     7 (average)
  4165                           ;	Chosen strategy is simple_byte
  4166   001706  0A00               	xorlw	0	; case 0
  4167   001708  B4D8               	btfsc	status,2,c
  4168   00170A  EF06  F00B         	goto	l2551
  4169   00170E  0A01               	xorlw	1	; case 1
  4170   001710  B4D8               	btfsc	status,2,c
  4171   001712  EF29  F00B         	goto	l2563
  4172   001716  0A03               	xorlw	3	; case 2
  4173   001718  B4D8               	btfsc	status,2,c
  4174   00171A  EF4C  F00B         	goto	l2575
  4175   00171E  0A01               	xorlw	1	; case 3
  4176   001720  B4D8               	btfsc	status,2,c
  4177   001722  EF6F  F00B         	goto	l2587
  4178   001726  EF95  F00B         	goto	l2593
  4179   00172A                     l2593:
  4180                           
  4181                           ;src/keyboard_contol_module/keyboard_control.c: 728:     return output;
  4182   00172A  5038               	movf	get_button_pressed_column_to_line@output^0,w,c
  4183   00172C  0012               	return		;funcret
  4184   00172E                     __end_of_get_button_pressed_column_to_line:
  4185                           	callstack 0
  4186                           
  4187 ;; *************** function _set_line_pins_as_input *****************
  4188 ;; Defined at:
  4189 ;;		line 414 in file "src/keyboard_contol_module/keyboard_control.c"
  4190 ;; Parameters:    Size  Location     Type
  4191 ;;		None
  4192 ;; Auto vars:     Size  Location     Type
  4193 ;;		None
  4194 ;; Return value:  Size  Location     Type
  4195 ;;                  1    wreg      void 
  4196 ;; Registers used:
  4197 ;;		wreg, status,2, status,0, cstack
  4198 ;; Tracked objects:
  4199 ;;		On entry : 0/0
  4200 ;;		On exit  : 0/0
  4201 ;;		Unchanged: 0/0
  4202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4206 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4207 ;;Total ram usage:        0 bytes
  4208 ;; Hardware stack levels used: 1
  4209 ;; Hardware stack levels required when called: 3
  4210 ;; This function calls:
  4211 ;;		_set_pin_r1_input
  4212 ;;		_set_pin_r2_input
  4213 ;;		_set_pin_r3_input
  4214 ;;		_set_pin_r4_input
  4215 ;; This function is called by:
  4216 ;;		_check_column_to_line_pins
  4217 ;; This function uses a non-reentrant model
  4218 ;;
  4219                           
  4220                           	psect	text44
  4221   001FEC                     __ptext44:
  4222                           	callstack 0
  4223   001FEC                     _set_line_pins_as_input:
  4224                           	callstack 25
  4225   001FEC                     
  4226                           ;src/keyboard_contol_module/keyboard_control.c: 416:     set_pin_r1_input();
  4227   001FEC  EC68  F010         	call	_set_pin_r1_input	;wreg free
  4228                           
  4229                           ;src/keyboard_contol_module/keyboard_control.c: 417:     set_pin_r2_input();
  4230   001FF0  EC60  F010         	call	_set_pin_r2_input	;wreg free
  4231                           
  4232                           ;src/keyboard_contol_module/keyboard_control.c: 418:     set_pin_r3_input();
  4233   001FF4  EC58  F010         	call	_set_pin_r3_input	;wreg free
  4234                           
  4235                           ;src/keyboard_contol_module/keyboard_control.c: 419:     set_pin_r4_input();
  4236   001FF8  EC50  F010         	call	_set_pin_r4_input	;wreg free
  4237   001FFC  0012               	return		;funcret
  4238   001FFE                     __end_of_set_line_pins_as_input:
  4239                           	callstack 0
  4240                           
  4241 ;; *************** function _set_pin_r4_input *****************
  4242 ;; Defined at:
  4243 ;;		line 137 in file "src/keyboard_contol_module/keyboard_control.c"
  4244 ;; Parameters:    Size  Location     Type
  4245 ;;		None
  4246 ;; Auto vars:     Size  Location     Type
  4247 ;;		None
  4248 ;; Return value:  Size  Location     Type
  4249 ;;                  1    wreg      void 
  4250 ;; Registers used:
  4251 ;;		wreg, status,2, status,0
  4252 ;; Tracked objects:
  4253 ;;		On entry : 0/0
  4254 ;;		On exit  : 0/0
  4255 ;;		Unchanged: 0/0
  4256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4260 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4261 ;;Total ram usage:        0 bytes
  4262 ;; Hardware stack levels used: 1
  4263 ;; Hardware stack levels required when called: 2
  4264 ;; This function calls:
  4265 ;;		Nothing
  4266 ;; This function is called by:
  4267 ;;		_set_line_pins_as_input
  4268 ;; This function uses a non-reentrant model
  4269 ;;
  4270                           
  4271                           	psect	text45
  4272   0020A0                     __ptext45:
  4273                           	callstack 0
  4274   0020A0                     _set_pin_r4_input:
  4275                           	callstack 25
  4276   0020A0                     
  4277                           ;src/keyboard_contol_module/keyboard_control.c: 139:     TRISD = TRISD | 0x02;
  4278   0020A0  508A               	movf	138,w,c	;volatile
  4279   0020A2  0902               	iorlw	2
  4280   0020A4  6E8A               	movwf	138,c	;volatile
  4281                           
  4282                           ;src/keyboard_contol_module/keyboard_control.c: 140:     WPUD = WPUD | 0x02;
  4283   0020A6  010F               	movlb	15	; () banked
  4284   0020A8  5120               	movf	32,w,b	;volatile
  4285   0020AA  0902               	iorlw	2
  4286   0020AC  6F20               	movwf	32,b	;volatile
  4287   0020AE                     
  4288                           ; BSR set to: 15
  4289   0020AE  0012               	return		;funcret
  4290   0020B0                     __end_of_set_pin_r4_input:
  4291                           	callstack 0
  4292                           
  4293 ;; *************** function _set_pin_r3_input *****************
  4294 ;; Defined at:
  4295 ;;		line 132 in file "src/keyboard_contol_module/keyboard_control.c"
  4296 ;; Parameters:    Size  Location     Type
  4297 ;;		None
  4298 ;; Auto vars:     Size  Location     Type
  4299 ;;		None
  4300 ;; Return value:  Size  Location     Type
  4301 ;;                  1    wreg      void 
  4302 ;; Registers used:
  4303 ;;		wreg, status,2, status,0
  4304 ;; Tracked objects:
  4305 ;;		On entry : 0/0
  4306 ;;		On exit  : 0/0
  4307 ;;		Unchanged: 0/0
  4308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4312 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4313 ;;Total ram usage:        0 bytes
  4314 ;; Hardware stack levels used: 1
  4315 ;; Hardware stack levels required when called: 2
  4316 ;; This function calls:
  4317 ;;		Nothing
  4318 ;; This function is called by:
  4319 ;;		_set_line_pins_as_input
  4320 ;; This function uses a non-reentrant model
  4321 ;;
  4322                           
  4323                           	psect	text46
  4324   0020B0                     __ptext46:
  4325                           	callstack 0
  4326   0020B0                     _set_pin_r3_input:
  4327                           	callstack 25
  4328   0020B0                     
  4329                           ;src/keyboard_contol_module/keyboard_control.c: 134:     TRISC = TRISC | 0x08;
  4330   0020B0  5089               	movf	137,w,c	;volatile
  4331   0020B2  0908               	iorlw	8
  4332   0020B4  6E89               	movwf	137,c	;volatile
  4333                           
  4334                           ;src/keyboard_contol_module/keyboard_control.c: 135:     WPUC = WPUC | 0x08;
  4335   0020B6  010F               	movlb	15	; () banked
  4336   0020B8  511B               	movf	27,w,b	;volatile
  4337   0020BA  0908               	iorlw	8
  4338   0020BC  6F1B               	movwf	27,b	;volatile
  4339   0020BE                     
  4340                           ; BSR set to: 15
  4341   0020BE  0012               	return		;funcret
  4342   0020C0                     __end_of_set_pin_r3_input:
  4343                           	callstack 0
  4344                           
  4345 ;; *************** function _set_pin_r2_input *****************
  4346 ;; Defined at:
  4347 ;;		line 127 in file "src/keyboard_contol_module/keyboard_control.c"
  4348 ;; Parameters:    Size  Location     Type
  4349 ;;		None
  4350 ;; Auto vars:     Size  Location     Type
  4351 ;;		None
  4352 ;; Return value:  Size  Location     Type
  4353 ;;                  1    wreg      void 
  4354 ;; Registers used:
  4355 ;;		wreg, status,2, status,0
  4356 ;; Tracked objects:
  4357 ;;		On entry : 0/0
  4358 ;;		On exit  : 0/0
  4359 ;;		Unchanged: 0/0
  4360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4364 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4365 ;;Total ram usage:        0 bytes
  4366 ;; Hardware stack levels used: 1
  4367 ;; Hardware stack levels required when called: 2
  4368 ;; This function calls:
  4369 ;;		Nothing
  4370 ;; This function is called by:
  4371 ;;		_set_line_pins_as_input
  4372 ;; This function uses a non-reentrant model
  4373 ;;
  4374                           
  4375                           	psect	text47
  4376   0020C0                     __ptext47:
  4377                           	callstack 0
  4378   0020C0                     _set_pin_r2_input:
  4379                           	callstack 25
  4380   0020C0                     
  4381                           ;src/keyboard_contol_module/keyboard_control.c: 129:     TRISD = TRISD | 0x04;
  4382   0020C0  508A               	movf	138,w,c	;volatile
  4383   0020C2  0904               	iorlw	4
  4384   0020C4  6E8A               	movwf	138,c	;volatile
  4385                           
  4386                           ;src/keyboard_contol_module/keyboard_control.c: 130:     WPUD = WPUD | 0x04;
  4387   0020C6  010F               	movlb	15	; () banked
  4388   0020C8  5120               	movf	32,w,b	;volatile
  4389   0020CA  0904               	iorlw	4
  4390   0020CC  6F20               	movwf	32,b	;volatile
  4391   0020CE                     
  4392                           ; BSR set to: 15
  4393   0020CE  0012               	return		;funcret
  4394   0020D0                     __end_of_set_pin_r2_input:
  4395                           	callstack 0
  4396                           
  4397 ;; *************** function _set_pin_r1_input *****************
  4398 ;; Defined at:
  4399 ;;		line 122 in file "src/keyboard_contol_module/keyboard_control.c"
  4400 ;; Parameters:    Size  Location     Type
  4401 ;;		None
  4402 ;; Auto vars:     Size  Location     Type
  4403 ;;		None
  4404 ;; Return value:  Size  Location     Type
  4405 ;;                  1    wreg      void 
  4406 ;; Registers used:
  4407 ;;		wreg, status,2, status,0
  4408 ;; Tracked objects:
  4409 ;;		On entry : 0/0
  4410 ;;		On exit  : 0/0
  4411 ;;		Unchanged: 0/0
  4412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4416 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4417 ;;Total ram usage:        0 bytes
  4418 ;; Hardware stack levels used: 1
  4419 ;; Hardware stack levels required when called: 2
  4420 ;; This function calls:
  4421 ;;		Nothing
  4422 ;; This function is called by:
  4423 ;;		_set_line_pins_as_input
  4424 ;; This function uses a non-reentrant model
  4425 ;;
  4426                           
  4427                           	psect	text48
  4428   0020D0                     __ptext48:
  4429                           	callstack 0
  4430   0020D0                     _set_pin_r1_input:
  4431                           	callstack 25
  4432   0020D0                     
  4433                           ;src/keyboard_contol_module/keyboard_control.c: 124:     TRISD = TRISD | 0x08;
  4434   0020D0  508A               	movf	138,w,c	;volatile
  4435   0020D2  0908               	iorlw	8
  4436   0020D4  6E8A               	movwf	138,c	;volatile
  4437                           
  4438                           ;src/keyboard_contol_module/keyboard_control.c: 125:     WPUD = WPUD | 0x08;
  4439   0020D6  010F               	movlb	15	; () banked
  4440   0020D8  5120               	movf	32,w,b	;volatile
  4441   0020DA  0908               	iorlw	8
  4442   0020DC  6F20               	movwf	32,b	;volatile
  4443   0020DE                     
  4444                           ; BSR set to: 15
  4445   0020DE  0012               	return		;funcret
  4446   0020E0                     __end_of_set_pin_r1_input:
  4447                           	callstack 0
  4448                           
  4449 ;; *************** function _set_column_pins_as_output *****************
  4450 ;; Defined at:
  4451 ;;		line 436 in file "src/keyboard_contol_module/keyboard_control.c"
  4452 ;; Parameters:    Size  Location     Type
  4453 ;;		None
  4454 ;; Auto vars:     Size  Location     Type
  4455 ;;		None
  4456 ;; Return value:  Size  Location     Type
  4457 ;;                  1    wreg      void 
  4458 ;; Registers used:
  4459 ;;		wreg, status,2, status,0, cstack
  4460 ;; Tracked objects:
  4461 ;;		On entry : 0/0
  4462 ;;		On exit  : 0/0
  4463 ;;		Unchanged: 0/0
  4464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4468 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4469 ;;Total ram usage:        0 bytes
  4470 ;; Hardware stack levels used: 1
  4471 ;; Hardware stack levels required when called: 3
  4472 ;; This function calls:
  4473 ;;		_set_pin_c1_output
  4474 ;;		_set_pin_c2_output
  4475 ;;		_set_pin_c3_output
  4476 ;;		_set_pin_c4_output
  4477 ;; This function is called by:
  4478 ;;		_check_column_to_line_pins
  4479 ;; This function uses a non-reentrant model
  4480 ;;
  4481                           
  4482                           	psect	text49
  4483   001FFE                     __ptext49:
  4484                           	callstack 0
  4485   001FFE                     _set_column_pins_as_output:
  4486                           	callstack 25
  4487   001FFE                     
  4488                           ;src/keyboard_contol_module/keyboard_control.c: 438:     set_pin_c1_output();
  4489   001FFE  EC88  F010         	call	_set_pin_c1_output	;wreg free
  4490                           
  4491                           ;src/keyboard_contol_module/keyboard_control.c: 439:     set_pin_c2_output();
  4492   002002  EC80  F010         	call	_set_pin_c2_output	;wreg free
  4493                           
  4494                           ;src/keyboard_contol_module/keyboard_control.c: 440:     set_pin_c3_output();
  4495   002006  EC78  F010         	call	_set_pin_c3_output	;wreg free
  4496                           
  4497                           ;src/keyboard_contol_module/keyboard_control.c: 441:     set_pin_c4_output();
  4498   00200A  EC70  F010         	call	_set_pin_c4_output	;wreg free
  4499   00200E  0012               	return		;funcret
  4500   002010                     __end_of_set_column_pins_as_output:
  4501                           	callstack 0
  4502                           
  4503 ;; *************** function _set_pin_c4_output *****************
  4504 ;; Defined at:
  4505 ;;		line 61 in file "src/keyboard_contol_module/keyboard_control.c"
  4506 ;; Parameters:    Size  Location     Type
  4507 ;;		None
  4508 ;; Auto vars:     Size  Location     Type
  4509 ;;		None
  4510 ;; Return value:  Size  Location     Type
  4511 ;;                  1    wreg      void 
  4512 ;; Registers used:
  4513 ;;		wreg, status,2, status,0
  4514 ;; Tracked objects:
  4515 ;;		On entry : 0/0
  4516 ;;		On exit  : 0/0
  4517 ;;		Unchanged: 0/0
  4518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4522 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4523 ;;Total ram usage:        0 bytes
  4524 ;; Hardware stack levels used: 1
  4525 ;; Hardware stack levels required when called: 2
  4526 ;; This function calls:
  4527 ;;		Nothing
  4528 ;; This function is called by:
  4529 ;;		_set_column_pins_as_output
  4530 ;; This function uses a non-reentrant model
  4531 ;;
  4532                           
  4533                           	psect	text50
  4534   0020E0                     __ptext50:
  4535                           	callstack 0
  4536   0020E0                     _set_pin_c4_output:
  4537                           	callstack 25
  4538   0020E0                     
  4539                           ;src/keyboard_contol_module/keyboard_control.c: 63:     WPUD = WPUD & ~0x80;
  4540   0020E0  010F               	movlb	15	; () banked
  4541   0020E2  5120               	movf	32,w,b	;volatile
  4542   0020E4  0B7F               	andlw	127
  4543   0020E6  6F20               	movwf	32,b	;volatile
  4544                           
  4545                           ;src/keyboard_contol_module/keyboard_control.c: 64:     TRISD = TRISD & ~0x80;
  4546   0020E8  508A               	movf	138,w,c	;volatile
  4547   0020EA  0B7F               	andlw	127
  4548   0020EC  6E8A               	movwf	138,c	;volatile
  4549   0020EE                     
  4550                           ; BSR set to: 15
  4551   0020EE  0012               	return		;funcret
  4552   0020F0                     __end_of_set_pin_c4_output:
  4553                           	callstack 0
  4554                           
  4555 ;; *************** function _set_pin_c3_output *****************
  4556 ;; Defined at:
  4557 ;;		line 66 in file "src/keyboard_contol_module/keyboard_control.c"
  4558 ;; Parameters:    Size  Location     Type
  4559 ;;		None
  4560 ;; Auto vars:     Size  Location     Type
  4561 ;;		None
  4562 ;; Return value:  Size  Location     Type
  4563 ;;                  1    wreg      void 
  4564 ;; Registers used:
  4565 ;;		wreg, status,2, status,0
  4566 ;; Tracked objects:
  4567 ;;		On entry : 0/0
  4568 ;;		On exit  : 0/0
  4569 ;;		Unchanged: 0/0
  4570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4574 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4575 ;;Total ram usage:        0 bytes
  4576 ;; Hardware stack levels used: 1
  4577 ;; Hardware stack levels required when called: 2
  4578 ;; This function calls:
  4579 ;;		Nothing
  4580 ;; This function is called by:
  4581 ;;		_set_column_pins_as_output
  4582 ;; This function uses a non-reentrant model
  4583 ;;
  4584                           
  4585                           	psect	text51
  4586   0020F0                     __ptext51:
  4587                           	callstack 0
  4588   0020F0                     _set_pin_c3_output:
  4589                           	callstack 25
  4590   0020F0                     
  4591                           ;src/keyboard_contol_module/keyboard_control.c: 68:     WPUD = WPUD & ~0x40;
  4592   0020F0  010F               	movlb	15	; () banked
  4593   0020F2  5120               	movf	32,w,b	;volatile
  4594   0020F4  0BBF               	andlw	191
  4595   0020F6  6F20               	movwf	32,b	;volatile
  4596                           
  4597                           ;src/keyboard_contol_module/keyboard_control.c: 69:     TRISD = TRISD & ~0x40;
  4598   0020F8  508A               	movf	138,w,c	;volatile
  4599   0020FA  0BBF               	andlw	191
  4600   0020FC  6E8A               	movwf	138,c	;volatile
  4601   0020FE                     
  4602                           ; BSR set to: 15
  4603   0020FE  0012               	return		;funcret
  4604   002100                     __end_of_set_pin_c3_output:
  4605                           	callstack 0
  4606                           
  4607 ;; *************** function _set_pin_c2_output *****************
  4608 ;; Defined at:
  4609 ;;		line 71 in file "src/keyboard_contol_module/keyboard_control.c"
  4610 ;; Parameters:    Size  Location     Type
  4611 ;;		None
  4612 ;; Auto vars:     Size  Location     Type
  4613 ;;		None
  4614 ;; Return value:  Size  Location     Type
  4615 ;;                  1    wreg      void 
  4616 ;; Registers used:
  4617 ;;		wreg, status,2, status,0
  4618 ;; Tracked objects:
  4619 ;;		On entry : 0/0
  4620 ;;		On exit  : 0/0
  4621 ;;		Unchanged: 0/0
  4622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4626 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4627 ;;Total ram usage:        0 bytes
  4628 ;; Hardware stack levels used: 1
  4629 ;; Hardware stack levels required when called: 2
  4630 ;; This function calls:
  4631 ;;		Nothing
  4632 ;; This function is called by:
  4633 ;;		_set_column_pins_as_output
  4634 ;; This function uses a non-reentrant model
  4635 ;;
  4636                           
  4637                           	psect	text52
  4638   002100                     __ptext52:
  4639                           	callstack 0
  4640   002100                     _set_pin_c2_output:
  4641                           	callstack 25
  4642   002100                     
  4643                           ;src/keyboard_contol_module/keyboard_control.c: 73:     WPUD = WPUD & ~0x20;
  4644   002100  010F               	movlb	15	; () banked
  4645   002102  5120               	movf	32,w,b	;volatile
  4646   002104  0BDF               	andlw	223
  4647   002106  6F20               	movwf	32,b	;volatile
  4648                           
  4649                           ;src/keyboard_contol_module/keyboard_control.c: 74:     TRISD = TRISD & ~0x20;
  4650   002108  508A               	movf	138,w,c	;volatile
  4651   00210A  0BDF               	andlw	223
  4652   00210C  6E8A               	movwf	138,c	;volatile
  4653   00210E                     
  4654                           ; BSR set to: 15
  4655   00210E  0012               	return		;funcret
  4656   002110                     __end_of_set_pin_c2_output:
  4657                           	callstack 0
  4658                           
  4659 ;; *************** function _set_pin_c1_output *****************
  4660 ;; Defined at:
  4661 ;;		line 76 in file "src/keyboard_contol_module/keyboard_control.c"
  4662 ;; Parameters:    Size  Location     Type
  4663 ;;		None
  4664 ;; Auto vars:     Size  Location     Type
  4665 ;;		None
  4666 ;; Return value:  Size  Location     Type
  4667 ;;                  1    wreg      void 
  4668 ;; Registers used:
  4669 ;;		wreg, status,2, status,0
  4670 ;; Tracked objects:
  4671 ;;		On entry : 0/0
  4672 ;;		On exit  : 0/0
  4673 ;;		Unchanged: 0/0
  4674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4678 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4679 ;;Total ram usage:        0 bytes
  4680 ;; Hardware stack levels used: 1
  4681 ;; Hardware stack levels required when called: 2
  4682 ;; This function calls:
  4683 ;;		Nothing
  4684 ;; This function is called by:
  4685 ;;		_set_column_pins_as_output
  4686 ;; This function uses a non-reentrant model
  4687 ;;
  4688                           
  4689                           	psect	text53
  4690   002110                     __ptext53:
  4691                           	callstack 0
  4692   002110                     _set_pin_c1_output:
  4693                           	callstack 25
  4694   002110                     
  4695                           ;src/keyboard_contol_module/keyboard_control.c: 78:     WPUD = WPUD & ~0x10;
  4696   002110  010F               	movlb	15	; () banked
  4697   002112  5120               	movf	32,w,b	;volatile
  4698   002114  0BEF               	andlw	239
  4699   002116  6F20               	movwf	32,b	;volatile
  4700                           
  4701                           ;src/keyboard_contol_module/keyboard_control.c: 79:     TRISD = TRISD & ~0x10;
  4702   002118  508A               	movf	138,w,c	;volatile
  4703   00211A  0BEF               	andlw	239
  4704   00211C  6E8A               	movwf	138,c	;volatile
  4705   00211E                     
  4706                           ; BSR set to: 15
  4707   00211E  0012               	return		;funcret
  4708   002120                     __end_of_set_pin_c1_output:
  4709                           	callstack 0
  4710                           
  4711 ;; *************** function _set_column_pin_level *****************
  4712 ;; Defined at:
  4713 ;;		line 372 in file "src/keyboard_contol_module/keyboard_control.c"
  4714 ;; Parameters:    Size  Location     Type
  4715 ;;  column_index    1    wreg     unsigned char 
  4716 ;; Auto vars:     Size  Location     Type
  4717 ;;  column_index    1    5[COMRAM] unsigned char 
  4718 ;; Return value:  Size  Location     Type
  4719 ;;                  1    wreg      void 
  4720 ;; Registers used:
  4721 ;;		wreg, status,2, status,0, cstack
  4722 ;; Tracked objects:
  4723 ;;		On entry : 0/0
  4724 ;;		On exit  : 0/0
  4725 ;;		Unchanged: 0/0
  4726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4728 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4730 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4731 ;;Total ram usage:        1 bytes
  4732 ;; Hardware stack levels used: 1
  4733 ;; Hardware stack levels required when called: 3
  4734 ;; This function calls:
  4735 ;;		_set_pin_c1_0
  4736 ;;		_set_pin_c1_1
  4737 ;;		_set_pin_c2_0
  4738 ;;		_set_pin_c2_1
  4739 ;;		_set_pin_c3_0
  4740 ;;		_set_pin_c3_1
  4741 ;;		_set_pin_c4_0
  4742 ;;		_set_pin_c4_1
  4743 ;; This function is called by:
  4744 ;;		_check_column_to_line_pins
  4745 ;; This function uses a non-reentrant model
  4746 ;;
  4747                           
  4748                           	psect	text54
  4749   0017AC                     __ptext54:
  4750                           	callstack 0
  4751   0017AC                     _set_column_pin_level:
  4752                           	callstack 25
  4753                           
  4754                           ; BSR set to: 15
  4755                           ;incstack = 0
  4756                           ;set_column_pin_level@column_index stored from wreg
  4757   0017AC  6E36               	movwf	set_column_pin_level@column_index^0,c
  4758   0017AE                     
  4759                           ;src/keyboard_contol_module/keyboard_control.c: 372: void set_column_pin_level (unsigned
      +                           char column_index);src/keyboard_contol_module/keyboard_control.c: 373: {;src/keyboard_c
      +                          ontol_module/keyboard_control.c: 374:     switch (column_index)
  4760   0017AE  EF01  F00C         	goto	l1773
  4761   0017B2                     l1763:
  4762                           
  4763                           ;src/keyboard_contol_module/keyboard_control.c: 377:         {;src/keyboard_contol_modul
      +                          e/keyboard_control.c: 378:             set_pin_c1_0();
  4764   0017B2  ECF5  F010         	call	_set_pin_c1_0	;wreg free
  4765                           
  4766                           ;src/keyboard_contol_module/keyboard_control.c: 379:             set_pin_c2_1();
  4767   0017B6  ECE9  F010         	call	_set_pin_c2_1	;wreg free
  4768                           
  4769                           ;src/keyboard_contol_module/keyboard_control.c: 380:             set_pin_c3_1();
  4770   0017BA  ECE1  F010         	call	_set_pin_c3_1	;wreg free
  4771                           
  4772                           ;src/keyboard_contol_module/keyboard_control.c: 381:             set_pin_c4_1();
  4773   0017BE  ECD9  F010         	call	_set_pin_c4_1	;wreg free
  4774                           
  4775                           ;src/keyboard_contol_module/keyboard_control.c: 382:         };src/keyboard_contol_modul
      +                          e/keyboard_control.c: 383:         break;
  4776   0017C2  EF14  F00C         	goto	l334
  4777   0017C6                     l1765:
  4778                           
  4779                           ;src/keyboard_contol_module/keyboard_control.c: 386:         {;src/keyboard_contol_modul
      +                          e/keyboard_control.c: 387:             set_pin_c1_1();
  4780   0017C6  ECF1  F010         	call	_set_pin_c1_1	;wreg free
  4781                           
  4782                           ;src/keyboard_contol_module/keyboard_control.c: 388:             set_pin_c2_0();
  4783   0017CA  ECED  F010         	call	_set_pin_c2_0	;wreg free
  4784                           
  4785                           ;src/keyboard_contol_module/keyboard_control.c: 389:             set_pin_c3_1();
  4786   0017CE  ECE1  F010         	call	_set_pin_c3_1	;wreg free
  4787                           
  4788                           ;src/keyboard_contol_module/keyboard_control.c: 390:             set_pin_c4_1();
  4789   0017D2  ECD9  F010         	call	_set_pin_c4_1	;wreg free
  4790                           
  4791                           ;src/keyboard_contol_module/keyboard_control.c: 391:         };src/keyboard_contol_modul
      +                          e/keyboard_control.c: 392:         break;
  4792   0017D6  EF14  F00C         	goto	l334
  4793   0017DA                     l1767:
  4794                           
  4795                           ;src/keyboard_contol_module/keyboard_control.c: 395:         {;src/keyboard_contol_modul
      +                          e/keyboard_control.c: 396:             set_pin_c1_1();
  4796   0017DA  ECF1  F010         	call	_set_pin_c1_1	;wreg free
  4797                           
  4798                           ;src/keyboard_contol_module/keyboard_control.c: 397:             set_pin_c2_1();
  4799   0017DE  ECE9  F010         	call	_set_pin_c2_1	;wreg free
  4800                           
  4801                           ;src/keyboard_contol_module/keyboard_control.c: 398:             set_pin_c3_0();
  4802   0017E2  ECE5  F010         	call	_set_pin_c3_0	;wreg free
  4803                           
  4804                           ;src/keyboard_contol_module/keyboard_control.c: 399:             set_pin_c4_1();
  4805   0017E6  ECD9  F010         	call	_set_pin_c4_1	;wreg free
  4806                           
  4807                           ;src/keyboard_contol_module/keyboard_control.c: 400:         };src/keyboard_contol_modul
      +                          e/keyboard_control.c: 401:         break;
  4808   0017EA  EF14  F00C         	goto	l334
  4809   0017EE                     l1769:
  4810                           
  4811                           ;src/keyboard_contol_module/keyboard_control.c: 404:         {;src/keyboard_contol_modul
      +                          e/keyboard_control.c: 405:             set_pin_c1_1();
  4812   0017EE  ECF1  F010         	call	_set_pin_c1_1	;wreg free
  4813                           
  4814                           ;src/keyboard_contol_module/keyboard_control.c: 406:             set_pin_c2_1();
  4815   0017F2  ECE9  F010         	call	_set_pin_c2_1	;wreg free
  4816                           
  4817                           ;src/keyboard_contol_module/keyboard_control.c: 407:             set_pin_c3_1();
  4818   0017F6  ECE1  F010         	call	_set_pin_c3_1	;wreg free
  4819                           
  4820                           ;src/keyboard_contol_module/keyboard_control.c: 408:             set_pin_c4_0();
  4821   0017FA  ECDD  F010         	call	_set_pin_c4_0	;wreg free
  4822                           
  4823                           ;src/keyboard_contol_module/keyboard_control.c: 409:         };src/keyboard_contol_modul
      +                          e/keyboard_control.c: 410:         break;
  4824   0017FE  EF14  F00C         	goto	l334
  4825   001802                     l1773:
  4826   001802  5036               	movf	set_column_pin_level@column_index^0,w,c
  4827                           
  4828                           ; Switch size 1, requested type "simple"
  4829                           ; Number of cases is 4, Range of values is 0 to 3
  4830                           ; switch strategies available:
  4831                           ; Name         Instructions Cycles
  4832                           ; simple_byte           13     7 (average)
  4833                           ;	Chosen strategy is simple_byte
  4834   001804  0A00               	xorlw	0	; case 0
  4835   001806  B4D8               	btfsc	status,2,c
  4836   001808  EFD9  F00B         	goto	l1763
  4837   00180C  0A01               	xorlw	1	; case 1
  4838   00180E  B4D8               	btfsc	status,2,c
  4839   001810  EFE3  F00B         	goto	l1765
  4840   001814  0A03               	xorlw	3	; case 2
  4841   001816  B4D8               	btfsc	status,2,c
  4842   001818  EFED  F00B         	goto	l1767
  4843   00181C  0A01               	xorlw	1	; case 3
  4844   00181E  B4D8               	btfsc	status,2,c
  4845   001820  EFF7  F00B         	goto	l1769
  4846   001824  EF14  F00C         	goto	l334
  4847   001828                     l334:
  4848   001828  0012               	return		;funcret
  4849   00182A                     __end_of_set_column_pin_level:
  4850                           	callstack 0
  4851                           
  4852 ;; *************** function _set_pin_c4_1 *****************
  4853 ;; Defined at:
  4854 ;;		line 297 in file "src/keyboard_contol_module/keyboard_control.c"
  4855 ;; Parameters:    Size  Location     Type
  4856 ;;		None
  4857 ;; Auto vars:     Size  Location     Type
  4858 ;;		None
  4859 ;; Return value:  Size  Location     Type
  4860 ;;                  1    wreg      void 
  4861 ;; Registers used:
  4862 ;;		wreg, status,2, status,0
  4863 ;; Tracked objects:
  4864 ;;		On entry : 0/0
  4865 ;;		On exit  : 0/0
  4866 ;;		Unchanged: 0/0
  4867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4871 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4872 ;;Total ram usage:        0 bytes
  4873 ;; Hardware stack levels used: 1
  4874 ;; Hardware stack levels required when called: 2
  4875 ;; This function calls:
  4876 ;;		Nothing
  4877 ;; This function is called by:
  4878 ;;		_set_column_pin_level
  4879 ;; This function uses a non-reentrant model
  4880 ;;
  4881                           
  4882                           	psect	text55
  4883   0021B2                     __ptext55:
  4884                           	callstack 0
  4885   0021B2                     _set_pin_c4_1:
  4886                           	callstack 25
  4887   0021B2                     
  4888                           ;src/keyboard_contol_module/keyboard_control.c: 299:     PORTD = PORTD | 0x80;
  4889   0021B2  508F               	movf	143,w,c	;volatile
  4890   0021B4  0980               	iorlw	128
  4891   0021B6  6E8F               	movwf	143,c	;volatile
  4892   0021B8  0012               	return		;funcret
  4893   0021BA                     __end_of_set_pin_c4_1:
  4894                           	callstack 0
  4895                           
  4896 ;; *************** function _set_pin_c4_0 *****************
  4897 ;; Defined at:
  4898 ;;		line 264 in file "src/keyboard_contol_module/keyboard_control.c"
  4899 ;; Parameters:    Size  Location     Type
  4900 ;;		None
  4901 ;; Auto vars:     Size  Location     Type
  4902 ;;		None
  4903 ;; Return value:  Size  Location     Type
  4904 ;;                  1    wreg      void 
  4905 ;; Registers used:
  4906 ;;		wreg, status,2, status,0
  4907 ;; Tracked objects:
  4908 ;;		On entry : 0/0
  4909 ;;		On exit  : 0/0
  4910 ;;		Unchanged: 0/0
  4911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4915 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4916 ;;Total ram usage:        0 bytes
  4917 ;; Hardware stack levels used: 1
  4918 ;; Hardware stack levels required when called: 2
  4919 ;; This function calls:
  4920 ;;		Nothing
  4921 ;; This function is called by:
  4922 ;;		_set_column_pin_level
  4923 ;; This function uses a non-reentrant model
  4924 ;;
  4925                           
  4926                           	psect	text56
  4927   0021BA                     __ptext56:
  4928                           	callstack 0
  4929   0021BA                     _set_pin_c4_0:
  4930                           	callstack 25
  4931   0021BA                     
  4932                           ;src/keyboard_contol_module/keyboard_control.c: 266:     PORTD = PORTD & ~0x80;
  4933   0021BA  508F               	movf	143,w,c	;volatile
  4934   0021BC  0B7F               	andlw	127
  4935   0021BE  6E8F               	movwf	143,c	;volatile
  4936   0021C0  0012               	return		;funcret
  4937   0021C2                     __end_of_set_pin_c4_0:
  4938                           	callstack 0
  4939                           
  4940 ;; *************** function _set_pin_c3_1 *****************
  4941 ;; Defined at:
  4942 ;;		line 301 in file "src/keyboard_contol_module/keyboard_control.c"
  4943 ;; Parameters:    Size  Location     Type
  4944 ;;		None
  4945 ;; Auto vars:     Size  Location     Type
  4946 ;;		None
  4947 ;; Return value:  Size  Location     Type
  4948 ;;                  1    wreg      void 
  4949 ;; Registers used:
  4950 ;;		wreg, status,2, status,0
  4951 ;; Tracked objects:
  4952 ;;		On entry : 0/0
  4953 ;;		On exit  : 0/0
  4954 ;;		Unchanged: 0/0
  4955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  4956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4959 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4960 ;;Total ram usage:        0 bytes
  4961 ;; Hardware stack levels used: 1
  4962 ;; Hardware stack levels required when called: 2
  4963 ;; This function calls:
  4964 ;;		Nothing
  4965 ;; This function is called by:
  4966 ;;		_set_column_pin_level
  4967 ;; This function uses a non-reentrant model
  4968 ;;
  4969                           
  4970                           	psect	text57
  4971   0021C2                     __ptext57:
  4972                           	callstack 0
  4973   0021C2                     _set_pin_c3_1:
  4974                           	callstack 25
  4975   0021C2                     
  4976                           ;src/keyboard_contol_module/keyboard_control.c: 303:     PORTD = PORTD | 0x40;
  4977   0021C2  508F               	movf	143,w,c	;volatile
  4978   0021C4  0940               	iorlw	64
  4979   0021C6  6E8F               	movwf	143,c	;volatile
  4980   0021C8  0012               	return		;funcret
  4981   0021CA                     __end_of_set_pin_c3_1:
  4982                           	callstack 0
  4983                           
  4984 ;; *************** function _set_pin_c3_0 *****************
  4985 ;; Defined at:
  4986 ;;		line 268 in file "src/keyboard_contol_module/keyboard_control.c"
  4987 ;; Parameters:    Size  Location     Type
  4988 ;;		None
  4989 ;; Auto vars:     Size  Location     Type
  4990 ;;		None
  4991 ;; Return value:  Size  Location     Type
  4992 ;;                  1    wreg      void 
  4993 ;; Registers used:
  4994 ;;		wreg, status,2, status,0
  4995 ;; Tracked objects:
  4996 ;;		On entry : 0/0
  4997 ;;		On exit  : 0/0
  4998 ;;		Unchanged: 0/0
  4999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  5000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5003 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5004 ;;Total ram usage:        0 bytes
  5005 ;; Hardware stack levels used: 1
  5006 ;; Hardware stack levels required when called: 2
  5007 ;; This function calls:
  5008 ;;		Nothing
  5009 ;; This function is called by:
  5010 ;;		_set_column_pin_level
  5011 ;; This function uses a non-reentrant model
  5012 ;;
  5013                           
  5014                           	psect	text58
  5015   0021CA                     __ptext58:
  5016                           	callstack 0
  5017   0021CA                     _set_pin_c3_0:
  5018                           	callstack 25
  5019   0021CA                     
  5020                           ;src/keyboard_contol_module/keyboard_control.c: 270:     PORTD = PORTD & ~0x40;
  5021   0021CA  508F               	movf	143,w,c	;volatile
  5022   0021CC  0BBF               	andlw	191
  5023   0021CE  6E8F               	movwf	143,c	;volatile
  5024   0021D0  0012               	return		;funcret
  5025   0021D2                     __end_of_set_pin_c3_0:
  5026                           	callstack 0
  5027                           
  5028 ;; *************** function _set_pin_c2_1 *****************
  5029 ;; Defined at:
  5030 ;;		line 305 in file "src/keyboard_contol_module/keyboard_control.c"
  5031 ;; Parameters:    Size  Location     Type
  5032 ;;		None
  5033 ;; Auto vars:     Size  Location     Type
  5034 ;;		None
  5035 ;; Return value:  Size  Location     Type
  5036 ;;                  1    wreg      void 
  5037 ;; Registers used:
  5038 ;;		wreg, status,2, status,0
  5039 ;; Tracked objects:
  5040 ;;		On entry : 0/0
  5041 ;;		On exit  : 0/0
  5042 ;;		Unchanged: 0/0
  5043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  5044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5047 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5048 ;;Total ram usage:        0 bytes
  5049 ;; Hardware stack levels used: 1
  5050 ;; Hardware stack levels required when called: 2
  5051 ;; This function calls:
  5052 ;;		Nothing
  5053 ;; This function is called by:
  5054 ;;		_set_column_pin_level
  5055 ;; This function uses a non-reentrant model
  5056 ;;
  5057                           
  5058                           	psect	text59
  5059   0021D2                     __ptext59:
  5060                           	callstack 0
  5061   0021D2                     _set_pin_c2_1:
  5062                           	callstack 25
  5063   0021D2                     
  5064                           ;src/keyboard_contol_module/keyboard_control.c: 307:     PORTD = PORTD | 0x20;
  5065   0021D2  508F               	movf	143,w,c	;volatile
  5066   0021D4  0920               	iorlw	32
  5067   0021D6  6E8F               	movwf	143,c	;volatile
  5068   0021D8  0012               	return		;funcret
  5069   0021DA                     __end_of_set_pin_c2_1:
  5070                           	callstack 0
  5071                           
  5072 ;; *************** function _set_pin_c2_0 *****************
  5073 ;; Defined at:
  5074 ;;		line 272 in file "src/keyboard_contol_module/keyboard_control.c"
  5075 ;; Parameters:    Size  Location     Type
  5076 ;;		None
  5077 ;; Auto vars:     Size  Location     Type
  5078 ;;		None
  5079 ;; Return value:  Size  Location     Type
  5080 ;;                  1    wreg      void 
  5081 ;; Registers used:
  5082 ;;		wreg, status,2, status,0
  5083 ;; Tracked objects:
  5084 ;;		On entry : 0/0
  5085 ;;		On exit  : 0/0
  5086 ;;		Unchanged: 0/0
  5087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  5088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5091 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5092 ;;Total ram usage:        0 bytes
  5093 ;; Hardware stack levels used: 1
  5094 ;; Hardware stack levels required when called: 2
  5095 ;; This function calls:
  5096 ;;		Nothing
  5097 ;; This function is called by:
  5098 ;;		_set_column_pin_level
  5099 ;; This function uses a non-reentrant model
  5100 ;;
  5101                           
  5102                           	psect	text60
  5103   0021DA                     __ptext60:
  5104                           	callstack 0
  5105   0021DA                     _set_pin_c2_0:
  5106                           	callstack 25
  5107   0021DA                     
  5108                           ;src/keyboard_contol_module/keyboard_control.c: 274:     PORTD = PORTD & ~0x20;
  5109   0021DA  508F               	movf	143,w,c	;volatile
  5110   0021DC  0BDF               	andlw	223
  5111   0021DE  6E8F               	movwf	143,c	;volatile
  5112   0021E0  0012               	return		;funcret
  5113   0021E2                     __end_of_set_pin_c2_0:
  5114                           	callstack 0
  5115                           
  5116 ;; *************** function _set_pin_c1_1 *****************
  5117 ;; Defined at:
  5118 ;;		line 309 in file "src/keyboard_contol_module/keyboard_control.c"
  5119 ;; Parameters:    Size  Location     Type
  5120 ;;		None
  5121 ;; Auto vars:     Size  Location     Type
  5122 ;;		None
  5123 ;; Return value:  Size  Location     Type
  5124 ;;                  1    wreg      void 
  5125 ;; Registers used:
  5126 ;;		wreg, status,2, status,0
  5127 ;; Tracked objects:
  5128 ;;		On entry : 0/0
  5129 ;;		On exit  : 0/0
  5130 ;;		Unchanged: 0/0
  5131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  5132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5135 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5136 ;;Total ram usage:        0 bytes
  5137 ;; Hardware stack levels used: 1
  5138 ;; Hardware stack levels required when called: 2
  5139 ;; This function calls:
  5140 ;;		Nothing
  5141 ;; This function is called by:
  5142 ;;		_set_column_pin_level
  5143 ;; This function uses a non-reentrant model
  5144 ;;
  5145                           
  5146                           	psect	text61
  5147   0021E2                     __ptext61:
  5148                           	callstack 0
  5149   0021E2                     _set_pin_c1_1:
  5150                           	callstack 25
  5151   0021E2                     
  5152                           ;src/keyboard_contol_module/keyboard_control.c: 311:     PORTD = PORTD | 0x10;
  5153   0021E2  508F               	movf	143,w,c	;volatile
  5154   0021E4  0910               	iorlw	16
  5155   0021E6  6E8F               	movwf	143,c	;volatile
  5156   0021E8  0012               	return		;funcret
  5157   0021EA                     __end_of_set_pin_c1_1:
  5158                           	callstack 0
  5159                           
  5160 ;; *************** function _set_pin_c1_0 *****************
  5161 ;; Defined at:
  5162 ;;		line 276 in file "src/keyboard_contol_module/keyboard_control.c"
  5163 ;; Parameters:    Size  Location     Type
  5164 ;;		None
  5165 ;; Auto vars:     Size  Location     Type
  5166 ;;		None
  5167 ;; Return value:  Size  Location     Type
  5168 ;;                  1    wreg      void 
  5169 ;; Registers used:
  5170 ;;		wreg, status,2, status,0
  5171 ;; Tracked objects:
  5172 ;;		On entry : 0/0
  5173 ;;		On exit  : 0/0
  5174 ;;		Unchanged: 0/0
  5175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  5176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5179 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5180 ;;Total ram usage:        0 bytes
  5181 ;; Hardware stack levels used: 1
  5182 ;; Hardware stack levels required when called: 2
  5183 ;; This function calls:
  5184 ;;		Nothing
  5185 ;; This function is called by:
  5186 ;;		_set_column_pin_level
  5187 ;; This function uses a non-reentrant model
  5188 ;;
  5189                           
  5190                           	psect	text62
  5191   0021EA                     __ptext62:
  5192                           	callstack 0
  5193   0021EA                     _set_pin_c1_0:
  5194                           	callstack 25
  5195   0021EA                     
  5196                           ;src/keyboard_contol_module/keyboard_control.c: 278:     PORTD = PORTD & ~0x10;
  5197   0021EA  508F               	movf	143,w,c	;volatile
  5198   0021EC  0BEF               	andlw	239
  5199   0021EE  6E8F               	movwf	143,c	;volatile
  5200   0021F0  0012               	return		;funcret
  5201   0021F2                     __end_of_set_pin_c1_0:
  5202                           	callstack 0
  5203                           
  5204 ;; *************** function _buttons_options_interface *****************
  5205 ;; Defined at:
  5206 ;;		line 965 in file "src/keyboard_contol_module/keyboard_control.c"
  5207 ;; Parameters:    Size  Location     Type
  5208 ;;		None
  5209 ;; Auto vars:     Size  Location     Type
  5210 ;;		None
  5211 ;; Return value:  Size  Location     Type
  5212 ;;                  1    wreg      void 
  5213 ;; Registers used:
  5214 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5215 ;; Tracked objects:
  5216 ;;		On entry : 0/0
  5217 ;;		On exit  : 0/0
  5218 ;;		Unchanged: 0/0
  5219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  5220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5223 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5224 ;;Total ram usage:        0 bytes
  5225 ;; Hardware stack levels used: 1
  5226 ;; Hardware stack levels required when called: 5
  5227 ;; This function calls:
  5228 ;;		_busy_wait
  5229 ;;		_loop_all_songs_from_folder
  5230 ;;		_pause
  5231 ;;		_play
  5232 ;;		_play_next_song
  5233 ;;		_play_previous_song
  5234 ;;		_play_specific_from_folder
  5235 ;;		_reset_function
  5236 ;;		_standby
  5237 ;;		_toggle_repeat_current_song
  5238 ;;		_turn_off_led_D2
  5239 ;;		_turn_off_led_D3
  5240 ;;		_turn_on_led_D2
  5241 ;;		_turn_on_led_D3
  5242 ;;		_volume_down
  5243 ;;		_volume_up
  5244 ;; This function is called by:
  5245 ;;		_main
  5246 ;; This function uses a non-reentrant model
  5247 ;;
  5248                           
  5249                           	psect	text63
  5250   000F02                     __ptext63:
  5251                           	callstack 0
  5252   000F02                     _buttons_options_interface:
  5253                           	callstack 25
  5254   000F02                     
  5255                           ;src/keyboard_contol_module/keyboard_control.c: 969:     if ((buttons_pressed & 0x0001) 
      +                          == 0x0001)
  5256   000F02  A00B               	btfss	_buttons_pressed^0,0,c
  5257   000F04  EF86  F007         	goto	u531
  5258   000F08  EF88  F007         	goto	u530
  5259   000F0C                     u531:
  5260   000F0C  EF97  F007         	goto	l2999
  5261   000F10                     u530:
  5262   000F10                     
  5263                           ;src/keyboard_contol_module/keyboard_control.c: 970:     {;src/keyboard_contol_module/ke
      +                          yboard_control.c: 971:         play_specific_from_folder(1, 20);
  5264   000F10  0E14               	movlw	20
  5265   000F12  6E3B               	movwf	play_specific_from_folder@track_number^0,c
  5266   000F14  0E01               	movlw	1
  5267   000F16  EC5E  F00D         	call	_play_specific_from_folder
  5268   000F1A                     
  5269                           ;src/keyboard_contol_module/keyboard_control.c: 974:         busy_wait(50000);
  5270   000F1A  0E50               	movlw	80
  5271   000F1C  6E36               	movwf	busy_wait@iterations^0,c
  5272   000F1E  0EC3               	movlw	195
  5273   000F20  6E37               	movwf	(busy_wait@iterations+1)^0,c
  5274   000F22  0E00               	movlw	0
  5275   000F24  6E38               	movwf	(busy_wait@iterations+2)^0,c
  5276   000F26  0E00               	movlw	0
  5277   000F28  6E39               	movwf	(busy_wait@iterations+3)^0,c
  5278   000F2A  EC3E  F00D         	call	_busy_wait	;wreg free
  5279   000F2E                     l2999:
  5280                           
  5281                           ;src/keyboard_contol_module/keyboard_control.c: 977:     if ((buttons_pressed & 0x0002) 
      +                          == 0x0002)
  5282   000F2E  A20B               	btfss	_buttons_pressed^0,1,c
  5283   000F30  EF9C  F007         	goto	u541
  5284   000F34  EF9E  F007         	goto	u540
  5285   000F38                     u541:
  5286   000F38  EFAA  F007         	goto	l3005
  5287   000F3C                     u540:
  5288   000F3C                     
  5289                           ;src/keyboard_contol_module/keyboard_control.c: 978:     {;src/keyboard_contol_module/ke
      +                          yboard_control.c: 979:         play_previous_song();
  5290   000F3C  EC14  F00E         	call	_play_previous_song	;wreg free
  5291   000F40                     
  5292                           ;src/keyboard_contol_module/keyboard_control.c: 982:         busy_wait(50000);
  5293   000F40  0E50               	movlw	80
  5294   000F42  6E36               	movwf	busy_wait@iterations^0,c
  5295   000F44  0EC3               	movlw	195
  5296   000F46  6E37               	movwf	(busy_wait@iterations+1)^0,c
  5297   000F48  0E00               	movlw	0
  5298   000F4A  6E38               	movwf	(busy_wait@iterations+2)^0,c
  5299   000F4C  0E00               	movlw	0
  5300   000F4E  6E39               	movwf	(busy_wait@iterations+3)^0,c
  5301   000F50  EC3E  F00D         	call	_busy_wait	;wreg free
  5302   000F54                     l3005:
  5303                           
  5304                           ;src/keyboard_contol_module/keyboard_control.c: 985:     if ((buttons_pressed & 0x0004) 
      +                          == 0x0004)
  5305   000F54  A40B               	btfss	_buttons_pressed^0,2,c
  5306   000F56  EFAF  F007         	goto	u551
  5307   000F5A  EFB1  F007         	goto	u550
  5308   000F5E                     u551:
  5309   000F5E  EFBD  F007         	goto	l3011
  5310   000F62                     u550:
  5311   000F62                     
  5312                           ;src/keyboard_contol_module/keyboard_control.c: 986:     {;src/keyboard_contol_module/ke
      +                          yboard_control.c: 987:         play_next_song();
  5313   000F62  EC32  F00E         	call	_play_next_song	;wreg free
  5314   000F66                     
  5315                           ;src/keyboard_contol_module/keyboard_control.c: 990:         busy_wait(50000);
  5316   000F66  0E50               	movlw	80
  5317   000F68  6E36               	movwf	busy_wait@iterations^0,c
  5318   000F6A  0EC3               	movlw	195
  5319   000F6C  6E37               	movwf	(busy_wait@iterations+1)^0,c
  5320   000F6E  0E00               	movlw	0
  5321   000F70  6E38               	movwf	(busy_wait@iterations+2)^0,c
  5322   000F72  0E00               	movlw	0
  5323   000F74  6E39               	movwf	(busy_wait@iterations+3)^0,c
  5324   000F76  EC3E  F00D         	call	_busy_wait	;wreg free
  5325   000F7A                     l3011:
  5326                           
  5327                           ;src/keyboard_contol_module/keyboard_control.c: 993:     if ((buttons_pressed & 0x0008) 
      +                          == 0x0008)
  5328   000F7A  A60B               	btfss	_buttons_pressed^0,3,c
  5329   000F7C  EFC2  F007         	goto	u561
  5330   000F80  EFC4  F007         	goto	u560
  5331   000F84                     u561:
  5332   000F84  EFD0  F007         	goto	l3017
  5333   000F88                     u560:
  5334   000F88                     
  5335                           ;src/keyboard_contol_module/keyboard_control.c: 994:     {;src/keyboard_contol_module/ke
      +                          yboard_control.c: 995:         volume_up();
  5336   000F88  EC9C  F00D         	call	_volume_up	;wreg free
  5337   000F8C                     
  5338                           ;src/keyboard_contol_module/keyboard_control.c: 998:         busy_wait(50000);
  5339   000F8C  0E50               	movlw	80
  5340   000F8E  6E36               	movwf	busy_wait@iterations^0,c
  5341   000F90  0EC3               	movlw	195
  5342   000F92  6E37               	movwf	(busy_wait@iterations+1)^0,c
  5343   000F94  0E00               	movlw	0
  5344   000F96  6E38               	movwf	(busy_wait@iterations+2)^0,c
  5345   000F98  0E00               	movlw	0
  5346   000F9A  6E39               	movwf	(busy_wait@iterations+3)^0,c
  5347   000F9C  EC3E  F00D         	call	_busy_wait	;wreg free
  5348   000FA0                     l3017:
  5349                           
  5350                           ;src/keyboard_contol_module/keyboard_control.c: 1001:     if ((buttons_pressed & 0x0010)
      +                           == 0x0010)
  5351   000FA0  A80B               	btfss	_buttons_pressed^0,4,c
  5352   000FA2  EFD5  F007         	goto	u571
  5353   000FA6  EFD7  F007         	goto	u570
  5354   000FAA                     u571:
  5355   000FAA  EFE3  F007         	goto	l3023
  5356   000FAE                     u570:
  5357   000FAE                     
  5358                           ;src/keyboard_contol_module/keyboard_control.c: 1002:     {;src/keyboard_contol_module/k
      +                          eyboard_control.c: 1003:         volume_down();
  5359   000FAE  ECBA  F00D         	call	_volume_down	;wreg free
  5360   000FB2                     
  5361                           ;src/keyboard_contol_module/keyboard_control.c: 1006:         busy_wait(50000);
  5362   000FB2  0E50               	movlw	80
  5363   000FB4  6E36               	movwf	busy_wait@iterations^0,c
  5364   000FB6  0EC3               	movlw	195
  5365   000FB8  6E37               	movwf	(busy_wait@iterations+1)^0,c
  5366   000FBA  0E00               	movlw	0
  5367   000FBC  6E38               	movwf	(busy_wait@iterations+2)^0,c
  5368   000FBE  0E00               	movlw	0
  5369   000FC0  6E39               	movwf	(busy_wait@iterations+3)^0,c
  5370   000FC2  EC3E  F00D         	call	_busy_wait	;wreg free
  5371   000FC6                     l3023:
  5372                           
  5373                           ;src/keyboard_contol_module/keyboard_control.c: 1009:     if ((buttons_pressed & 0x0020)
      +                           == 0x0020)
  5374   000FC6  AA0B               	btfss	_buttons_pressed^0,5,c
  5375   000FC8  EFE8  F007         	goto	u581
  5376   000FCC  EFEA  F007         	goto	u580
  5377   000FD0                     u581:
  5378   000FD0  EFF6  F007         	goto	l3029
  5379   000FD4                     u580:
  5380   000FD4                     
  5381                           ;src/keyboard_contol_module/keyboard_control.c: 1010:     {;src/keyboard_contol_module/k
      +                          eyboard_control.c: 1011:         play();
  5382   000FD4  EC50  F00E         	call	_play	;wreg free
  5383   000FD8                     
  5384                           ;src/keyboard_contol_module/keyboard_control.c: 1014:         busy_wait(50000);
  5385   000FD8  0E50               	movlw	80
  5386   000FDA  6E36               	movwf	busy_wait@iterations^0,c
  5387   000FDC  0EC3               	movlw	195
  5388   000FDE  6E37               	movwf	(busy_wait@iterations+1)^0,c
  5389   000FE0  0E00               	movlw	0
  5390   000FE2  6E38               	movwf	(busy_wait@iterations+2)^0,c
  5391   000FE4  0E00               	movlw	0
  5392   000FE6  6E39               	movwf	(busy_wait@iterations+3)^0,c
  5393   000FE8  EC3E  F00D         	call	_busy_wait	;wreg free
  5394   000FEC                     l3029:
  5395                           
  5396                           ;src/keyboard_contol_module/keyboard_control.c: 1017:     if ((buttons_pressed & 0x0040)
      +                           == 0x0040)
  5397   000FEC  AC0B               	btfss	_buttons_pressed^0,6,c
  5398   000FEE  EFFB  F007         	goto	u591
  5399   000FF2  EFFD  F007         	goto	u590
  5400   000FF6                     u591:
  5401   000FF6  EF09  F008         	goto	l3035
  5402   000FFA                     u590:
  5403   000FFA                     
  5404                           ;src/keyboard_contol_module/keyboard_control.c: 1018:     {;src/keyboard_contol_module/k
      +                          eyboard_control.c: 1019:         pause();
  5405   000FFA  EC6E  F00E         	call	_pause	;wreg free
  5406   000FFE                     
  5407                           ;src/keyboard_contol_module/keyboard_control.c: 1022:         busy_wait(50000);
  5408   000FFE  0E50               	movlw	80
  5409   001000  6E36               	movwf	busy_wait@iterations^0,c
  5410   001002  0EC3               	movlw	195
  5411   001004  6E37               	movwf	(busy_wait@iterations+1)^0,c
  5412   001006  0E00               	movlw	0
  5413   001008  6E38               	movwf	(busy_wait@iterations+2)^0,c
  5414   00100A  0E00               	movlw	0
  5415   00100C  6E39               	movwf	(busy_wait@iterations+3)^0,c
  5416   00100E  EC3E  F00D         	call	_busy_wait	;wreg free
  5417   001012                     l3035:
  5418                           
  5419                           ;src/keyboard_contol_module/keyboard_control.c: 1025:     if ((buttons_pressed & 0x0080)
      +                           == 0x0080)
  5420   001012  AE0B               	btfss	_buttons_pressed^0,7,c
  5421   001014  EF0E  F008         	goto	u601
  5422   001018  EF10  F008         	goto	u600
  5423   00101C                     u601:
  5424   00101C  EF36  F008         	goto	l3053
  5425   001020                     u600:
  5426   001020                     
  5427                           ;src/keyboard_contol_module/keyboard_control.c: 1026:     {;src/keyboard_contol_module/k
      +                          eyboard_control.c: 1027:         if (current_song_repeating_on == 0)
  5428   001020  5016               	movf	_current_song_repeating_on^0,w,c
  5429   001022  A4D8               	btfss	status,2,c
  5430   001024  EF16  F008         	goto	u611
  5431   001028  EF18  F008         	goto	u610
  5432   00102C                     u611:
  5433   00102C  EF23  F008         	goto	l3045
  5434   001030                     u610:
  5435   001030                     
  5436                           ;src/keyboard_contol_module/keyboard_control.c: 1028:         {;src/keyboard_contol_modu
      +                          le/keyboard_control.c: 1029:             toggle_repeat_current_song(0x00, 0xE2);
  5437   001030  0EE2               	movlw	226
  5438   001032  6E3B               	movwf	toggle_repeat_current_song@option_corr_code^0,c
  5439   001034  0E00               	movlw	0
  5440   001036  ECD9  F00C         	call	_toggle_repeat_current_song
  5441   00103A                     
  5442                           ;src/keyboard_contol_module/keyboard_control.c: 1030:             current_song_repeating
      +                          _on = 1;
  5443   00103A  0E01               	movlw	1
  5444   00103C  6E16               	movwf	_current_song_repeating_on^0,c
  5445   00103E                     
  5446                           ;src/keyboard_contol_module/keyboard_control.c: 1031:             turn_on_led_D2();
  5447   00103E  ECFD  F010         	call	_turn_on_led_D2	;wreg free
  5448                           
  5449                           ;src/keyboard_contol_module/keyboard_control.c: 1032:         }
  5450   001042  EF2C  F008         	goto	l3051
  5451   001046                     l3045:
  5452                           
  5453                           ;src/keyboard_contol_module/keyboard_control.c: 1034:         {;src/keyboard_contol_modu
      +                          le/keyboard_control.c: 1035:             toggle_repeat_current_song(0x01, 0xE1);
  5454   001046  0EE1               	movlw	225
  5455   001048  6E3B               	movwf	toggle_repeat_current_song@option_corr_code^0,c
  5456   00104A  0E01               	movlw	1
  5457   00104C  ECD9  F00C         	call	_toggle_repeat_current_song
  5458   001050                     
  5459                           ;src/keyboard_contol_module/keyboard_control.c: 1036:             current_song_repeating
      +                          _on = 0;
  5460   001050  0E00               	movlw	0
  5461   001052  6E16               	movwf	_current_song_repeating_on^0,c
  5462   001054                     
  5463                           ;src/keyboard_contol_module/keyboard_control.c: 1037:             turn_off_led_D2();
  5464   001054  EC05  F011         	call	_turn_off_led_D2	;wreg free
  5465   001058                     l3051:
  5466                           
  5467                           ;src/keyboard_contol_module/keyboard_control.c: 1041:         busy_wait(50000);
  5468   001058  0E50               	movlw	80
  5469   00105A  6E36               	movwf	busy_wait@iterations^0,c
  5470   00105C  0EC3               	movlw	195
  5471   00105E  6E37               	movwf	(busy_wait@iterations+1)^0,c
  5472   001060  0E00               	movlw	0
  5473   001062  6E38               	movwf	(busy_wait@iterations+2)^0,c
  5474   001064  0E00               	movlw	0
  5475   001066  6E39               	movwf	(busy_wait@iterations+3)^0,c
  5476   001068  EC3E  F00D         	call	_busy_wait	;wreg free
  5477   00106C                     l3053:
  5478                           
  5479                           ;src/keyboard_contol_module/keyboard_control.c: 1044:     if ((buttons_pressed & 0x0100)
      +                           == 0x0100)
  5480   00106C  A00C               	btfss	(_buttons_pressed+1)^0,0,c
  5481   00106E  EF3B  F008         	goto	u621
  5482   001072  EF3D  F008         	goto	u620
  5483   001076                     u621:
  5484   001076  EF5F  F008         	goto	l3071
  5485   00107A                     u620:
  5486   00107A                     
  5487                           ;src/keyboard_contol_module/keyboard_control.c: 1045:     {;src/keyboard_contol_module/k
      +                          eyboard_control.c: 1046:         if (loop_all_songs_from_folder_on == 0)
  5488   00107A  5015               	movf	_loop_all_songs_from_folder_on^0,w,c
  5489   00107C  A4D8               	btfss	status,2,c
  5490   00107E  EF43  F008         	goto	u631
  5491   001082  EF45  F008         	goto	u630
  5492   001086                     u631:
  5493   001086  EF4E  F008         	goto	l3063
  5494   00108A                     u630:
  5495   00108A                     
  5496                           ;src/keyboard_contol_module/keyboard_control.c: 1047:         {;src/keyboard_contol_modu
      +                          le/keyboard_control.c: 1048:             loop_all_songs_from_folder(0x01);
  5497   00108A  0E01               	movlw	1
  5498   00108C  EC7D  F00D         	call	_loop_all_songs_from_folder
  5499   001090                     
  5500                           ;src/keyboard_contol_module/keyboard_control.c: 1049:             loop_all_songs_from_fo
      +                          lder_on = 1;
  5501   001090  0E01               	movlw	1
  5502   001092  6E15               	movwf	_loop_all_songs_from_folder_on^0,c
  5503   001094                     
  5504                           ;src/keyboard_contol_module/keyboard_control.c: 1050:             turn_on_led_D3();
  5505   001094  ECF9  F010         	call	_turn_on_led_D3	;wreg free
  5506                           
  5507                           ;src/keyboard_contol_module/keyboard_control.c: 1051:         }
  5508   001098  EF55  F008         	goto	l3069
  5509   00109C                     l3063:
  5510                           
  5511                           ;src/keyboard_contol_module/keyboard_control.c: 1053:         {;src/keyboard_contol_modu
      +                          le/keyboard_control.c: 1054:             loop_all_songs_from_folder(0x00);
  5512   00109C  0E00               	movlw	0
  5513   00109E  EC7D  F00D         	call	_loop_all_songs_from_folder
  5514   0010A2                     
  5515                           ;src/keyboard_contol_module/keyboard_control.c: 1055:             loop_all_songs_from_fo
      +                          lder_on = 0;
  5516   0010A2  0E00               	movlw	0
  5517   0010A4  6E15               	movwf	_loop_all_songs_from_folder_on^0,c
  5518   0010A6                     
  5519                           ;src/keyboard_contol_module/keyboard_control.c: 1056:             turn_off_led_D3();
  5520   0010A6  EC01  F011         	call	_turn_off_led_D3	;wreg free
  5521   0010AA                     l3069:
  5522                           
  5523                           ;src/keyboard_contol_module/keyboard_control.c: 1060:         busy_wait(50000);
  5524   0010AA  0E50               	movlw	80
  5525   0010AC  6E36               	movwf	busy_wait@iterations^0,c
  5526   0010AE  0EC3               	movlw	195
  5527   0010B0  6E37               	movwf	(busy_wait@iterations+1)^0,c
  5528   0010B2  0E00               	movlw	0
  5529   0010B4  6E38               	movwf	(busy_wait@iterations+2)^0,c
  5530   0010B6  0E00               	movlw	0
  5531   0010B8  6E39               	movwf	(busy_wait@iterations+3)^0,c
  5532   0010BA  EC3E  F00D         	call	_busy_wait	;wreg free
  5533   0010BE                     l3071:
  5534                           
  5535                           ;src/keyboard_contol_module/keyboard_control.c: 1063:     if ((buttons_pressed & 0x4000)
      +                           == 0x4000)
  5536   0010BE  AC0C               	btfss	(_buttons_pressed+1)^0,6,c
  5537   0010C0  EF64  F008         	goto	u641
  5538   0010C4  EF66  F008         	goto	u640
  5539   0010C8                     u641:
  5540   0010C8  EF72  F008         	goto	l3077
  5541   0010CC                     u640:
  5542   0010CC                     
  5543                           ;src/keyboard_contol_module/keyboard_control.c: 1064:     {;src/keyboard_contol_module/k
      +                          eyboard_control.c: 1065:         standby();
  5544   0010CC  ECD8  F00D         	call	_standby	;wreg free
  5545   0010D0                     
  5546                           ;src/keyboard_contol_module/keyboard_control.c: 1068:         busy_wait(50000);
  5547   0010D0  0E50               	movlw	80
  5548   0010D2  6E36               	movwf	busy_wait@iterations^0,c
  5549   0010D4  0EC3               	movlw	195
  5550   0010D6  6E37               	movwf	(busy_wait@iterations+1)^0,c
  5551   0010D8  0E00               	movlw	0
  5552   0010DA  6E38               	movwf	(busy_wait@iterations+2)^0,c
  5553   0010DC  0E00               	movlw	0
  5554   0010DE  6E39               	movwf	(busy_wait@iterations+3)^0,c
  5555   0010E0  EC3E  F00D         	call	_busy_wait	;wreg free
  5556   0010E4                     l3077:
  5557                           
  5558                           ;src/keyboard_contol_module/keyboard_control.c: 1071:     if ((buttons_pressed & 0x8000)
      +                           == 0x8000)
  5559   0010E4  AE0C               	btfss	(_buttons_pressed+1)^0,7,c
  5560   0010E6  EF77  F008         	goto	u651
  5561   0010EA  EF79  F008         	goto	u650
  5562   0010EE                     u651:
  5563   0010EE  EF85  F008         	goto	l525
  5564   0010F2                     u650:
  5565   0010F2                     
  5566                           ;src/keyboard_contol_module/keyboard_control.c: 1072:     {;src/keyboard_contol_module/k
      +                          eyboard_control.c: 1073:         reset_function();
  5567   0010F2  ECF6  F00D         	call	_reset_function	;wreg free
  5568   0010F6                     
  5569                           ;src/keyboard_contol_module/keyboard_control.c: 1076:         busy_wait(50000);
  5570   0010F6  0E50               	movlw	80
  5571   0010F8  6E36               	movwf	busy_wait@iterations^0,c
  5572   0010FA  0EC3               	movlw	195
  5573   0010FC  6E37               	movwf	(busy_wait@iterations+1)^0,c
  5574   0010FE  0E00               	movlw	0
  5575   001100  6E38               	movwf	(busy_wait@iterations+2)^0,c
  5576   001102  0E00               	movlw	0
  5577   001104  6E39               	movwf	(busy_wait@iterations+3)^0,c
  5578   001106  EC3E  F00D         	call	_busy_wait	;wreg free
  5579   00110A                     l525:
  5580   00110A  0012               	return		;funcret
  5581   00110C                     __end_of_buttons_options_interface:
  5582                           	callstack 0
  5583                           
  5584 ;; *************** function _volume_up *****************
  5585 ;; Defined at:
  5586 ;;		line 70 in file "src/kt403_control_module/KT403A.c"
  5587 ;; Parameters:    Size  Location     Type
  5588 ;;		None
  5589 ;; Auto vars:     Size  Location     Type
  5590 ;;		None
  5591 ;; Return value:  Size  Location     Type
  5592 ;;                  1    wreg      void 
  5593 ;; Registers used:
  5594 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5595 ;; Tracked objects:
  5596 ;;		On entry : 0/0
  5597 ;;		On exit  : 0/0
  5598 ;;		Unchanged: 0/0
  5599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  5600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5603 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5604 ;;Total ram usage:        0 bytes
  5605 ;; Hardware stack levels used: 1
  5606 ;; Hardware stack levels required when called: 4
  5607 ;; This function calls:
  5608 ;;		_reset_buffer_small
  5609 ;;		_start_sending
  5610 ;; This function is called by:
  5611 ;;		_buttons_options_interface
  5612 ;; This function uses a non-reentrant model
  5613 ;;
  5614                           
  5615                           	psect	text64
  5616   001B38                     __ptext64:
  5617                           	callstack 0
  5618   001B38                     _volume_up:
  5619                           	callstack 25
  5620   001B38                     
  5621                           ;src/kt403_control_module/KT403A.c: 72:     reset_buffer_small();
  5622   001B38  EC37  F00F         	call	_reset_buffer_small	;wreg free
  5623   001B3C                     
  5624                           ;src/kt403_control_module/KT403A.c: 74:     BUFFER_small[0] = 0x7E;
  5625   001B3C  0E7E               	movlw	126
  5626   001B3E  6E29               	movwf	_BUFFER_small^0,c
  5627   001B40                     
  5628                           ;src/kt403_control_module/KT403A.c: 75:     BUFFER_small[1] = 0xFF;
  5629   001B40  682A               	setf	(_BUFFER_small+1)^0,c
  5630   001B42                     
  5631                           ;src/kt403_control_module/KT403A.c: 76:     BUFFER_small[2] = 0x06;
  5632   001B42  0E06               	movlw	6
  5633   001B44  6E2B               	movwf	(_BUFFER_small+2)^0,c
  5634   001B46                     
  5635                           ;src/kt403_control_module/KT403A.c: 77:     BUFFER_small[3] = 0x04;
  5636   001B46  0E04               	movlw	4
  5637   001B48  6E2C               	movwf	(_BUFFER_small+3)^0,c
  5638   001B4A                     
  5639                           ;src/kt403_control_module/KT403A.c: 78:     BUFFER_small[4] = 0x01;
  5640   001B4A  0E01               	movlw	1
  5641   001B4C  6E2D               	movwf	(_BUFFER_small+4)^0,c
  5642   001B4E                     
  5643                           ;src/kt403_control_module/KT403A.c: 79:     BUFFER_small[5] = 0x00;
  5644   001B4E  0E00               	movlw	0
  5645   001B50  6E2E               	movwf	(_BUFFER_small+5)^0,c
  5646   001B52                     
  5647                           ;src/kt403_control_module/KT403A.c: 80:     BUFFER_small[6] = 0x00;
  5648   001B52  0E00               	movlw	0
  5649   001B54  6E2F               	movwf	(_BUFFER_small+6)^0,c
  5650   001B56                     
  5651                           ;src/kt403_control_module/KT403A.c: 81:     BUFFER_small[7] = 0xEF;
  5652   001B56  0EEF               	movlw	239
  5653   001B58  6E30               	movwf	(_BUFFER_small+7)^0,c
  5654   001B5A                     
  5655                           ;src/kt403_control_module/KT403A.c: 83:     start_sending(BUFFER_small, 8);
  5656   001B5A  0E29               	movlw	low _BUFFER_small
  5657   001B5C  6E36               	movwf	start_sending@source_buffer^0,c
  5658   001B5E  0E08               	movlw	8
  5659   001B60  6E37               	movwf	start_sending@source_buffer_length^0,c
  5660   001B62  0E00               	movlw	0
  5661   001B64  6E38               	movwf	(start_sending@source_buffer_length+1)^0,c
  5662   001B66  0E00               	movlw	0
  5663   001B68  6E39               	movwf	(start_sending@source_buffer_length+2)^0,c
  5664   001B6A  0E00               	movlw	0
  5665   001B6C  6E3A               	movwf	(start_sending@source_buffer_length+3)^0,c
  5666   001B6E  ECFC  F00C         	call	_start_sending	;wreg free
  5667   001B72  0012               	return		;funcret
  5668   001B74                     __end_of_volume_up:
  5669                           	callstack 0
  5670                           
  5671 ;; *************** function _volume_down *****************
  5672 ;; Defined at:
  5673 ;;		line 86 in file "src/kt403_control_module/KT403A.c"
  5674 ;; Parameters:    Size  Location     Type
  5675 ;;		None
  5676 ;; Auto vars:     Size  Location     Type
  5677 ;;		None
  5678 ;; Return value:  Size  Location     Type
  5679 ;;                  1    wreg      void 
  5680 ;; Registers used:
  5681 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5682 ;; Tracked objects:
  5683 ;;		On entry : 0/0
  5684 ;;		On exit  : 0/0
  5685 ;;		Unchanged: 0/0
  5686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  5687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5690 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5691 ;;Total ram usage:        0 bytes
  5692 ;; Hardware stack levels used: 1
  5693 ;; Hardware stack levels required when called: 4
  5694 ;; This function calls:
  5695 ;;		_reset_buffer_small
  5696 ;;		_start_sending
  5697 ;; This function is called by:
  5698 ;;		_buttons_options_interface
  5699 ;; This function uses a non-reentrant model
  5700 ;;
  5701                           
  5702                           	psect	text65
  5703   001B74                     __ptext65:
  5704                           	callstack 0
  5705   001B74                     _volume_down:
  5706                           	callstack 25
  5707   001B74                     
  5708                           ;src/kt403_control_module/KT403A.c: 88:     reset_buffer_small();
  5709   001B74  EC37  F00F         	call	_reset_buffer_small	;wreg free
  5710   001B78                     
  5711                           ;src/kt403_control_module/KT403A.c: 90:     BUFFER_small[0] = 0x7E;
  5712   001B78  0E7E               	movlw	126
  5713   001B7A  6E29               	movwf	_BUFFER_small^0,c
  5714   001B7C                     
  5715                           ;src/kt403_control_module/KT403A.c: 91:     BUFFER_small[1] = 0xFF;
  5716   001B7C  682A               	setf	(_BUFFER_small+1)^0,c
  5717   001B7E                     
  5718                           ;src/kt403_control_module/KT403A.c: 92:     BUFFER_small[2] = 0x06;
  5719   001B7E  0E06               	movlw	6
  5720   001B80  6E2B               	movwf	(_BUFFER_small+2)^0,c
  5721   001B82                     
  5722                           ;src/kt403_control_module/KT403A.c: 93:     BUFFER_small[3] = 0x05;
  5723   001B82  0E05               	movlw	5
  5724   001B84  6E2C               	movwf	(_BUFFER_small+3)^0,c
  5725   001B86                     
  5726                           ;src/kt403_control_module/KT403A.c: 94:     BUFFER_small[4] = 0x01;
  5727   001B86  0E01               	movlw	1
  5728   001B88  6E2D               	movwf	(_BUFFER_small+4)^0,c
  5729   001B8A                     
  5730                           ;src/kt403_control_module/KT403A.c: 95:     BUFFER_small[5] = 0x00;
  5731   001B8A  0E00               	movlw	0
  5732   001B8C  6E2E               	movwf	(_BUFFER_small+5)^0,c
  5733   001B8E                     
  5734                           ;src/kt403_control_module/KT403A.c: 96:     BUFFER_small[6] = 0x00;
  5735   001B8E  0E00               	movlw	0
  5736   001B90  6E2F               	movwf	(_BUFFER_small+6)^0,c
  5737   001B92                     
  5738                           ;src/kt403_control_module/KT403A.c: 97:     BUFFER_small[7] = 0xEF;
  5739   001B92  0EEF               	movlw	239
  5740   001B94  6E30               	movwf	(_BUFFER_small+7)^0,c
  5741   001B96                     
  5742                           ;src/kt403_control_module/KT403A.c: 99:     start_sending(BUFFER_small, 8);
  5743   001B96  0E29               	movlw	low _BUFFER_small
  5744   001B98  6E36               	movwf	start_sending@source_buffer^0,c
  5745   001B9A  0E08               	movlw	8
  5746   001B9C  6E37               	movwf	start_sending@source_buffer_length^0,c
  5747   001B9E  0E00               	movlw	0
  5748   001BA0  6E38               	movwf	(start_sending@source_buffer_length+1)^0,c
  5749   001BA2  0E00               	movlw	0
  5750   001BA4  6E39               	movwf	(start_sending@source_buffer_length+2)^0,c
  5751   001BA6  0E00               	movlw	0
  5752   001BA8  6E3A               	movwf	(start_sending@source_buffer_length+3)^0,c
  5753   001BAA  ECFC  F00C         	call	_start_sending	;wreg free
  5754   001BAE  0012               	return		;funcret
  5755   001BB0                     __end_of_volume_down:
  5756                           	callstack 0
  5757                           
  5758 ;; *************** function _turn_on_led_D3 *****************
  5759 ;; Defined at:
  5760 ;;		line 18 in file "src/curiosity_leds_module/curiosity_leds_module.c"
  5761 ;; Parameters:    Size  Location     Type
  5762 ;;		None
  5763 ;; Auto vars:     Size  Location     Type
  5764 ;;		None
  5765 ;; Return value:  Size  Location     Type
  5766 ;;                  1    wreg      void 
  5767 ;; Registers used:
  5768 ;;		wreg, status,2, status,0
  5769 ;; Tracked objects:
  5770 ;;		On entry : 0/0
  5771 ;;		On exit  : 0/0
  5772 ;;		Unchanged: 0/0
  5773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  5774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5777 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5778 ;;Total ram usage:        0 bytes
  5779 ;; Hardware stack levels used: 1
  5780 ;; Hardware stack levels required when called: 2
  5781 ;; This function calls:
  5782 ;;		Nothing
  5783 ;; This function is called by:
  5784 ;;		_buttons_options_interface
  5785 ;; This function uses a non-reentrant model
  5786 ;;
  5787                           
  5788                           	psect	text66
  5789   0021F2                     __ptext66:
  5790                           	callstack 0
  5791   0021F2                     _turn_on_led_D3:
  5792                           	callstack 27
  5793   0021F2                     
  5794                           ;src/curiosity_leds_module/curiosity_leds_module.c: 20:     PORTA = PORTA | 0b00100000;;
  5795   0021F2  508C               	movf	140,w,c	;volatile
  5796   0021F4  0920               	iorlw	32
  5797   0021F6  6E8C               	movwf	140,c	;volatile
  5798   0021F8  0012               	return		;funcret
  5799   0021FA                     __end_of_turn_on_led_D3:
  5800                           	callstack 0
  5801                           
  5802 ;; *************** function _turn_on_led_D2 *****************
  5803 ;; Defined at:
  5804 ;;		line 13 in file "src/curiosity_leds_module/curiosity_leds_module.c"
  5805 ;; Parameters:    Size  Location     Type
  5806 ;;		None
  5807 ;; Auto vars:     Size  Location     Type
  5808 ;;		None
  5809 ;; Return value:  Size  Location     Type
  5810 ;;                  1    wreg      void 
  5811 ;; Registers used:
  5812 ;;		wreg, status,2, status,0
  5813 ;; Tracked objects:
  5814 ;;		On entry : 0/0
  5815 ;;		On exit  : 0/0
  5816 ;;		Unchanged: 0/0
  5817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  5818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5821 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5822 ;;Total ram usage:        0 bytes
  5823 ;; Hardware stack levels used: 1
  5824 ;; Hardware stack levels required when called: 2
  5825 ;; This function calls:
  5826 ;;		Nothing
  5827 ;; This function is called by:
  5828 ;;		_buttons_options_interface
  5829 ;; This function uses a non-reentrant model
  5830 ;;
  5831                           
  5832                           	psect	text67
  5833   0021FA                     __ptext67:
  5834                           	callstack 0
  5835   0021FA                     _turn_on_led_D2:
  5836                           	callstack 27
  5837   0021FA                     
  5838                           ;src/curiosity_leds_module/curiosity_leds_module.c: 15:     PORTA = PORTA | 0b00010000;;
  5839   0021FA  508C               	movf	140,w,c	;volatile
  5840   0021FC  0910               	iorlw	16
  5841   0021FE  6E8C               	movwf	140,c	;volatile
  5842   002200  0012               	return		;funcret
  5843   002202                     __end_of_turn_on_led_D2:
  5844                           	callstack 0
  5845                           
  5846 ;; *************** function _turn_off_led_D3 *****************
  5847 ;; Defined at:
  5848 ;;		line 38 in file "src/curiosity_leds_module/curiosity_leds_module.c"
  5849 ;; Parameters:    Size  Location     Type
  5850 ;;		None
  5851 ;; Auto vars:     Size  Location     Type
  5852 ;;		None
  5853 ;; Return value:  Size  Location     Type
  5854 ;;                  1    wreg      void 
  5855 ;; Registers used:
  5856 ;;		wreg, status,2, status,0
  5857 ;; Tracked objects:
  5858 ;;		On entry : 0/0
  5859 ;;		On exit  : 0/0
  5860 ;;		Unchanged: 0/0
  5861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  5862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5865 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5866 ;;Total ram usage:        0 bytes
  5867 ;; Hardware stack levels used: 1
  5868 ;; Hardware stack levels required when called: 2
  5869 ;; This function calls:
  5870 ;;		Nothing
  5871 ;; This function is called by:
  5872 ;;		_buttons_options_interface
  5873 ;; This function uses a non-reentrant model
  5874 ;;
  5875                           
  5876                           	psect	text68
  5877   002202                     __ptext68:
  5878                           	callstack 0
  5879   002202                     _turn_off_led_D3:
  5880                           	callstack 27
  5881   002202                     
  5882                           ;src/curiosity_leds_module/curiosity_leds_module.c: 40:     PORTA = PORTA & ~0b00100000;
      +                          ;
  5883   002202  508C               	movf	140,w,c	;volatile
  5884   002204  0BDF               	andlw	223
  5885   002206  6E8C               	movwf	140,c	;volatile
  5886   002208  0012               	return		;funcret
  5887   00220A                     __end_of_turn_off_led_D3:
  5888                           	callstack 0
  5889                           
  5890 ;; *************** function _turn_off_led_D2 *****************
  5891 ;; Defined at:
  5892 ;;		line 33 in file "src/curiosity_leds_module/curiosity_leds_module.c"
  5893 ;; Parameters:    Size  Location     Type
  5894 ;;		None
  5895 ;; Auto vars:     Size  Location     Type
  5896 ;;		None
  5897 ;; Return value:  Size  Location     Type
  5898 ;;                  1    wreg      void 
  5899 ;; Registers used:
  5900 ;;		wreg, status,2, status,0
  5901 ;; Tracked objects:
  5902 ;;		On entry : 0/0
  5903 ;;		On exit  : 0/0
  5904 ;;		Unchanged: 0/0
  5905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  5906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5909 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5910 ;;Total ram usage:        0 bytes
  5911 ;; Hardware stack levels used: 1
  5912 ;; Hardware stack levels required when called: 2
  5913 ;; This function calls:
  5914 ;;		Nothing
  5915 ;; This function is called by:
  5916 ;;		_buttons_options_interface
  5917 ;; This function uses a non-reentrant model
  5918 ;;
  5919                           
  5920                           	psect	text69
  5921   00220A                     __ptext69:
  5922                           	callstack 0
  5923   00220A                     _turn_off_led_D2:
  5924                           	callstack 27
  5925   00220A                     
  5926                           ;src/curiosity_leds_module/curiosity_leds_module.c: 35:     PORTA = PORTA & ~0b00010000;
      +                          ;
  5927   00220A  508C               	movf	140,w,c	;volatile
  5928   00220C  0BEF               	andlw	239
  5929   00220E  6E8C               	movwf	140,c	;volatile
  5930   002210  0012               	return		;funcret
  5931   002212                     __end_of_turn_off_led_D2:
  5932                           	callstack 0
  5933                           
  5934 ;; *************** function _toggle_repeat_current_song *****************
  5935 ;; Defined at:
  5936 ;;		line 206 in file "src/kt403_control_module/KT403A.c"
  5937 ;; Parameters:    Size  Location     Type
  5938 ;;  option          1    wreg     unsigned char 
  5939 ;;  option_corr_    1   10[COMRAM] unsigned char 
  5940 ;; Auto vars:     Size  Location     Type
  5941 ;;  option          1   11[COMRAM] unsigned char 
  5942 ;; Return value:  Size  Location     Type
  5943 ;;                  1    wreg      void 
  5944 ;; Registers used:
  5945 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5946 ;; Tracked objects:
  5947 ;;		On entry : 0/0
  5948 ;;		On exit  : 0/0
  5949 ;;		Unchanged: 0/0
  5950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  5951 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5952 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5954 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5955 ;;Total ram usage:        2 bytes
  5956 ;; Hardware stack levels used: 1
  5957 ;; Hardware stack levels required when called: 4
  5958 ;; This function calls:
  5959 ;;		_reset_buffer_big
  5960 ;;		_start_sending
  5961 ;; This function is called by:
  5962 ;;		_buttons_options_interface
  5963 ;; This function uses a non-reentrant model
  5964 ;;
  5965                           
  5966                           	psect	text70
  5967   0019B2                     __ptext70:
  5968                           	callstack 0
  5969   0019B2                     _toggle_repeat_current_song:
  5970                           	callstack 25
  5971                           
  5972                           ;incstack = 0
  5973                           ;toggle_repeat_current_song@option stored from wreg
  5974   0019B2  6E3C               	movwf	toggle_repeat_current_song@option^0,c
  5975   0019B4                     
  5976                           ;src/kt403_control_module/KT403A.c: 206: void toggle_repeat_current_song (unsigned char 
      +                          option, unsigned char option_corr_code);src/kt403_control_module/KT403A.c: 207: {;src/kt
      +                          403_control_module/KT403A.c: 208:     reset_buffer_big();
  5977   0019B4  EC26  F00F         	call	_reset_buffer_big	;wreg free
  5978   0019B8                     
  5979                           ;src/kt403_control_module/KT403A.c: 210:     BUFFER_big[0] = 0x7E;
  5980   0019B8  0E7E               	movlw	126
  5981   0019BA  6E1F               	movwf	_BUFFER_big^0,c
  5982   0019BC                     
  5983                           ;src/kt403_control_module/KT403A.c: 211:     BUFFER_big[1] = 0xFF;
  5984   0019BC  6820               	setf	(_BUFFER_big+1)^0,c
  5985   0019BE                     
  5986                           ;src/kt403_control_module/KT403A.c: 212:     BUFFER_big[2] = 0x06;
  5987   0019BE  0E06               	movlw	6
  5988   0019C0  6E21               	movwf	(_BUFFER_big+2)^0,c
  5989   0019C2                     
  5990                           ;src/kt403_control_module/KT403A.c: 213:     BUFFER_big[3] = 0x19;
  5991   0019C2  0E19               	movlw	25
  5992   0019C4  6E22               	movwf	(_BUFFER_big+3)^0,c
  5993   0019C6                     
  5994                           ;src/kt403_control_module/KT403A.c: 214:     BUFFER_big[4] = 0x01;
  5995   0019C6  0E01               	movlw	1
  5996   0019C8  6E23               	movwf	(_BUFFER_big+4)^0,c
  5997   0019CA                     
  5998                           ;src/kt403_control_module/KT403A.c: 215:     BUFFER_big[5] = 0x00;
  5999   0019CA  0E00               	movlw	0
  6000   0019CC  6E24               	movwf	(_BUFFER_big+5)^0,c
  6001   0019CE                     
  6002                           ;src/kt403_control_module/KT403A.c: 216:     BUFFER_big[6] = option;
  6003   0019CE  C03C  F025         	movff	toggle_repeat_current_song@option,_BUFFER_big+6
  6004   0019D2                     
  6005                           ;src/kt403_control_module/KT403A.c: 217:     BUFFER_big[7] = 0xFE;
  6006   0019D2  0EFE               	movlw	254
  6007   0019D4  6E26               	movwf	(_BUFFER_big+7)^0,c
  6008   0019D6                     
  6009                           ;src/kt403_control_module/KT403A.c: 218:     BUFFER_big[8] = option_corr_code;
  6010   0019D6  C03B  F027         	movff	toggle_repeat_current_song@option_corr_code,_BUFFER_big+8
  6011   0019DA                     
  6012                           ;src/kt403_control_module/KT403A.c: 219:     BUFFER_big[9] = 0xEF;
  6013   0019DA  0EEF               	movlw	239
  6014   0019DC  6E28               	movwf	(_BUFFER_big+9)^0,c
  6015   0019DE                     
  6016                           ;src/kt403_control_module/KT403A.c: 221:     start_sending(BUFFER_big, 10);
  6017   0019DE  0E1F               	movlw	low _BUFFER_big
  6018   0019E0  6E36               	movwf	start_sending@source_buffer^0,c
  6019   0019E2  0E0A               	movlw	10
  6020   0019E4  6E37               	movwf	start_sending@source_buffer_length^0,c
  6021   0019E6  0E00               	movlw	0
  6022   0019E8  6E38               	movwf	(start_sending@source_buffer_length+1)^0,c
  6023   0019EA  0E00               	movlw	0
  6024   0019EC  6E39               	movwf	(start_sending@source_buffer_length+2)^0,c
  6025   0019EE  0E00               	movlw	0
  6026   0019F0  6E3A               	movwf	(start_sending@source_buffer_length+3)^0,c
  6027   0019F2  ECFC  F00C         	call	_start_sending	;wreg free
  6028   0019F6  0012               	return		;funcret
  6029   0019F8                     __end_of_toggle_repeat_current_song:
  6030                           	callstack 0
  6031                           
  6032 ;; *************** function _reset_buffer_big *****************
  6033 ;; Defined at:
  6034 ;;		line 29 in file "src/kt403_control_module/KT403A.c"
  6035 ;; Parameters:    Size  Location     Type
  6036 ;;		None
  6037 ;; Auto vars:     Size  Location     Type
  6038 ;;  index           1    5[COMRAM] unsigned char 
  6039 ;; Return value:  Size  Location     Type
  6040 ;;                  1    wreg      void 
  6041 ;; Registers used:
  6042 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6043 ;; Tracked objects:
  6044 ;;		On entry : 0/0
  6045 ;;		On exit  : 0/0
  6046 ;;		Unchanged: 0/0
  6047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  6048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6049 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6051 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6052 ;;Total ram usage:        1 bytes
  6053 ;; Hardware stack levels used: 1
  6054 ;; Hardware stack levels required when called: 2
  6055 ;; This function calls:
  6056 ;;		Nothing
  6057 ;; This function is called by:
  6058 ;;		_toggle_repeat_current_song
  6059 ;; This function uses a non-reentrant model
  6060 ;;
  6061                           
  6062                           	psect	text71
  6063   001E4C                     __ptext71:
  6064                           	callstack 0
  6065   001E4C                     _reset_buffer_big:
  6066                           	callstack 26
  6067   001E4C                     
  6068                           ;src/kt403_control_module/KT403A.c: 31:     unsigned char index;;src/kt403_control_modul
      +                          e/KT403A.c: 32:     for (index = 0; index < 10; index++)
  6069   001E4C  0E00               	movlw	0
  6070   001E4E  6E36               	movwf	reset_buffer_big@index^0,c
  6071   001E50                     l1893:
  6072                           
  6073                           ;src/kt403_control_module/KT403A.c: 33:     {;src/kt403_control_module/KT403A.c: 34:    
      +                               BUFFER_big[index] = 0;
  6074   001E50  5036               	movf	reset_buffer_big@index^0,w,c
  6075   001E52  0F1F               	addlw	low _BUFFER_big
  6076   001E54  6ED9               	movwf	fsr2l,c
  6077   001E56  6ADA               	clrf	fsr2h,c
  6078   001E58  6ADF               	clrf	indf2,c
  6079   001E5A                     
  6080                           ;src/kt403_control_module/KT403A.c: 35:     }
  6081   001E5A  2A36               	incf	reset_buffer_big@index^0,f,c
  6082   001E5C  0E09               	movlw	9
  6083   001E5E  6436               	cpfsgt	reset_buffer_big@index^0,c
  6084   001E60  EF34  F00F         	goto	u141
  6085   001E64  EF36  F00F         	goto	u140
  6086   001E68                     u141:
  6087   001E68  EF28  F00F         	goto	l1893
  6088   001E6C                     u140:
  6089   001E6C  0012               	return		;funcret
  6090   001E6E                     __end_of_reset_buffer_big:
  6091                           	callstack 0
  6092                           
  6093 ;; *************** function _standby *****************
  6094 ;; Defined at:
  6095 ;;		line 110 in file "src/kt403_control_module/KT403A.c"
  6096 ;; Parameters:    Size  Location     Type
  6097 ;;		None
  6098 ;; Auto vars:     Size  Location     Type
  6099 ;;		None
  6100 ;; Return value:  Size  Location     Type
  6101 ;;                  1    wreg      void 
  6102 ;; Registers used:
  6103 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6104 ;; Tracked objects:
  6105 ;;		On entry : 0/0
  6106 ;;		On exit  : 0/0
  6107 ;;		Unchanged: 0/0
  6108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  6109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6112 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6113 ;;Total ram usage:        0 bytes
  6114 ;; Hardware stack levels used: 1
  6115 ;; Hardware stack levels required when called: 4
  6116 ;; This function calls:
  6117 ;;		_reset_buffer_small
  6118 ;;		_start_sending
  6119 ;; This function is called by:
  6120 ;;		_buttons_options_interface
  6121 ;; This function uses a non-reentrant model
  6122 ;;
  6123                           
  6124                           	psect	text72
  6125   001BB0                     __ptext72:
  6126                           	callstack 0
  6127   001BB0                     _standby:
  6128                           	callstack 25
  6129   001BB0                     
  6130                           ;src/kt403_control_module/KT403A.c: 112:     reset_buffer_small();
  6131   001BB0  EC37  F00F         	call	_reset_buffer_small	;wreg free
  6132   001BB4                     
  6133                           ;src/kt403_control_module/KT403A.c: 114:     BUFFER_small[0] = 0x7E;
  6134   001BB4  0E7E               	movlw	126
  6135   001BB6  6E29               	movwf	_BUFFER_small^0,c
  6136   001BB8                     
  6137                           ;src/kt403_control_module/KT403A.c: 115:     BUFFER_small[1] = 0xFF;
  6138   001BB8  682A               	setf	(_BUFFER_small+1)^0,c
  6139   001BBA                     
  6140                           ;src/kt403_control_module/KT403A.c: 116:     BUFFER_small[2] = 0x06;
  6141   001BBA  0E06               	movlw	6
  6142   001BBC  6E2B               	movwf	(_BUFFER_small+2)^0,c
  6143   001BBE                     
  6144                           ;src/kt403_control_module/KT403A.c: 117:     BUFFER_small[3] = 0x0A;
  6145   001BBE  0E0A               	movlw	10
  6146   001BC0  6E2C               	movwf	(_BUFFER_small+3)^0,c
  6147   001BC2                     
  6148                           ;src/kt403_control_module/KT403A.c: 118:     BUFFER_small[4] = 0x01;
  6149   001BC2  0E01               	movlw	1
  6150   001BC4  6E2D               	movwf	(_BUFFER_small+4)^0,c
  6151   001BC6                     
  6152                           ;src/kt403_control_module/KT403A.c: 119:     BUFFER_small[5] = 0x00;
  6153   001BC6  0E00               	movlw	0
  6154   001BC8  6E2E               	movwf	(_BUFFER_small+5)^0,c
  6155   001BCA                     
  6156                           ;src/kt403_control_module/KT403A.c: 120:     BUFFER_small[6] = 0x00;
  6157   001BCA  0E00               	movlw	0
  6158   001BCC  6E2F               	movwf	(_BUFFER_small+6)^0,c
  6159   001BCE                     
  6160                           ;src/kt403_control_module/KT403A.c: 121:     BUFFER_small[7] = 0xEF;
  6161   001BCE  0EEF               	movlw	239
  6162   001BD0  6E30               	movwf	(_BUFFER_small+7)^0,c
  6163   001BD2                     
  6164                           ;src/kt403_control_module/KT403A.c: 123:     start_sending(BUFFER_small, 8);
  6165   001BD2  0E29               	movlw	low _BUFFER_small
  6166   001BD4  6E36               	movwf	start_sending@source_buffer^0,c
  6167   001BD6  0E08               	movlw	8
  6168   001BD8  6E37               	movwf	start_sending@source_buffer_length^0,c
  6169   001BDA  0E00               	movlw	0
  6170   001BDC  6E38               	movwf	(start_sending@source_buffer_length+1)^0,c
  6171   001BDE  0E00               	movlw	0
  6172   001BE0  6E39               	movwf	(start_sending@source_buffer_length+2)^0,c
  6173   001BE2  0E00               	movlw	0
  6174   001BE4  6E3A               	movwf	(start_sending@source_buffer_length+3)^0,c
  6175   001BE6  ECFC  F00C         	call	_start_sending	;wreg free
  6176   001BEA  0012               	return		;funcret
  6177   001BEC                     __end_of_standby:
  6178                           	callstack 0
  6179                           
  6180 ;; *************** function _reset_function *****************
  6181 ;; Defined at:
  6182 ;;		line 126 in file "src/kt403_control_module/KT403A.c"
  6183 ;; Parameters:    Size  Location     Type
  6184 ;;		None
  6185 ;; Auto vars:     Size  Location     Type
  6186 ;;		None
  6187 ;; Return value:  Size  Location     Type
  6188 ;;                  1    wreg      void 
  6189 ;; Registers used:
  6190 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6191 ;; Tracked objects:
  6192 ;;		On entry : 0/0
  6193 ;;		On exit  : 0/0
  6194 ;;		Unchanged: 0/0
  6195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  6196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6199 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6200 ;;Total ram usage:        0 bytes
  6201 ;; Hardware stack levels used: 1
  6202 ;; Hardware stack levels required when called: 4
  6203 ;; This function calls:
  6204 ;;		_reset_buffer_small
  6205 ;;		_start_sending
  6206 ;; This function is called by:
  6207 ;;		_buttons_options_interface
  6208 ;; This function uses a non-reentrant model
  6209 ;;
  6210                           
  6211                           	psect	text73
  6212   001BEC                     __ptext73:
  6213                           	callstack 0
  6214   001BEC                     _reset_function:
  6215                           	callstack 25
  6216   001BEC                     
  6217                           ;src/kt403_control_module/KT403A.c: 128:     reset_buffer_small();
  6218   001BEC  EC37  F00F         	call	_reset_buffer_small	;wreg free
  6219   001BF0                     
  6220                           ;src/kt403_control_module/KT403A.c: 130:     BUFFER_small[0] = 0x7E;
  6221   001BF0  0E7E               	movlw	126
  6222   001BF2  6E29               	movwf	_BUFFER_small^0,c
  6223   001BF4                     
  6224                           ;src/kt403_control_module/KT403A.c: 131:     BUFFER_small[1] = 0xFF;
  6225   001BF4  682A               	setf	(_BUFFER_small+1)^0,c
  6226   001BF6                     
  6227                           ;src/kt403_control_module/KT403A.c: 132:     BUFFER_small[2] = 0x06;
  6228   001BF6  0E06               	movlw	6
  6229   001BF8  6E2B               	movwf	(_BUFFER_small+2)^0,c
  6230   001BFA                     
  6231                           ;src/kt403_control_module/KT403A.c: 133:     BUFFER_small[3] = 0x0C;
  6232   001BFA  0E0C               	movlw	12
  6233   001BFC  6E2C               	movwf	(_BUFFER_small+3)^0,c
  6234   001BFE                     
  6235                           ;src/kt403_control_module/KT403A.c: 134:     BUFFER_small[4] = 0x01;
  6236   001BFE  0E01               	movlw	1
  6237   001C00  6E2D               	movwf	(_BUFFER_small+4)^0,c
  6238   001C02                     
  6239                           ;src/kt403_control_module/KT403A.c: 135:     BUFFER_small[5] = 0x00;
  6240   001C02  0E00               	movlw	0
  6241   001C04  6E2E               	movwf	(_BUFFER_small+5)^0,c
  6242   001C06                     
  6243                           ;src/kt403_control_module/KT403A.c: 136:     BUFFER_small[6] = 0x00;
  6244   001C06  0E00               	movlw	0
  6245   001C08  6E2F               	movwf	(_BUFFER_small+6)^0,c
  6246   001C0A                     
  6247                           ;src/kt403_control_module/KT403A.c: 137:     BUFFER_small[7] = 0xEF;
  6248   001C0A  0EEF               	movlw	239
  6249   001C0C  6E30               	movwf	(_BUFFER_small+7)^0,c
  6250   001C0E                     
  6251                           ;src/kt403_control_module/KT403A.c: 139:     start_sending(BUFFER_small, 8);
  6252   001C0E  0E29               	movlw	low _BUFFER_small
  6253   001C10  6E36               	movwf	start_sending@source_buffer^0,c
  6254   001C12  0E08               	movlw	8
  6255   001C14  6E37               	movwf	start_sending@source_buffer_length^0,c
  6256   001C16  0E00               	movlw	0
  6257   001C18  6E38               	movwf	(start_sending@source_buffer_length+1)^0,c
  6258   001C1A  0E00               	movlw	0
  6259   001C1C  6E39               	movwf	(start_sending@source_buffer_length+2)^0,c
  6260   001C1E  0E00               	movlw	0
  6261   001C20  6E3A               	movwf	(start_sending@source_buffer_length+3)^0,c
  6262   001C22  ECFC  F00C         	call	_start_sending	;wreg free
  6263   001C26  0012               	return		;funcret
  6264   001C28                     __end_of_reset_function:
  6265                           	callstack 0
  6266                           
  6267 ;; *************** function _play_specific_from_folder *****************
  6268 ;; Defined at:
  6269 ;;		line 174 in file "src/kt403_control_module/KT403A.c"
  6270 ;; Parameters:    Size  Location     Type
  6271 ;;  folder_numbe    1    wreg     unsigned char 
  6272 ;;  track_number    1   10[COMRAM] unsigned char 
  6273 ;; Auto vars:     Size  Location     Type
  6274 ;;  folder_numbe    1   11[COMRAM] unsigned char 
  6275 ;; Return value:  Size  Location     Type
  6276 ;;                  1    wreg      void 
  6277 ;; Registers used:
  6278 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6279 ;; Tracked objects:
  6280 ;;		On entry : 0/0
  6281 ;;		On exit  : 0/0
  6282 ;;		Unchanged: 0/0
  6283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  6284 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6285 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6287 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6288 ;;Total ram usage:        2 bytes
  6289 ;; Hardware stack levels used: 1
  6290 ;; Hardware stack levels required when called: 4
  6291 ;; This function calls:
  6292 ;;		_reset_buffer_small
  6293 ;;		_start_sending
  6294 ;; This function is called by:
  6295 ;;		_buttons_options_interface
  6296 ;; This function uses a non-reentrant model
  6297 ;;
  6298                           
  6299                           	psect	text74
  6300   001ABC                     __ptext74:
  6301                           	callstack 0
  6302   001ABC                     _play_specific_from_folder:
  6303                           	callstack 25
  6304                           
  6305                           ;incstack = 0
  6306                           ;play_specific_from_folder@folder_number stored from wreg
  6307   001ABC  6E3C               	movwf	play_specific_from_folder@folder_number^0,c
  6308   001ABE                     
  6309                           ;src/kt403_control_module/KT403A.c: 174: void play_specific_from_folder (unsigned char f
      +                          older_number, unsigned char track_number);src/kt403_control_module/KT403A.c: 175: {;src/
      +                          kt403_control_module/KT403A.c: 176:     reset_buffer_small();
  6310   001ABE  EC37  F00F         	call	_reset_buffer_small	;wreg free
  6311   001AC2                     
  6312                           ;src/kt403_control_module/KT403A.c: 178:     BUFFER_small[0] = 0x7E;
  6313   001AC2  0E7E               	movlw	126
  6314   001AC4  6E29               	movwf	_BUFFER_small^0,c
  6315   001AC6                     
  6316                           ;src/kt403_control_module/KT403A.c: 179:     BUFFER_small[1] = 0xFF;
  6317   001AC6  682A               	setf	(_BUFFER_small+1)^0,c
  6318   001AC8                     
  6319                           ;src/kt403_control_module/KT403A.c: 180:     BUFFER_small[2] = 0x06;
  6320   001AC8  0E06               	movlw	6
  6321   001ACA  6E2B               	movwf	(_BUFFER_small+2)^0,c
  6322   001ACC                     
  6323                           ;src/kt403_control_module/KT403A.c: 181:     BUFFER_small[3] = 0x0F;
  6324   001ACC  0E0F               	movlw	15
  6325   001ACE  6E2C               	movwf	(_BUFFER_small+3)^0,c
  6326   001AD0                     
  6327                           ;src/kt403_control_module/KT403A.c: 182:     BUFFER_small[4] = 0x01;
  6328   001AD0  0E01               	movlw	1
  6329   001AD2  6E2D               	movwf	(_BUFFER_small+4)^0,c
  6330   001AD4                     
  6331                           ;src/kt403_control_module/KT403A.c: 183:     BUFFER_small[5] = folder_number;
  6332   001AD4  C03C  F02E         	movff	play_specific_from_folder@folder_number,_BUFFER_small+5
  6333   001AD8                     
  6334                           ;src/kt403_control_module/KT403A.c: 184:     BUFFER_small[6] = track_number;
  6335   001AD8  C03B  F02F         	movff	play_specific_from_folder@track_number,_BUFFER_small+6
  6336   001ADC                     
  6337                           ;src/kt403_control_module/KT403A.c: 185:     BUFFER_small[7] = 0xEF;
  6338   001ADC  0EEF               	movlw	239
  6339   001ADE  6E30               	movwf	(_BUFFER_small+7)^0,c
  6340   001AE0                     
  6341                           ;src/kt403_control_module/KT403A.c: 187:     start_sending(BUFFER_small, 8);
  6342   001AE0  0E29               	movlw	low _BUFFER_small
  6343   001AE2  6E36               	movwf	start_sending@source_buffer^0,c
  6344   001AE4  0E08               	movlw	8
  6345   001AE6  6E37               	movwf	start_sending@source_buffer_length^0,c
  6346   001AE8  0E00               	movlw	0
  6347   001AEA  6E38               	movwf	(start_sending@source_buffer_length+1)^0,c
  6348   001AEC  0E00               	movlw	0
  6349   001AEE  6E39               	movwf	(start_sending@source_buffer_length+2)^0,c
  6350   001AF0  0E00               	movlw	0
  6351   001AF2  6E3A               	movwf	(start_sending@source_buffer_length+3)^0,c
  6352   001AF4  ECFC  F00C         	call	_start_sending	;wreg free
  6353   001AF8  0012               	return		;funcret
  6354   001AFA                     __end_of_play_specific_from_folder:
  6355                           	callstack 0
  6356                           
  6357 ;; *************** function _play_previous_song *****************
  6358 ;; Defined at:
  6359 ;;		line 54 in file "src/kt403_control_module/KT403A.c"
  6360 ;; Parameters:    Size  Location     Type
  6361 ;;		None
  6362 ;; Auto vars:     Size  Location     Type
  6363 ;;		None
  6364 ;; Return value:  Size  Location     Type
  6365 ;;                  1    wreg      void 
  6366 ;; Registers used:
  6367 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6368 ;; Tracked objects:
  6369 ;;		On entry : 0/0
  6370 ;;		On exit  : 0/0
  6371 ;;		Unchanged: 0/0
  6372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  6373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6376 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6377 ;;Total ram usage:        0 bytes
  6378 ;; Hardware stack levels used: 1
  6379 ;; Hardware stack levels required when called: 4
  6380 ;; This function calls:
  6381 ;;		_reset_buffer_small
  6382 ;;		_start_sending
  6383 ;; This function is called by:
  6384 ;;		_buttons_options_interface
  6385 ;; This function uses a non-reentrant model
  6386 ;;
  6387                           
  6388                           	psect	text75
  6389   001C28                     __ptext75:
  6390                           	callstack 0
  6391   001C28                     _play_previous_song:
  6392                           	callstack 25
  6393   001C28                     
  6394                           ;src/kt403_control_module/KT403A.c: 56:     reset_buffer_small();
  6395   001C28  EC37  F00F         	call	_reset_buffer_small	;wreg free
  6396   001C2C                     
  6397                           ;src/kt403_control_module/KT403A.c: 58:     BUFFER_small[0] = 0x7E;
  6398   001C2C  0E7E               	movlw	126
  6399   001C2E  6E29               	movwf	_BUFFER_small^0,c
  6400   001C30                     
  6401                           ;src/kt403_control_module/KT403A.c: 59:     BUFFER_small[1] = 0xFF;
  6402   001C30  682A               	setf	(_BUFFER_small+1)^0,c
  6403   001C32                     
  6404                           ;src/kt403_control_module/KT403A.c: 60:     BUFFER_small[2] = 0x06;
  6405   001C32  0E06               	movlw	6
  6406   001C34  6E2B               	movwf	(_BUFFER_small+2)^0,c
  6407   001C36                     
  6408                           ;src/kt403_control_module/KT403A.c: 61:     BUFFER_small[3] = 0x02;
  6409   001C36  0E02               	movlw	2
  6410   001C38  6E2C               	movwf	(_BUFFER_small+3)^0,c
  6411   001C3A                     
  6412                           ;src/kt403_control_module/KT403A.c: 62:     BUFFER_small[4] = 0x01;
  6413   001C3A  0E01               	movlw	1
  6414   001C3C  6E2D               	movwf	(_BUFFER_small+4)^0,c
  6415   001C3E                     
  6416                           ;src/kt403_control_module/KT403A.c: 63:     BUFFER_small[5] = 0x00;
  6417   001C3E  0E00               	movlw	0
  6418   001C40  6E2E               	movwf	(_BUFFER_small+5)^0,c
  6419   001C42                     
  6420                           ;src/kt403_control_module/KT403A.c: 64:     BUFFER_small[6] = 0x00;
  6421   001C42  0E00               	movlw	0
  6422   001C44  6E2F               	movwf	(_BUFFER_small+6)^0,c
  6423   001C46                     
  6424                           ;src/kt403_control_module/KT403A.c: 65:     BUFFER_small[7] = 0xEF;
  6425   001C46  0EEF               	movlw	239
  6426   001C48  6E30               	movwf	(_BUFFER_small+7)^0,c
  6427   001C4A                     
  6428                           ;src/kt403_control_module/KT403A.c: 67:     start_sending(BUFFER_small, 8);
  6429   001C4A  0E29               	movlw	low _BUFFER_small
  6430   001C4C  6E36               	movwf	start_sending@source_buffer^0,c
  6431   001C4E  0E08               	movlw	8
  6432   001C50  6E37               	movwf	start_sending@source_buffer_length^0,c
  6433   001C52  0E00               	movlw	0
  6434   001C54  6E38               	movwf	(start_sending@source_buffer_length+1)^0,c
  6435   001C56  0E00               	movlw	0
  6436   001C58  6E39               	movwf	(start_sending@source_buffer_length+2)^0,c
  6437   001C5A  0E00               	movlw	0
  6438   001C5C  6E3A               	movwf	(start_sending@source_buffer_length+3)^0,c
  6439   001C5E  ECFC  F00C         	call	_start_sending	;wreg free
  6440   001C62  0012               	return		;funcret
  6441   001C64                     __end_of_play_previous_song:
  6442                           	callstack 0
  6443                           
  6444 ;; *************** function _play_next_song *****************
  6445 ;; Defined at:
  6446 ;;		line 38 in file "src/kt403_control_module/KT403A.c"
  6447 ;; Parameters:    Size  Location     Type
  6448 ;;		None
  6449 ;; Auto vars:     Size  Location     Type
  6450 ;;		None
  6451 ;; Return value:  Size  Location     Type
  6452 ;;                  1    wreg      void 
  6453 ;; Registers used:
  6454 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6455 ;; Tracked objects:
  6456 ;;		On entry : 0/0
  6457 ;;		On exit  : 0/0
  6458 ;;		Unchanged: 0/0
  6459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  6460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6463 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6464 ;;Total ram usage:        0 bytes
  6465 ;; Hardware stack levels used: 1
  6466 ;; Hardware stack levels required when called: 4
  6467 ;; This function calls:
  6468 ;;		_reset_buffer_small
  6469 ;;		_start_sending
  6470 ;; This function is called by:
  6471 ;;		_buttons_options_interface
  6472 ;; This function uses a non-reentrant model
  6473 ;;
  6474                           
  6475                           	psect	text76
  6476   001C64                     __ptext76:
  6477                           	callstack 0
  6478   001C64                     _play_next_song:
  6479                           	callstack 25
  6480   001C64                     
  6481                           ;src/kt403_control_module/KT403A.c: 40:     reset_buffer_small();
  6482   001C64  EC37  F00F         	call	_reset_buffer_small	;wreg free
  6483   001C68                     
  6484                           ;src/kt403_control_module/KT403A.c: 42:     BUFFER_small[0] = 0x7E;
  6485   001C68  0E7E               	movlw	126
  6486   001C6A  6E29               	movwf	_BUFFER_small^0,c
  6487   001C6C                     
  6488                           ;src/kt403_control_module/KT403A.c: 43:     BUFFER_small[1] = 0xFF;
  6489   001C6C  682A               	setf	(_BUFFER_small+1)^0,c
  6490   001C6E                     
  6491                           ;src/kt403_control_module/KT403A.c: 44:     BUFFER_small[2] = 0x06;
  6492   001C6E  0E06               	movlw	6
  6493   001C70  6E2B               	movwf	(_BUFFER_small+2)^0,c
  6494   001C72                     
  6495                           ;src/kt403_control_module/KT403A.c: 45:     BUFFER_small[3] = 0x01;
  6496   001C72  0E01               	movlw	1
  6497   001C74  6E2C               	movwf	(_BUFFER_small+3)^0,c
  6498   001C76                     
  6499                           ;src/kt403_control_module/KT403A.c: 46:     BUFFER_small[4] = 0x01;
  6500   001C76  0E01               	movlw	1
  6501   001C78  6E2D               	movwf	(_BUFFER_small+4)^0,c
  6502   001C7A                     
  6503                           ;src/kt403_control_module/KT403A.c: 47:     BUFFER_small[5] = 0x00;
  6504   001C7A  0E00               	movlw	0
  6505   001C7C  6E2E               	movwf	(_BUFFER_small+5)^0,c
  6506   001C7E                     
  6507                           ;src/kt403_control_module/KT403A.c: 48:     BUFFER_small[6] = 0x00;
  6508   001C7E  0E00               	movlw	0
  6509   001C80  6E2F               	movwf	(_BUFFER_small+6)^0,c
  6510   001C82                     
  6511                           ;src/kt403_control_module/KT403A.c: 49:     BUFFER_small[7] = 0xEF;
  6512   001C82  0EEF               	movlw	239
  6513   001C84  6E30               	movwf	(_BUFFER_small+7)^0,c
  6514   001C86                     
  6515                           ;src/kt403_control_module/KT403A.c: 51:     start_sending(BUFFER_small, 8);
  6516   001C86  0E29               	movlw	low _BUFFER_small
  6517   001C88  6E36               	movwf	start_sending@source_buffer^0,c
  6518   001C8A  0E08               	movlw	8
  6519   001C8C  6E37               	movwf	start_sending@source_buffer_length^0,c
  6520   001C8E  0E00               	movlw	0
  6521   001C90  6E38               	movwf	(start_sending@source_buffer_length+1)^0,c
  6522   001C92  0E00               	movlw	0
  6523   001C94  6E39               	movwf	(start_sending@source_buffer_length+2)^0,c
  6524   001C96  0E00               	movlw	0
  6525   001C98  6E3A               	movwf	(start_sending@source_buffer_length+3)^0,c
  6526   001C9A  ECFC  F00C         	call	_start_sending	;wreg free
  6527   001C9E  0012               	return		;funcret
  6528   001CA0                     __end_of_play_next_song:
  6529                           	callstack 0
  6530                           
  6531 ;; *************** function _play *****************
  6532 ;; Defined at:
  6533 ;;		line 142 in file "src/kt403_control_module/KT403A.c"
  6534 ;; Parameters:    Size  Location     Type
  6535 ;;		None
  6536 ;; Auto vars:     Size  Location     Type
  6537 ;;		None
  6538 ;; Return value:  Size  Location     Type
  6539 ;;                  1    wreg      void 
  6540 ;; Registers used:
  6541 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6542 ;; Tracked objects:
  6543 ;;		On entry : 0/0
  6544 ;;		On exit  : 0/0
  6545 ;;		Unchanged: 0/0
  6546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  6547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6550 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6551 ;;Total ram usage:        0 bytes
  6552 ;; Hardware stack levels used: 1
  6553 ;; Hardware stack levels required when called: 4
  6554 ;; This function calls:
  6555 ;;		_reset_buffer_small
  6556 ;;		_start_sending
  6557 ;; This function is called by:
  6558 ;;		_buttons_options_interface
  6559 ;; This function uses a non-reentrant model
  6560 ;;
  6561                           
  6562                           	psect	text77
  6563   001CA0                     __ptext77:
  6564                           	callstack 0
  6565   001CA0                     _play:
  6566                           	callstack 25
  6567   001CA0                     
  6568                           ;src/kt403_control_module/KT403A.c: 144:     reset_buffer_small();
  6569   001CA0  EC37  F00F         	call	_reset_buffer_small	;wreg free
  6570   001CA4                     
  6571                           ;src/kt403_control_module/KT403A.c: 146:     BUFFER_small[0] = 0x7E;
  6572   001CA4  0E7E               	movlw	126
  6573   001CA6  6E29               	movwf	_BUFFER_small^0,c
  6574   001CA8                     
  6575                           ;src/kt403_control_module/KT403A.c: 147:     BUFFER_small[1] = 0xFF;
  6576   001CA8  682A               	setf	(_BUFFER_small+1)^0,c
  6577   001CAA                     
  6578                           ;src/kt403_control_module/KT403A.c: 148:     BUFFER_small[2] = 0x06;
  6579   001CAA  0E06               	movlw	6
  6580   001CAC  6E2B               	movwf	(_BUFFER_small+2)^0,c
  6581   001CAE                     
  6582                           ;src/kt403_control_module/KT403A.c: 149:     BUFFER_small[3] = 0x0D;
  6583   001CAE  0E0D               	movlw	13
  6584   001CB0  6E2C               	movwf	(_BUFFER_small+3)^0,c
  6585   001CB2                     
  6586                           ;src/kt403_control_module/KT403A.c: 150:     BUFFER_small[4] = 0x01;
  6587   001CB2  0E01               	movlw	1
  6588   001CB4  6E2D               	movwf	(_BUFFER_small+4)^0,c
  6589   001CB6                     
  6590                           ;src/kt403_control_module/KT403A.c: 151:     BUFFER_small[5] = 0x00;
  6591   001CB6  0E00               	movlw	0
  6592   001CB8  6E2E               	movwf	(_BUFFER_small+5)^0,c
  6593   001CBA                     
  6594                           ;src/kt403_control_module/KT403A.c: 152:     BUFFER_small[6] = 0x00;
  6595   001CBA  0E00               	movlw	0
  6596   001CBC  6E2F               	movwf	(_BUFFER_small+6)^0,c
  6597   001CBE                     
  6598                           ;src/kt403_control_module/KT403A.c: 153:     BUFFER_small[7] = 0xEF;
  6599   001CBE  0EEF               	movlw	239
  6600   001CC0  6E30               	movwf	(_BUFFER_small+7)^0,c
  6601   001CC2                     
  6602                           ;src/kt403_control_module/KT403A.c: 155:     start_sending(BUFFER_small, 8);
  6603   001CC2  0E29               	movlw	low _BUFFER_small
  6604   001CC4  6E36               	movwf	start_sending@source_buffer^0,c
  6605   001CC6  0E08               	movlw	8
  6606   001CC8  6E37               	movwf	start_sending@source_buffer_length^0,c
  6607   001CCA  0E00               	movlw	0
  6608   001CCC  6E38               	movwf	(start_sending@source_buffer_length+1)^0,c
  6609   001CCE  0E00               	movlw	0
  6610   001CD0  6E39               	movwf	(start_sending@source_buffer_length+2)^0,c
  6611   001CD2  0E00               	movlw	0
  6612   001CD4  6E3A               	movwf	(start_sending@source_buffer_length+3)^0,c
  6613   001CD6  ECFC  F00C         	call	_start_sending	;wreg free
  6614   001CDA  0012               	return		;funcret
  6615   001CDC                     __end_of_play:
  6616                           	callstack 0
  6617                           
  6618 ;; *************** function _pause *****************
  6619 ;; Defined at:
  6620 ;;		line 158 in file "src/kt403_control_module/KT403A.c"
  6621 ;; Parameters:    Size  Location     Type
  6622 ;;		None
  6623 ;; Auto vars:     Size  Location     Type
  6624 ;;		None
  6625 ;; Return value:  Size  Location     Type
  6626 ;;                  1    wreg      void 
  6627 ;; Registers used:
  6628 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6629 ;; Tracked objects:
  6630 ;;		On entry : 0/0
  6631 ;;		On exit  : 0/0
  6632 ;;		Unchanged: 0/0
  6633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  6634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6637 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6638 ;;Total ram usage:        0 bytes
  6639 ;; Hardware stack levels used: 1
  6640 ;; Hardware stack levels required when called: 4
  6641 ;; This function calls:
  6642 ;;		_reset_buffer_small
  6643 ;;		_start_sending
  6644 ;; This function is called by:
  6645 ;;		_buttons_options_interface
  6646 ;; This function uses a non-reentrant model
  6647 ;;
  6648                           
  6649                           	psect	text78
  6650   001CDC                     __ptext78:
  6651                           	callstack 0
  6652   001CDC                     _pause:
  6653                           	callstack 25
  6654   001CDC                     
  6655                           ;src/kt403_control_module/KT403A.c: 160:     reset_buffer_small();
  6656   001CDC  EC37  F00F         	call	_reset_buffer_small	;wreg free
  6657   001CE0                     
  6658                           ;src/kt403_control_module/KT403A.c: 162:     BUFFER_small[0] = 0x7E;
  6659   001CE0  0E7E               	movlw	126
  6660   001CE2  6E29               	movwf	_BUFFER_small^0,c
  6661   001CE4                     
  6662                           ;src/kt403_control_module/KT403A.c: 163:     BUFFER_small[1] = 0xFF;
  6663   001CE4  682A               	setf	(_BUFFER_small+1)^0,c
  6664   001CE6                     
  6665                           ;src/kt403_control_module/KT403A.c: 164:     BUFFER_small[2] = 0x06;
  6666   001CE6  0E06               	movlw	6
  6667   001CE8  6E2B               	movwf	(_BUFFER_small+2)^0,c
  6668   001CEA                     
  6669                           ;src/kt403_control_module/KT403A.c: 165:     BUFFER_small[3] = 0x0E;
  6670   001CEA  0E0E               	movlw	14
  6671   001CEC  6E2C               	movwf	(_BUFFER_small+3)^0,c
  6672   001CEE                     
  6673                           ;src/kt403_control_module/KT403A.c: 166:     BUFFER_small[4] = 0x01;
  6674   001CEE  0E01               	movlw	1
  6675   001CF0  6E2D               	movwf	(_BUFFER_small+4)^0,c
  6676   001CF2                     
  6677                           ;src/kt403_control_module/KT403A.c: 167:     BUFFER_small[5] = 0x00;
  6678   001CF2  0E00               	movlw	0
  6679   001CF4  6E2E               	movwf	(_BUFFER_small+5)^0,c
  6680   001CF6                     
  6681                           ;src/kt403_control_module/KT403A.c: 168:     BUFFER_small[6] = 0x00;
  6682   001CF6  0E00               	movlw	0
  6683   001CF8  6E2F               	movwf	(_BUFFER_small+6)^0,c
  6684   001CFA                     
  6685                           ;src/kt403_control_module/KT403A.c: 169:     BUFFER_small[7] = 0xEF;
  6686   001CFA  0EEF               	movlw	239
  6687   001CFC  6E30               	movwf	(_BUFFER_small+7)^0,c
  6688   001CFE                     
  6689                           ;src/kt403_control_module/KT403A.c: 171:     start_sending(BUFFER_small, 8);
  6690   001CFE  0E29               	movlw	low _BUFFER_small
  6691   001D00  6E36               	movwf	start_sending@source_buffer^0,c
  6692   001D02  0E08               	movlw	8
  6693   001D04  6E37               	movwf	start_sending@source_buffer_length^0,c
  6694   001D06  0E00               	movlw	0
  6695   001D08  6E38               	movwf	(start_sending@source_buffer_length+1)^0,c
  6696   001D0A  0E00               	movlw	0
  6697   001D0C  6E39               	movwf	(start_sending@source_buffer_length+2)^0,c
  6698   001D0E  0E00               	movlw	0
  6699   001D10  6E3A               	movwf	(start_sending@source_buffer_length+3)^0,c
  6700   001D12  ECFC  F00C         	call	_start_sending	;wreg free
  6701   001D16  0012               	return		;funcret
  6702   001D18                     __end_of_pause:
  6703                           	callstack 0
  6704                           
  6705 ;; *************** function _loop_all_songs_from_folder *****************
  6706 ;; Defined at:
  6707 ;;		line 190 in file "src/kt403_control_module/KT403A.c"
  6708 ;; Parameters:    Size  Location     Type
  6709 ;;  loop_option     1    wreg     unsigned char 
  6710 ;; Auto vars:     Size  Location     Type
  6711 ;;  loop_option     1   10[COMRAM] unsigned char 
  6712 ;; Return value:  Size  Location     Type
  6713 ;;                  1    wreg      void 
  6714 ;; Registers used:
  6715 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6716 ;; Tracked objects:
  6717 ;;		On entry : 0/0
  6718 ;;		On exit  : 0/0
  6719 ;;		Unchanged: 0/0
  6720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  6721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6722 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6724 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6725 ;;Total ram usage:        1 bytes
  6726 ;; Hardware stack levels used: 1
  6727 ;; Hardware stack levels required when called: 4
  6728 ;; This function calls:
  6729 ;;		_reset_buffer_small
  6730 ;;		_start_sending
  6731 ;; This function is called by:
  6732 ;;		_buttons_options_interface
  6733 ;; This function uses a non-reentrant model
  6734 ;;
  6735                           
  6736                           	psect	text79
  6737   001AFA                     __ptext79:
  6738                           	callstack 0
  6739   001AFA                     _loop_all_songs_from_folder:
  6740                           	callstack 25
  6741                           
  6742                           ;incstack = 0
  6743                           ;loop_all_songs_from_folder@loop_option stored from wreg
  6744   001AFA  6E3B               	movwf	loop_all_songs_from_folder@loop_option^0,c
  6745   001AFC                     
  6746                           ;src/kt403_control_module/KT403A.c: 190: void loop_all_songs_from_folder (unsigned char 
      +                          loop_option);src/kt403_control_module/KT403A.c: 191: {;src/kt403_control_module/KT403A.c
      +                          : 192:     reset_buffer_small();
  6747   001AFC  EC37  F00F         	call	_reset_buffer_small	;wreg free
  6748   001B00                     
  6749                           ;src/kt403_control_module/KT403A.c: 194:     BUFFER_small[0] = 0x7E;
  6750   001B00  0E7E               	movlw	126
  6751   001B02  6E29               	movwf	_BUFFER_small^0,c
  6752   001B04                     
  6753                           ;src/kt403_control_module/KT403A.c: 195:     BUFFER_small[1] = 0xFF;
  6754   001B04  682A               	setf	(_BUFFER_small+1)^0,c
  6755   001B06                     
  6756                           ;src/kt403_control_module/KT403A.c: 196:     BUFFER_small[2] = 0x06;
  6757   001B06  0E06               	movlw	6
  6758   001B08  6E2B               	movwf	(_BUFFER_small+2)^0,c
  6759   001B0A                     
  6760                           ;src/kt403_control_module/KT403A.c: 197:     BUFFER_small[3] = 0x11;
  6761   001B0A  0E11               	movlw	17
  6762   001B0C  6E2C               	movwf	(_BUFFER_small+3)^0,c
  6763   001B0E                     
  6764                           ;src/kt403_control_module/KT403A.c: 198:     BUFFER_small[4] = 0x01;
  6765   001B0E  0E01               	movlw	1
  6766   001B10  6E2D               	movwf	(_BUFFER_small+4)^0,c
  6767   001B12                     
  6768                           ;src/kt403_control_module/KT403A.c: 199:     BUFFER_small[5] = 0x00;
  6769   001B12  0E00               	movlw	0
  6770   001B14  6E2E               	movwf	(_BUFFER_small+5)^0,c
  6771   001B16                     
  6772                           ;src/kt403_control_module/KT403A.c: 200:     BUFFER_small[6] = loop_option;
  6773   001B16  C03B  F02F         	movff	loop_all_songs_from_folder@loop_option,_BUFFER_small+6
  6774   001B1A                     
  6775                           ;src/kt403_control_module/KT403A.c: 201:     BUFFER_small[7] = 0xEF;
  6776   001B1A  0EEF               	movlw	239
  6777   001B1C  6E30               	movwf	(_BUFFER_small+7)^0,c
  6778   001B1E                     
  6779                           ;src/kt403_control_module/KT403A.c: 203:     start_sending(BUFFER_small, 8);
  6780   001B1E  0E29               	movlw	low _BUFFER_small
  6781   001B20  6E36               	movwf	start_sending@source_buffer^0,c
  6782   001B22  0E08               	movlw	8
  6783   001B24  6E37               	movwf	start_sending@source_buffer_length^0,c
  6784   001B26  0E00               	movlw	0
  6785   001B28  6E38               	movwf	(start_sending@source_buffer_length+1)^0,c
  6786   001B2A  0E00               	movlw	0
  6787   001B2C  6E39               	movwf	(start_sending@source_buffer_length+2)^0,c
  6788   001B2E  0E00               	movlw	0
  6789   001B30  6E3A               	movwf	(start_sending@source_buffer_length+3)^0,c
  6790   001B32  ECFC  F00C         	call	_start_sending	;wreg free
  6791   001B36  0012               	return		;funcret
  6792   001B38                     __end_of_loop_all_songs_from_folder:
  6793                           	callstack 0
  6794                           
  6795 ;; *************** function _start_sending *****************
  6796 ;; Defined at:
  6797 ;;		line 99 in file "src/uart_control_module/UART_setup.c"
  6798 ;; Parameters:    Size  Location     Type
  6799 ;;  source_buffe    1    5[COMRAM] PTR unsigned char 
  6800 ;;		 -> BUFFER_big(10), BUFFER_small(8), 
  6801 ;;  source_buffe    4    6[COMRAM] unsigned long 
  6802 ;; Auto vars:     Size  Location     Type
  6803 ;;		None
  6804 ;; Return value:  Size  Location     Type
  6805 ;;                  1    wreg      void 
  6806 ;; Registers used:
  6807 ;;		wreg, status,2, status,0, cstack
  6808 ;; Tracked objects:
  6809 ;;		On entry : 0/0
  6810 ;;		On exit  : 0/0
  6811 ;;		Unchanged: 0/0
  6812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  6813 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6816 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6817 ;;Total ram usage:        5 bytes
  6818 ;; Hardware stack levels used: 1
  6819 ;; Hardware stack levels required when called: 3
  6820 ;; This function calls:
  6821 ;;		_TX1_enable
  6822 ;;		_TX_1_interrupt_enable
  6823 ;; This function is called by:
  6824 ;;		_play_next_song
  6825 ;;		_play_previous_song
  6826 ;;		_volume_up
  6827 ;;		_volume_down
  6828 ;;		_standby
  6829 ;;		_reset_function
  6830 ;;		_play
  6831 ;;		_pause
  6832 ;;		_play_specific_from_folder
  6833 ;;		_loop_all_songs_from_folder
  6834 ;;		_toggle_repeat_current_song
  6835 ;; This function uses a non-reentrant model
  6836 ;;
  6837                           
  6838                           	psect	text80
  6839   0019F8                     __ptext80:
  6840                           	callstack 0
  6841   0019F8                     _start_sending:
  6842                           	callstack 25
  6843   0019F8                     
  6844                           ;src/uart_control_module/UART_setup.c: 99: void start_sending (unsigned char* source_buf
      +                          fer, unsigned long source_buffer_length);src/uart_control_module/UART_setup.c: 100: {;sr
      +                          c/uart_control_module/UART_setup.c: 101:     if (sending_in_progress == 0)
  6845   0019F8  5018               	movf	_sending_in_progress^0,w,c
  6846   0019FA  A4D8               	btfss	status,2,c
  6847   0019FC  EF02  F00D         	goto	u461
  6848   001A00  EF04  F00D         	goto	u460
  6849   001A04                     u461:
  6850   001A04  EF1D  F00D         	goto	l682
  6851   001A08                     u460:
  6852   001A08                     
  6853                           ;src/uart_control_module/UART_setup.c: 102:     {;src/uart_control_module/UART_setup.c: 
      +                          103:         local_sending_buffer_index = 0;
  6854   001A08  0E00               	movlw	0
  6855   001A0A  6E01               	movwf	_local_sending_buffer_index^0,c
  6856   001A0C  0E00               	movlw	0
  6857   001A0E  6E02               	movwf	(_local_sending_buffer_index+1)^0,c
  6858   001A10  0E00               	movlw	0
  6859   001A12  6E03               	movwf	(_local_sending_buffer_index+2)^0,c
  6860   001A14  0E00               	movlw	0
  6861   001A16  6E04               	movwf	(_local_sending_buffer_index+3)^0,c
  6862   001A18                     
  6863                           ;src/uart_control_module/UART_setup.c: 104:         local_sending_buffer = source_buffer
      +                          ;
  6864   001A18  C036  F011         	movff	start_sending@source_buffer,_local_sending_buffer
  6865   001A1C  6A12               	clrf	(_local_sending_buffer+1)^0,c
  6866   001A1E                     
  6867                           ;src/uart_control_module/UART_setup.c: 105:         local_sending_buffer_length = source
      +                          _buffer_length;
  6868   001A1E  C037  F005         	movff	start_sending@source_buffer_length,_local_sending_buffer_length
  6869   001A22  C038  F006         	movff	start_sending@source_buffer_length+1,_local_sending_buffer_length+1
  6870   001A26  C039  F007         	movff	start_sending@source_buffer_length+2,_local_sending_buffer_length+2
  6871   001A2A  C03A  F008         	movff	start_sending@source_buffer_length+3,_local_sending_buffer_length+3
  6872   001A2E                     
  6873                           ;src/uart_control_module/UART_setup.c: 106:         TX1_enable();
  6874   001A2E  EC09  F011         	call	_TX1_enable	;wreg free
  6875   001A32                     
  6876                           ;src/uart_control_module/UART_setup.c: 107:         sending_in_progress = 1;
  6877   001A32  0E01               	movlw	1
  6878   001A34  6E18               	movwf	_sending_in_progress^0,c
  6879   001A36                     
  6880                           ;src/uart_control_module/UART_setup.c: 108:         TX_1_interrupt_enable();
  6881   001A36  ECAA  F010         	call	_TX_1_interrupt_enable	;wreg free
  6882   001A3A                     l682:
  6883   001A3A  0012               	return		;funcret
  6884   001A3C                     __end_of_start_sending:
  6885                           	callstack 0
  6886                           
  6887 ;; *************** function _TX_1_interrupt_enable *****************
  6888 ;; Defined at:
  6889 ;;		line 19 in file "src/interrupt_control_module/interrupt_setup.c"
  6890 ;; Parameters:    Size  Location     Type
  6891 ;;		None
  6892 ;; Auto vars:     Size  Location     Type
  6893 ;;		None
  6894 ;; Return value:  Size  Location     Type
  6895 ;;                  1    wreg      void 
  6896 ;; Registers used:
  6897 ;;		wreg, status,2, status,0
  6898 ;; Tracked objects:
  6899 ;;		On entry : 0/0
  6900 ;;		On exit  : 0/0
  6901 ;;		Unchanged: 0/0
  6902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  6903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6906 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6907 ;;Total ram usage:        0 bytes
  6908 ;; Hardware stack levels used: 1
  6909 ;; Hardware stack levels required when called: 2
  6910 ;; This function calls:
  6911 ;;		Nothing
  6912 ;; This function is called by:
  6913 ;;		_start_sending
  6914 ;; This function uses a non-reentrant model
  6915 ;;
  6916                           
  6917                           	psect	text81
  6918   002154                     __ptext81:
  6919                           	callstack 0
  6920   002154                     _TX_1_interrupt_enable:
  6921                           	callstack 25
  6922   002154                     
  6923                           ;src/interrupt_control_module/interrupt_setup.c: 21:     PIE3 = PIE3 | 0b00010000;
  6924   002154  010E               	movlb	14	; () banked
  6925   002156  51C0               	movf	192,w,b	;volatile
  6926   002158  0910               	iorlw	16
  6927   00215A  6FC0               	movwf	192,b	;volatile
  6928   00215C                     
  6929                           ; BSR set to: 14
  6930   00215C  0012               	return		;funcret
  6931   00215E                     __end_of_TX_1_interrupt_enable:
  6932                           	callstack 0
  6933                           
  6934 ;; *************** function _TX1_enable *****************
  6935 ;; Defined at:
  6936 ;;		line 76 in file "src/uart_control_module/UART_setup.c"
  6937 ;; Parameters:    Size  Location     Type
  6938 ;;		None
  6939 ;; Auto vars:     Size  Location     Type
  6940 ;;		None
  6941 ;; Return value:  Size  Location     Type
  6942 ;;                  1    wreg      void 
  6943 ;; Registers used:
  6944 ;;		wreg, status,2, status,0
  6945 ;; Tracked objects:
  6946 ;;		On entry : 0/0
  6947 ;;		On exit  : 0/0
  6948 ;;		Unchanged: 0/0
  6949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  6950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6953 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6954 ;;Total ram usage:        0 bytes
  6955 ;; Hardware stack levels used: 1
  6956 ;; Hardware stack levels required when called: 2
  6957 ;; This function calls:
  6958 ;;		Nothing
  6959 ;; This function is called by:
  6960 ;;		_start_sending
  6961 ;; This function uses a non-reentrant model
  6962 ;;
  6963                           
  6964                           	psect	text82
  6965   002212                     __ptext82:
  6966                           	callstack 0
  6967   002212                     _TX1_enable:
  6968                           	callstack 25
  6969   002212                     
  6970                           ;src/uart_control_module/UART_setup.c: 78:     TX1STA = TX1STA | 0b00100000;
  6971   002212  509D               	movf	157,w,c	;volatile
  6972   002214  0920               	iorlw	32
  6973   002216  6E9D               	movwf	157,c	;volatile
  6974   002218  0012               	return		;funcret
  6975   00221A                     __end_of_TX1_enable:
  6976                           	callstack 0
  6977                           
  6978 ;; *************** function _reset_buffer_small *****************
  6979 ;; Defined at:
  6980 ;;		line 20 in file "src/kt403_control_module/KT403A.c"
  6981 ;; Parameters:    Size  Location     Type
  6982 ;;		None
  6983 ;; Auto vars:     Size  Location     Type
  6984 ;;  index           1    5[COMRAM] unsigned char 
  6985 ;; Return value:  Size  Location     Type
  6986 ;;                  1    wreg      void 
  6987 ;; Registers used:
  6988 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6989 ;; Tracked objects:
  6990 ;;		On entry : 0/0
  6991 ;;		On exit  : 0/0
  6992 ;;		Unchanged: 0/0
  6993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  6994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6995 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6997 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6998 ;;Total ram usage:        1 bytes
  6999 ;; Hardware stack levels used: 1
  7000 ;; Hardware stack levels required when called: 2
  7001 ;; This function calls:
  7002 ;;		Nothing
  7003 ;; This function is called by:
  7004 ;;		_play_next_song
  7005 ;;		_play_previous_song
  7006 ;;		_volume_up
  7007 ;;		_volume_down
  7008 ;;		_standby
  7009 ;;		_reset_function
  7010 ;;		_play
  7011 ;;		_pause
  7012 ;;		_play_specific_from_folder
  7013 ;;		_loop_all_songs_from_folder
  7014 ;; This function uses a non-reentrant model
  7015 ;;
  7016                           
  7017                           	psect	text83
  7018   001E6E                     __ptext83:
  7019                           	callstack 0
  7020   001E6E                     _reset_buffer_small:
  7021                           	callstack 26
  7022   001E6E                     
  7023                           ;src/kt403_control_module/KT403A.c: 22:     unsigned char index;;src/kt403_control_modul
      +                          e/KT403A.c: 23:     for (index = 0; index < 8; index++)
  7024   001E6E  0E00               	movlw	0
  7025   001E70  6E36               	movwf	reset_buffer_small@index^0,c
  7026   001E72                     l1881:
  7027                           
  7028                           ;src/kt403_control_module/KT403A.c: 24:     {;src/kt403_control_module/KT403A.c: 25:    
      +                               BUFFER_small[index] = 0;
  7029   001E72  5036               	movf	reset_buffer_small@index^0,w,c
  7030   001E74  0F29               	addlw	low _BUFFER_small
  7031   001E76  6ED9               	movwf	fsr2l,c
  7032   001E78  6ADA               	clrf	fsr2h,c
  7033   001E7A  6ADF               	clrf	indf2,c
  7034   001E7C                     
  7035                           ;src/kt403_control_module/KT403A.c: 26:     }
  7036   001E7C  2A36               	incf	reset_buffer_small@index^0,f,c
  7037   001E7E  0E07               	movlw	7
  7038   001E80  6436               	cpfsgt	reset_buffer_small@index^0,c
  7039   001E82  EF45  F00F         	goto	u131
  7040   001E86  EF47  F00F         	goto	u130
  7041   001E8A                     u131:
  7042   001E8A  EF39  F00F         	goto	l1881
  7043   001E8E                     u130:
  7044   001E8E  0012               	return		;funcret
  7045   001E90                     __end_of_reset_buffer_small:
  7046                           	callstack 0
  7047                           
  7048 ;; *************** function _busy_wait *****************
  7049 ;; Defined at:
  7050 ;;		line 3 in file "src/utils.c"
  7051 ;; Parameters:    Size  Location     Type
  7052 ;;  iterations      4    5[COMRAM] unsigned long 
  7053 ;; Auto vars:     Size  Location     Type
  7054 ;;  iterator        4    9[COMRAM] unsigned long 
  7055 ;; Return value:  Size  Location     Type
  7056 ;;                  1    wreg      void 
  7057 ;; Registers used:
  7058 ;;		wreg, status,2, status,0
  7059 ;; Tracked objects:
  7060 ;;		On entry : 0/0
  7061 ;;		On exit  : 0/0
  7062 ;;		Unchanged: 0/0
  7063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  7064 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7065 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7067 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7068 ;;Total ram usage:        8 bytes
  7069 ;; Hardware stack levels used: 1
  7070 ;; Hardware stack levels required when called: 2
  7071 ;; This function calls:
  7072 ;;		Nothing
  7073 ;; This function is called by:
  7074 ;;		_buttons_procedure_interface
  7075 ;;		_buttons_options_interface
  7076 ;;		_main
  7077 ;; This function uses a non-reentrant model
  7078 ;;
  7079                           
  7080                           	psect	text84
  7081   001A7C                     __ptext84:
  7082                           	callstack 0
  7083   001A7C                     _busy_wait:
  7084                           	callstack 27
  7085   001A7C                     
  7086                           ;src/utils.c: 3: void busy_wait (unsigned long iterations);src/utils.c: 4: {;src/utils.c
      +                          : 5:     unsigned long iterator;;src/utils.c: 7:     for (iterator = 0; iterator < itera
      +                          tions; iterator++)
  7087   001A7C  0E00               	movlw	0
  7088   001A7E  6E3A               	movwf	busy_wait@iterator^0,c
  7089   001A80  0E00               	movlw	0
  7090   001A82  6E3B               	movwf	(busy_wait@iterator+1)^0,c
  7091   001A84  0E00               	movlw	0
  7092   001A86  6E3C               	movwf	(busy_wait@iterator+2)^0,c
  7093   001A88  0E00               	movlw	0
  7094   001A8A  6E3D               	movwf	(busy_wait@iterator+3)^0,c
  7095   001A8C  EF4E  F00D         	goto	l685
  7096   001A90                     l2757:
  7097                           
  7098                           ;src/utils.c: 8:     {;src/utils.c: 10:     }
  7099   001A90  0E01               	movlw	1
  7100   001A92  263A               	addwf	busy_wait@iterator^0,f,c
  7101   001A94  0E00               	movlw	0
  7102   001A96  223B               	addwfc	(busy_wait@iterator+1)^0,f,c
  7103   001A98  223C               	addwfc	(busy_wait@iterator+2)^0,f,c
  7104   001A9A  223D               	addwfc	(busy_wait@iterator+3)^0,f,c
  7105   001A9C                     l685:
  7106   001A9C  5036               	movf	busy_wait@iterations^0,w,c
  7107   001A9E  5C3A               	subwf	busy_wait@iterator^0,w,c
  7108   001AA0  5037               	movf	(busy_wait@iterations+1)^0,w,c
  7109   001AA2  583B               	subwfb	(busy_wait@iterator+1)^0,w,c
  7110   001AA4  5038               	movf	(busy_wait@iterations+2)^0,w,c
  7111   001AA6  583C               	subwfb	(busy_wait@iterator+2)^0,w,c
  7112   001AA8  5039               	movf	(busy_wait@iterations+3)^0,w,c
  7113   001AAA  583D               	subwfb	(busy_wait@iterator+3)^0,w,c
  7114   001AAC  A0D8               	btfss	status,0,c
  7115   001AAE  EF5B  F00D         	goto	u511
  7116   001AB2  EF5D  F00D         	goto	u510
  7117   001AB6                     u511:
  7118   001AB6  EF48  F00D         	goto	l2757
  7119   001ABA                     u510:
  7120   001ABA  0012               	return		;funcret
  7121   001ABC                     __end_of_busy_wait:
  7122                           	callstack 0
  7123                           
  7124 ;; *************** function _boud_rate_setup *****************
  7125 ;; Defined at:
  7126 ;;		line 86 in file "src/uart_control_module/UART_setup.c"
  7127 ;; Parameters:    Size  Location     Type
  7128 ;;		None
  7129 ;; Auto vars:     Size  Location     Type
  7130 ;;		None
  7131 ;; Return value:  Size  Location     Type
  7132 ;;                  1    wreg      void 
  7133 ;; Registers used:
  7134 ;;		wreg, status,2, status,0, cstack
  7135 ;; Tracked objects:
  7136 ;;		On entry : 0/0
  7137 ;;		On exit  : 0/0
  7138 ;;		Unchanged: 0/0
  7139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  7140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7143 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7144 ;;Total ram usage:        0 bytes
  7145 ;; Hardware stack levels used: 1
  7146 ;; Hardware stack levels required when called: 3
  7147 ;; This function calls:
  7148 ;;		_baud_9600
  7149 ;; This function is called by:
  7150 ;;		_main
  7151 ;; This function uses a non-reentrant model
  7152 ;;
  7153                           
  7154                           	psect	text85
  7155   00213E                     __ptext85:
  7156                           	callstack 0
  7157   00213E                     _boud_rate_setup:
  7158                           	callstack 27
  7159   00213E                     
  7160                           ;src/uart_control_module/UART_setup.c: 88:     BAUD1CON = BAUD1CON | 0b00001000;
  7161   00213E  509E               	movf	158,w,c	;volatile
  7162   002140  0908               	iorlw	8
  7163   002142  6E9E               	movwf	158,c	;volatile
  7164   002144                     
  7165                           ;src/uart_control_module/UART_setup.c: 89:     baud_9600();
  7166   002144  ECAF  F010         	call	_baud_9600	;wreg free
  7167   002148  0012               	return		;funcret
  7168   00214A                     __end_of_boud_rate_setup:
  7169                           	callstack 0
  7170                           
  7171 ;; *************** function _baud_9600 *****************
  7172 ;; Defined at:
  7173 ;;		line 92 in file "src/uart_control_module/UART_setup.c"
  7174 ;; Parameters:    Size  Location     Type
  7175 ;;		None
  7176 ;; Auto vars:     Size  Location     Type
  7177 ;;		None
  7178 ;; Return value:  Size  Location     Type
  7179 ;;                  1    wreg      void 
  7180 ;; Registers used:
  7181 ;;		wreg, status,2
  7182 ;; Tracked objects:
  7183 ;;		On entry : 0/0
  7184 ;;		On exit  : 0/0
  7185 ;;		Unchanged: 0/0
  7186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  7187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7191 ;;Total ram usage:        0 bytes
  7192 ;; Hardware stack levels used: 1
  7193 ;; Hardware stack levels required when called: 2
  7194 ;; This function calls:
  7195 ;;		Nothing
  7196 ;; This function is called by:
  7197 ;;		_boud_rate_setup
  7198 ;; This function uses a non-reentrant model
  7199 ;;
  7200                           
  7201                           	psect	text86
  7202   00215E                     __ptext86:
  7203                           	callstack 0
  7204   00215E                     _baud_9600:
  7205                           	callstack 27
  7206   00215E                     
  7207                           ;src/uart_control_module/UART_setup.c: 96:     SP1BRG = 0b0000011010000001;;
  7208   00215E  0E06               	movlw	6
  7209   002160  6E9B               	movwf	155,c	;volatile
  7210   002162  0E81               	movlw	129
  7211   002164  6E9A               	movwf	154,c	;volatile
  7212   002166  0012               	return		;funcret
  7213   002168                     __end_of_baud_9600:
  7214                           	callstack 0
  7215                           
  7216 ;; *************** function _TX_setup *****************
  7217 ;; Defined at:
  7218 ;;		line 52 in file "src/uart_control_module/UART_setup.c"
  7219 ;; Parameters:    Size  Location     Type
  7220 ;;		None
  7221 ;; Auto vars:     Size  Location     Type
  7222 ;;		None
  7223 ;; Return value:  Size  Location     Type
  7224 ;;                  1    wreg      void 
  7225 ;; Registers used:
  7226 ;;		wreg, status,2, status,0
  7227 ;; Tracked objects:
  7228 ;;		On entry : 0/0
  7229 ;;		On exit  : 0/0
  7230 ;;		Unchanged: 0/0
  7231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  7232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7235 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7236 ;;Total ram usage:        0 bytes
  7237 ;; Hardware stack levels used: 1
  7238 ;; Hardware stack levels required when called: 2
  7239 ;; This function calls:
  7240 ;;		Nothing
  7241 ;; This function is called by:
  7242 ;;		_main
  7243 ;; This function uses a non-reentrant model
  7244 ;;
  7245                           
  7246                           	psect	text87
  7247   001DB4                     __ptext87:
  7248                           	callstack 0
  7249   001DB4                     _TX_setup:
  7250                           	callstack 28
  7251   001DB4                     
  7252                           ;src/uart_control_module/UART_setup.c: 55:     RC6PPS = 0b00001001;
  7253   001DB4  0E09               	movlw	9
  7254   001DB6  010E               	movlb	14	; () banked
  7255   001DB8  6FF8               	movwf	248,b	;volatile
  7256   001DBA                     
  7257                           ; BSR set to: 14
  7258                           ;src/uart_control_module/UART_setup.c: 58:     ANSELC = ANSELC & 0b10111111;
  7259   001DBA  010F               	movlb	15	; () banked
  7260   001DBC  511C               	movf	28,w,b	;volatile
  7261   001DBE  0BBF               	andlw	191
  7262   001DC0  6F1C               	movwf	28,b	;volatile
  7263   001DC2                     
  7264                           ; BSR set to: 15
  7265                           ;src/uart_control_module/UART_setup.c: 61:     TRISC = TRISC & 0b10111111;
  7266   001DC2  5089               	movf	137,w,c	;volatile
  7267   001DC4  0BBF               	andlw	191
  7268   001DC6  6E89               	movwf	137,c	;volatile
  7269   001DC8                     
  7270                           ; BSR set to: 15
  7271                           ;src/uart_control_module/UART_setup.c: 64:     TX1STA = TX1STA & 0b11101111;
  7272   001DC8  509D               	movf	157,w,c	;volatile
  7273   001DCA  0BEF               	andlw	239
  7274   001DCC  6E9D               	movwf	157,c	;volatile
  7275   001DCE                     
  7276                           ; BSR set to: 15
  7277                           ;src/uart_control_module/UART_setup.c: 67:     TX1STA = TX1STA & 0b10111111;
  7278   001DCE  509D               	movf	157,w,c	;volatile
  7279   001DD0  0BBF               	andlw	191
  7280   001DD2  6E9D               	movwf	157,c	;volatile
  7281   001DD4                     
  7282                           ; BSR set to: 15
  7283                           ;src/uart_control_module/UART_setup.c: 70:     TX1STA = TX1STA | 0b00000100;
  7284   001DD4  509D               	movf	157,w,c	;volatile
  7285   001DD6  0904               	iorlw	4
  7286   001DD8  6E9D               	movwf	157,c	;volatile
  7287   001DDA                     
  7288                           ; BSR set to: 15
  7289   001DDA  0012               	return		;funcret
  7290   001DDC                     __end_of_TX_setup:
  7291                           	callstack 0
  7292                           
  7293 ;; *************** function _RX_setup *****************
  7294 ;; Defined at:
  7295 ;;		line 23 in file "src/uart_control_module/UART_setup.c"
  7296 ;; Parameters:    Size  Location     Type
  7297 ;;		None
  7298 ;; Auto vars:     Size  Location     Type
  7299 ;;		None
  7300 ;; Return value:  Size  Location     Type
  7301 ;;                  1    wreg      void 
  7302 ;; Registers used:
  7303 ;;		wreg, status,2, status,0, cstack
  7304 ;; Tracked objects:
  7305 ;;		On entry : 0/0
  7306 ;;		On exit  : 0/0
  7307 ;;		Unchanged: 0/0
  7308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  7309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7312 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7313 ;;Total ram usage:        0 bytes
  7314 ;; Hardware stack levels used: 1
  7315 ;; Hardware stack levels required when called: 3
  7316 ;; This function calls:
  7317 ;;		_RX1_enable
  7318 ;; This function is called by:
  7319 ;;		_main
  7320 ;; This function uses a non-reentrant model
  7321 ;;
  7322                           
  7323                           	psect	text88
  7324   001E90                     __ptext88:
  7325                           	callstack 0
  7326   001E90                     _RX_setup:
  7327                           	callstack 27
  7328   001E90                     
  7329                           ;src/uart_control_module/UART_setup.c: 26:     RX1PPS = 0b00010111;
  7330   001E90  0E17               	movlw	23
  7331   001E92  010E               	movlb	14	; () banked
  7332   001E94  6FB0               	movwf	176,b	;volatile
  7333   001E96                     
  7334                           ; BSR set to: 14
  7335                           ;src/uart_control_module/UART_setup.c: 29:     ANSELC = ANSELC & 0b01111111;
  7336   001E96  010F               	movlb	15	; () banked
  7337   001E98  511C               	movf	28,w,b	;volatile
  7338   001E9A  0B7F               	andlw	127
  7339   001E9C  6F1C               	movwf	28,b	;volatile
  7340   001E9E                     
  7341                           ; BSR set to: 15
  7342                           ;src/uart_control_module/UART_setup.c: 32:     RC1STA = RC1STA | 0b10000000;
  7343   001E9E  509C               	movf	156,w,c	;volatile
  7344   001EA0  0980               	iorlw	128
  7345   001EA2  6E9C               	movwf	156,c	;volatile
  7346   001EA4                     
  7347                           ; BSR set to: 15
  7348                           ;src/uart_control_module/UART_setup.c: 35:     RC1STA = RC1STA & 0b10111111;
  7349   001EA4  509C               	movf	156,w,c	;volatile
  7350   001EA6  0BBF               	andlw	191
  7351   001EA8  6E9C               	movwf	156,c	;volatile
  7352   001EAA                     
  7353                           ; BSR set to: 15
  7354                           ;src/uart_control_module/UART_setup.c: 38:     RX1_enable();
  7355   001EAA  EC0D  F011         	call	_RX1_enable	;wreg free
  7356   001EAE  0012               	return		;funcret
  7357   001EB0                     __end_of_RX_setup:
  7358                           	callstack 0
  7359                           
  7360 ;; *************** function _RX1_enable *****************
  7361 ;; Defined at:
  7362 ;;		line 41 in file "src/uart_control_module/UART_setup.c"
  7363 ;; Parameters:    Size  Location     Type
  7364 ;;		None
  7365 ;; Auto vars:     Size  Location     Type
  7366 ;;		None
  7367 ;; Return value:  Size  Location     Type
  7368 ;;                  1    wreg      void 
  7369 ;; Registers used:
  7370 ;;		wreg, status,2, status,0
  7371 ;; Tracked objects:
  7372 ;;		On entry : 0/0
  7373 ;;		On exit  : 0/0
  7374 ;;		Unchanged: 0/0
  7375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  7376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7379 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7380 ;;Total ram usage:        0 bytes
  7381 ;; Hardware stack levels used: 1
  7382 ;; Hardware stack levels required when called: 2
  7383 ;; This function calls:
  7384 ;;		Nothing
  7385 ;; This function is called by:
  7386 ;;		_RX_setup
  7387 ;; This function uses a non-reentrant model
  7388 ;;
  7389                           
  7390                           	psect	text89
  7391   00221A                     __ptext89:
  7392                           	callstack 0
  7393   00221A                     _RX1_enable:
  7394                           	callstack 27
  7395   00221A                     
  7396                           ;src/uart_control_module/UART_setup.c: 43:     RC1STA = RC1STA | 0b00010000;
  7397   00221A  509C               	movf	156,w,c	;volatile
  7398   00221C  0910               	iorlw	16
  7399   00221E  6E9C               	movwf	156,c	;volatile
  7400   002220  0012               	return		;funcret
  7401   002222                     __end_of_RX1_enable:
  7402                           	callstack 0
  7403                           
  7404 ;; *************** function _ISR *****************
  7405 ;; Defined at:
  7406 ;;		line 11 in file "src/interrupt_control_module/interrupt_control.c"
  7407 ;; Parameters:    Size  Location     Type
  7408 ;;		None
  7409 ;; Auto vars:     Size  Location     Type
  7410 ;;		None
  7411 ;; Return value:  Size  Location     Type
  7412 ;;                  1    wreg      void 
  7413 ;; Registers used:
  7414 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7415 ;; Tracked objects:
  7416 ;;		On entry : 0/0
  7417 ;;		On exit  : 0/0
  7418 ;;		Unchanged: 0/0
  7419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  7420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7422 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7423 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7424 ;;Total ram usage:        4 bytes
  7425 ;; Hardware stack levels used: 1
  7426 ;; Hardware stack levels required when called: 1
  7427 ;; This function calls:
  7428 ;;		_TX_1_interrupt_disable
  7429 ;;		_clean_rx_1_buffer
  7430 ;;		_copy_rx_1_buffer
  7431 ;;		_timer_0_reset
  7432 ;;		_timer_0_stop
  7433 ;; This function is called by:
  7434 ;;		Interrupt level 2
  7435 ;; This function uses a non-reentrant model
  7436 ;;
  7437                           
  7438                           	psect	intcode
  7439   000008                     __pintcode:
  7440                           	callstack 0
  7441   000008                     _ISR:
  7442                           	callstack 24
  7443                           
  7444                           ;incstack = 0
  7445   000008  8245               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  7446   00000A  CFE1 F032          	movff	fsr1l,??_ISR
  7447   00000E  CFE2 F033          	movff	fsr1h,??_ISR+1
  7448   000012  CFD9 F034          	movff	fsr2l,??_ISR+2
  7449   000016  CFDA F035          	movff	fsr2h,??_ISR+3
  7450   00001A                     
  7451                           ;src/interrupt_control_module/interrupt_control.c: 14:     if ((PIR3 & 0b00010000) == 0b
      +                          00010000)
  7452   00001A  010E               	movlb	14	; () banked
  7453   00001C  A9C8               	btfss	200,4,b	;volatile
  7454   00001E  EF13  F000         	goto	i2u66_41
  7455   000022  EF15  F000         	goto	i2u66_40
  7456   000026                     i2u66_41:
  7457   000026  EF38  F000         	goto	i2l3095
  7458   00002A                     i2u66_40:
  7459   00002A                     
  7460                           ; BSR set to: 14
  7461                           ;src/interrupt_control_module/interrupt_control.c: 15:     {;src/interrupt_control_modul
      +                          e/interrupt_control.c: 16:         if (local_sending_buffer_index < local_sending_buffer
      +                          _length)
  7462   00002A  5005               	movf	_local_sending_buffer_length^0,w,c
  7463   00002C  5C01               	subwf	_local_sending_buffer_index^0,w,c
  7464   00002E  5006               	movf	(_local_sending_buffer_length+1)^0,w,c
  7465   000030  5802               	subwfb	(_local_sending_buffer_index+1)^0,w,c
  7466   000032  5007               	movf	(_local_sending_buffer_length+2)^0,w,c
  7467   000034  5803               	subwfb	(_local_sending_buffer_index+2)^0,w,c
  7468   000036  5008               	movf	(_local_sending_buffer_length+3)^0,w,c
  7469   000038  5804               	subwfb	(_local_sending_buffer_index+3)^0,w,c
  7470   00003A  B0D8               	btfsc	status,0,c
  7471   00003C  EF22  F000         	goto	i2u67_41
  7472   000040  EF24  F000         	goto	i2u67_40
  7473   000044                     i2u67_41:
  7474   000044  EF34  F000         	goto	i2l3091
  7475   000048                     i2u67_40:
  7476   000048                     
  7477                           ; BSR set to: 14
  7478                           ;src/interrupt_control_module/interrupt_control.c: 17:         {;src/interrupt_control_m
      +                          odule/interrupt_control.c: 18:             TX1REG = local_sending_buffer[local_sending_b
      +                          uffer_index];
  7479   000048  5001               	movf	_local_sending_buffer_index^0,w,c
  7480   00004A  2411               	addwf	_local_sending_buffer^0,w,c
  7481   00004C  6ED9               	movwf	fsr2l,c
  7482   00004E  5002               	movf	(_local_sending_buffer_index+1)^0,w,c
  7483   000050  2012               	addwfc	(_local_sending_buffer+1)^0,w,c
  7484   000052  6EDA               	movwf	fsr2h,c
  7485   000054  50DF               	movf	indf2,w,c
  7486   000056  6E99               	movwf	153,c	;volatile
  7487   000058                     
  7488                           ; BSR set to: 14
  7489                           ;src/interrupt_control_module/interrupt_control.c: 19:             local_sending_buffer_
      +                          index++;
  7490   000058  0E01               	movlw	1
  7491   00005A  2601               	addwf	_local_sending_buffer_index^0,f,c
  7492   00005C  0E00               	movlw	0
  7493   00005E  2202               	addwfc	(_local_sending_buffer_index+1)^0,f,c
  7494   000060  2203               	addwfc	(_local_sending_buffer_index+2)^0,f,c
  7495   000062  2204               	addwfc	(_local_sending_buffer_index+3)^0,f,c
  7496                           
  7497                           ;src/interrupt_control_module/interrupt_control.c: 20:         }
  7498   000064  EF38  F000         	goto	i2l3095
  7499   000068                     i2l3091:
  7500                           
  7501                           ; BSR set to: 14
  7502                           ;src/interrupt_control_module/interrupt_control.c: 22:         {;src/interrupt_control_m
      +                          odule/interrupt_control.c: 23:             sending_in_progress = 0;
  7503   000068  0E00               	movlw	0
  7504   00006A  6E18               	movwf	_sending_in_progress^0,c
  7505   00006C                     
  7506                           ; BSR set to: 14
  7507                           ;src/interrupt_control_module/interrupt_control.c: 24:             TX_1_interrupt_disabl
      +                          e();
  7508   00006C  ECB4  F010         	call	_TX_1_interrupt_disable	;wreg free
  7509   000070                     i2l3095:
  7510                           
  7511                           ;src/interrupt_control_module/interrupt_control.c: 29:     if ((PIR0 & 0b00100000) == 0b
      +                          00100000)
  7512   000070  010E               	movlb	14	; () banked
  7513   000072  ABC5               	btfss	197,5,b	;volatile
  7514   000074  EF3E  F000         	goto	i2u68_41
  7515   000078  EF40  F000         	goto	i2u68_40
  7516   00007C                     i2u68_41:
  7517   00007C  EF4F  F000         	goto	i2l53
  7518   000080                     i2u68_40:
  7519   000080                     
  7520                           ; BSR set to: 14
  7521                           ;src/interrupt_control_module/interrupt_control.c: 30:     {;src/interrupt_control_modul
      +                          e/interrupt_control.c: 31:         PIR0 = PIR0 & ~0b00100000;
  7522   000080  51C5               	movf	197,w,b	;volatile
  7523   000082  0BDF               	andlw	223
  7524   000084  6FC5               	movwf	197,b	;volatile
  7525   000086                     
  7526                           ; BSR set to: 14
  7527                           ;src/interrupt_control_module/interrupt_control.c: 32:         timer_0_stop();
  7528   000086  EC90  F010         	call	_timer_0_stop	;wreg free
  7529   00008A                     
  7530                           ;src/interrupt_control_module/interrupt_control.c: 33:         copy_rx_1_buffer();
  7531   00008A  EC8C  F00E         	call	_copy_rx_1_buffer	;wreg free
  7532   00008E                     
  7533                           ;src/interrupt_control_module/interrupt_control.c: 34:         finished_received_buffer 
      +                          = 1;
  7534   00008E  0E01               	movlw	1
  7535   000090  6E1C               	movwf	_finished_received_buffer^0,c
  7536   000092                     
  7537                           ;src/interrupt_control_module/interrupt_control.c: 35:         rx_1_copy_buffer_size = r
      +                          x_1_index;
  7538   000092  C01B  F01D         	movff	_rx_1_index,_rx_1_copy_buffer_size
  7539   000096                     
  7540                           ;src/interrupt_control_module/interrupt_control.c: 36:         clean_rx_1_buffer();
  7541   000096  EC01  F00F         	call	_clean_rx_1_buffer	;wreg free
  7542   00009A                     
  7543                           ;src/interrupt_control_module/interrupt_control.c: 37:         rx_1_index = 0;
  7544   00009A  0E00               	movlw	0
  7545   00009C  6E1B               	movwf	_rx_1_index^0,c
  7546   00009E                     i2l53:
  7547                           
  7548                           ;src/interrupt_control_module/interrupt_control.c: 45:     if ((PIR3 & 0b00100000) == 0b
      +                          00100000)
  7549   00009E  010E               	movlb	14	; () banked
  7550   0000A0  ABC8               	btfss	200,5,b	;volatile
  7551   0000A2  EF55  F000         	goto	i2u69_41
  7552   0000A6  EF57  F000         	goto	i2u69_40
  7553   0000AA                     i2u69_41:
  7554   0000AA  EF6D  F000         	goto	i2l58
  7555   0000AE                     i2u69_40:
  7556   0000AE                     
  7557                           ; BSR set to: 14
  7558                           ;src/interrupt_control_module/interrupt_control.c: 46:     {;src/interrupt_control_modul
      +                          e/interrupt_control.c: 48:         if (rx_1_index >= 100)
  7559   0000AE  0E63               	movlw	99
  7560   0000B0  641B               	cpfsgt	_rx_1_index^0,c
  7561   0000B2  EF5D  F000         	goto	i2u70_41
  7562   0000B6  EF5F  F000         	goto	i2u70_40
  7563   0000BA                     i2u70_41:
  7564   0000BA  EF61  F000         	goto	i2l56
  7565   0000BE                     i2u70_40:
  7566   0000BE                     
  7567                           ; BSR set to: 14
  7568                           ;src/interrupt_control_module/interrupt_control.c: 49:         {;src/interrupt_control_m
      +                          odule/interrupt_control.c: 50:             rx_1_index = 0;
  7569   0000BE  0E00               	movlw	0
  7570   0000C0  6E1B               	movwf	_rx_1_index^0,c
  7571   0000C2                     i2l56:
  7572                           
  7573                           ; BSR set to: 14
  7574                           ;src/interrupt_control_module/interrupt_control.c: 57:         rx_1_rec_character = RC1R
      +                          EG;
  7575   0000C2  CF98 F017          	movff	3992,_rx_1_rec_character	;volatile
  7576   0000C6                     
  7577                           ; BSR set to: 14
  7578                           ;src/interrupt_control_module/interrupt_control.c: 58:         rx_1_buffer_receive[rx_1_
      +                          index] = rx_1_rec_character;
  7579   0000C6  501B               	movf	_rx_1_index^0,w,c
  7580   0000C8  0F60               	addlw	low _rx_1_buffer_receive
  7581   0000CA  6ED9               	movwf	fsr2l,c
  7582   0000CC  6ADA               	clrf	fsr2h,c
  7583   0000CE  C017  FFDF         	movff	_rx_1_rec_character,indf2
  7584   0000D2                     
  7585                           ; BSR set to: 14
  7586                           ;src/interrupt_control_module/interrupt_control.c: 59:         rx_1_index++;
  7587   0000D2  2A1B               	incf	_rx_1_index^0,f,c
  7588   0000D4                     
  7589                           ; BSR set to: 14
  7590                           ;src/interrupt_control_module/interrupt_control.c: 60:         rx_1_buffer_size++;
  7591   0000D4  2A1E               	incf	_rx_1_buffer_size^0,f,c
  7592   0000D6                     
  7593                           ; BSR set to: 14
  7594                           ;src/interrupt_control_module/interrupt_control.c: 61:         timer_0_reset();
  7595   0000D6  EC6D  F00C         	call	_timer_0_reset	;wreg free
  7596   0000DA                     i2l58:
  7597   0000DA  C035  FFDA         	movff	??_ISR+3,fsr2h
  7598   0000DE  C034  FFD9         	movff	??_ISR+2,fsr2l
  7599   0000E2  C033  FFE2         	movff	??_ISR+1,fsr1h
  7600   0000E6  C032  FFE1         	movff	??_ISR,fsr1l
  7601   0000EA  9245               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  7602   0000EC  0011               	retfie		f
  7603   0000EE                     __end_of_ISR:
  7604                           	callstack 0
  7605                           
  7606 ;; *************** function _timer_0_stop *****************
  7607 ;; Defined at:
  7608 ;;		line 48 in file "src/timer_control_module/timer_module.c"
  7609 ;; Parameters:    Size  Location     Type
  7610 ;;		None
  7611 ;; Auto vars:     Size  Location     Type
  7612 ;;		None
  7613 ;; Return value:  Size  Location     Type
  7614 ;;                  1    wreg      void 
  7615 ;; Registers used:
  7616 ;;		wreg, status,2, status,0
  7617 ;; Tracked objects:
  7618 ;;		On entry : 0/0
  7619 ;;		On exit  : 0/0
  7620 ;;		Unchanged: 0/0
  7621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  7622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7625 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7626 ;;Total ram usage:        0 bytes
  7627 ;; Hardware stack levels used: 1
  7628 ;; This function calls:
  7629 ;;		Nothing
  7630 ;; This function is called by:
  7631 ;;		_ISR
  7632 ;; This function uses a non-reentrant model
  7633 ;;
  7634                           
  7635                           	psect	text91
  7636   002120                     __ptext91:
  7637                           	callstack 0
  7638   002120                     _timer_0_stop:
  7639                           	callstack 24
  7640   002120                     
  7641                           ;src/timer_control_module/timer_module.c: 51:     T0CON0 = T0CON0 & 0b01111111;
  7642   002120  50D4               	movf	212,w,c	;volatile
  7643   002122  0B7F               	andlw	127
  7644   002124  6ED4               	movwf	212,c	;volatile
  7645                           
  7646                           ;src/timer_control_module/timer_module.c: 54:     PIE0 = PIE0 & ~0b00100000;
  7647   002126  010E               	movlb	14	; () banked
  7648   002128  51BD               	movf	189,w,b	;volatile
  7649   00212A  0BDF               	andlw	223
  7650   00212C  6FBD               	movwf	189,b	;volatile
  7651   00212E                     
  7652                           ; BSR set to: 14
  7653   00212E  0012               	return		;funcret
  7654   002130                     __end_of_timer_0_stop:
  7655                           	callstack 0
  7656                           
  7657 ;; *************** function _timer_0_reset *****************
  7658 ;; Defined at:
  7659 ;;		line 16 in file "src/timer_control_module/timer_module.c"
  7660 ;; Parameters:    Size  Location     Type
  7661 ;;		None
  7662 ;; Auto vars:     Size  Location     Type
  7663 ;;		None
  7664 ;; Return value:  Size  Location     Type
  7665 ;;                  1    wreg      void 
  7666 ;; Registers used:
  7667 ;;		wreg, status,2, status,0
  7668 ;; Tracked objects:
  7669 ;;		On entry : 0/0
  7670 ;;		On exit  : 0/0
  7671 ;;		Unchanged: 0/0
  7672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  7673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7677 ;;Total ram usage:        0 bytes
  7678 ;; Hardware stack levels used: 1
  7679 ;; This function calls:
  7680 ;;		Nothing
  7681 ;; This function is called by:
  7682 ;;		_ISR
  7683 ;; This function uses a non-reentrant model
  7684 ;;
  7685                           
  7686                           	psect	text92
  7687   0018DA                     __ptext92:
  7688                           	callstack 0
  7689   0018DA                     _timer_0_reset:
  7690                           	callstack 24
  7691   0018DA                     
  7692                           ;src/timer_control_module/timer_module.c: 19:     timer_0_offset = (unsigned int) (300);
  7693   0018DA  0E01               	movlw	1
  7694   0018DC  6E0A               	movwf	(_timer_0_offset+1)^0,c
  7695   0018DE  0E2C               	movlw	44
  7696   0018E0  6E09               	movwf	_timer_0_offset^0,c
  7697   0018E2                     
  7698                           ;src/timer_control_module/timer_module.c: 20:     timer_0_low = (unsigned char) timer_0_
      +                          offset;
  7699   0018E2  C009  F014         	movff	_timer_0_offset,_timer_0_low
  7700                           
  7701                           ;src/timer_control_module/timer_module.c: 21:     timer_0_high = (unsigned char) (timer_
      +                          0_offset >> 8);
  7702   0018E6  500A               	movf	(_timer_0_offset+1)^0,w,c
  7703   0018E8  6E13               	movwf	_timer_0_high^0,c
  7704   0018EA                     
  7705                           ;src/timer_control_module/timer_module.c: 24:     T0CON0 = T0CON0 & 0b01111111;
  7706   0018EA  50D4               	movf	212,w,c	;volatile
  7707   0018EC  0B7F               	andlw	127
  7708   0018EE  6ED4               	movwf	212,c	;volatile
  7709   0018F0                     
  7710                           ;src/timer_control_module/timer_module.c: 27:     T0CON1 = T0CON1 & 0b11101111;
  7711   0018F0  50D5               	movf	213,w,c	;volatile
  7712   0018F2  0BEF               	andlw	239
  7713   0018F4  6ED5               	movwf	213,c	;volatile
  7714   0018F6                     
  7715                           ;src/timer_control_module/timer_module.c: 30:     T0CON1 = T0CON1 | 0b01000000;
  7716   0018F6  50D5               	movf	213,w,c	;volatile
  7717   0018F8  0940               	iorlw	64
  7718   0018FA  6ED5               	movwf	213,c	;volatile
  7719   0018FC                     
  7720                           ;src/timer_control_module/timer_module.c: 31:     T0CON1 = T0CON1 & 0b01001111;
  7721   0018FC  50D5               	movf	213,w,c	;volatile
  7722   0018FE  0B4F               	andlw	79
  7723   001900  6ED5               	movwf	213,c	;volatile
  7724   001902                     
  7725                           ;src/timer_control_module/timer_module.c: 34:     T0CON0 = T0CON0 | 0b10010000;
  7726   001902  50D4               	movf	212,w,c	;volatile
  7727   001904  0990               	iorlw	144
  7728   001906  6ED4               	movwf	212,c	;volatile
  7729   001908                     
  7730                           ;src/timer_control_module/timer_module.c: 35:     T0CON0 = T0CON0 & 0b10011111;
  7731   001908  50D4               	movf	212,w,c	;volatile
  7732   00190A  0B9F               	andlw	159
  7733   00190C  6ED4               	movwf	212,c	;volatile
  7734   00190E                     
  7735                           ;src/timer_control_module/timer_module.c: 38:     TMR0H = timer_0_high;
  7736   00190E  C013  FFD3         	movff	_timer_0_high,4051	;volatile
  7737   001912                     
  7738                           ;src/timer_control_module/timer_module.c: 39:     TMR0L = timer_0_low;
  7739   001912  C014  FFD2         	movff	_timer_0_low,4050	;volatile
  7740   001916                     
  7741                           ;src/timer_control_module/timer_module.c: 42:     T0CON0 = T0CON0 | (unsigned char) ~0b0
      +                          1111111;
  7742   001916  50D4               	movf	212,w,c	;volatile
  7743   001918  0980               	iorlw	128
  7744   00191A  6ED4               	movwf	212,c	;volatile
  7745   00191C                     
  7746                           ;src/timer_control_module/timer_module.c: 45:     PIE0 = PIE0 | 0b00100000;
  7747   00191C  010E               	movlb	14	; () banked
  7748   00191E  51BD               	movf	189,w,b	;volatile
  7749   001920  0920               	iorlw	32
  7750   001922  6FBD               	movwf	189,b	;volatile
  7751   001924                     
  7752                           ; BSR set to: 14
  7753   001924  0012               	return		;funcret
  7754   001926                     __end_of_timer_0_reset:
  7755                           	callstack 0
  7756                           
  7757 ;; *************** function _copy_rx_1_buffer *****************
  7758 ;; Defined at:
  7759 ;;		line 80 in file "src/interrupt_control_module/interrupt_control.c"
  7760 ;; Parameters:    Size  Location     Type
  7761 ;;		None
  7762 ;; Auto vars:     Size  Location     Type
  7763 ;;  index           1    0[COMRAM] unsigned char 
  7764 ;; Return value:  Size  Location     Type
  7765 ;;                  1    wreg      void 
  7766 ;; Registers used:
  7767 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  7768 ;; Tracked objects:
  7769 ;;		On entry : 0/0
  7770 ;;		On exit  : 0/0
  7771 ;;		Unchanged: 0/0
  7772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  7773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7774 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7776 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7777 ;;Total ram usage:        1 bytes
  7778 ;; Hardware stack levels used: 1
  7779 ;; This function calls:
  7780 ;;		Nothing
  7781 ;; This function is called by:
  7782 ;;		_ISR
  7783 ;; This function uses a non-reentrant model
  7784 ;;
  7785                           
  7786                           	psect	text93
  7787   001D18                     __ptext93:
  7788                           	callstack 0
  7789   001D18                     _copy_rx_1_buffer:
  7790                           	callstack 24
  7791   001D18                     
  7792                           ;src/interrupt_control_module/interrupt_control.c: 82:     unsigned char index = 0;
  7793   001D18  0E00               	movlw	0
  7794   001D1A  6E31               	movwf	copy_rx_1_buffer@index^0,c
  7795                           
  7796                           ;src/interrupt_control_module/interrupt_control.c: 84:     for (index = 0; index < rx_1_
      +                          index; index++)
  7797   001D1C  0E00               	movlw	0
  7798   001D1E  6E31               	movwf	copy_rx_1_buffer@index^0,c
  7799   001D20  EF9F  F00E         	goto	i2l2989
  7800   001D24                     i2l2985:
  7801                           
  7802                           ;src/interrupt_control_module/interrupt_control.c: 85:     {;src/interrupt_control_modul
      +                          e/interrupt_control.c: 86:         rx_copy_buffer[index] = rx_1_buffer_receive[index];
  7803   001D24  5031               	movf	copy_rx_1_buffer@index^0,w,c
  7804   001D26  0F60               	addlw	low _rx_1_buffer_receive
  7805   001D28  6ED9               	movwf	fsr2l,c
  7806   001D2A  6ADA               	clrf	fsr2h,c
  7807   001D2C  0E00               	movlw	low _rx_copy_buffer
  7808   001D2E  2431               	addwf	copy_rx_1_buffer@index^0,w,c
  7809   001D30  6EE1               	movwf	fsr1l,c
  7810   001D32  6AE2               	clrf	fsr1h,c
  7811   001D34  0E01               	movlw	high _rx_copy_buffer
  7812   001D36  22E2               	addwfc	fsr1h,f,c
  7813   001D38  CFDF FFE7          	movff	indf2,indf1
  7814   001D3C                     
  7815                           ;src/interrupt_control_module/interrupt_control.c: 87:     }
  7816   001D3C  2A31               	incf	copy_rx_1_buffer@index^0,f,c
  7817   001D3E                     i2l2989:
  7818   001D3E  501B               	movf	_rx_1_index^0,w,c
  7819   001D40  5C31               	subwf	copy_rx_1_buffer@index^0,w,c
  7820   001D42  A0D8               	btfss	status,0,c
  7821   001D44  EFA6  F00E         	goto	i2u52_41
  7822   001D48  EFA8  F00E         	goto	i2u52_40
  7823   001D4C                     i2u52_41:
  7824   001D4C  EF92  F00E         	goto	i2l2985
  7825   001D50                     i2u52_40:
  7826   001D50  0012               	return		;funcret
  7827   001D52                     __end_of_copy_rx_1_buffer:
  7828                           	callstack 0
  7829                           
  7830 ;; *************** function _clean_rx_1_buffer *****************
  7831 ;; Defined at:
  7832 ;;		line 70 in file "src/interrupt_control_module/interrupt_control.c"
  7833 ;; Parameters:    Size  Location     Type
  7834 ;;		None
  7835 ;; Auto vars:     Size  Location     Type
  7836 ;;  index           1    0[COMRAM] unsigned char 
  7837 ;; Return value:  Size  Location     Type
  7838 ;;                  1    wreg      void 
  7839 ;; Registers used:
  7840 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7841 ;; Tracked objects:
  7842 ;;		On entry : 0/0
  7843 ;;		On exit  : 0/0
  7844 ;;		Unchanged: 0/0
  7845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  7846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7847 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7849 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7850 ;;Total ram usage:        1 bytes
  7851 ;; Hardware stack levels used: 1
  7852 ;; This function calls:
  7853 ;;		Nothing
  7854 ;; This function is called by:
  7855 ;;		_ISR
  7856 ;; This function uses a non-reentrant model
  7857 ;;
  7858                           
  7859                           	psect	text94
  7860   001E02                     __ptext94:
  7861                           	callstack 0
  7862   001E02                     _clean_rx_1_buffer:
  7863                           	callstack 24
  7864   001E02                     
  7865                           ;src/interrupt_control_module/interrupt_control.c: 72:     unsigned char index = 0;
  7866   001E02  0E00               	movlw	0
  7867   001E04  6E31               	movwf	clean_rx_1_buffer@index^0,c
  7868                           
  7869                           ;src/interrupt_control_module/interrupt_control.c: 74:     for (index = 0; index < 100; 
      +                          index++)
  7870   001E06  0E00               	movlw	0
  7871   001E08  6E31               	movwf	clean_rx_1_buffer@index^0,c
  7872   001E0A                     i2l2235:
  7873                           
  7874                           ;src/interrupt_control_module/interrupt_control.c: 75:     {;src/interrupt_control_modul
      +                          e/interrupt_control.c: 76:         rx_1_buffer_receive[index] = 0;
  7875   001E0A  5031               	movf	clean_rx_1_buffer@index^0,w,c
  7876   001E0C  0F60               	addlw	low _rx_1_buffer_receive
  7877   001E0E  6ED9               	movwf	fsr2l,c
  7878   001E10  6ADA               	clrf	fsr2h,c
  7879   001E12  6ADF               	clrf	indf2,c
  7880   001E14                     
  7881                           ;src/interrupt_control_module/interrupt_control.c: 77:     }
  7882   001E14  2A31               	incf	clean_rx_1_buffer@index^0,f,c
  7883   001E16  0E63               	movlw	99
  7884   001E18  6431               	cpfsgt	clean_rx_1_buffer@index^0,c
  7885   001E1A  EF11  F00F         	goto	i2u22_41
  7886   001E1E  EF13  F00F         	goto	i2u22_40
  7887   001E22                     i2u22_41:
  7888   001E22  EF05  F00F         	goto	i2l2235
  7889   001E26                     i2u22_40:
  7890   001E26  0012               	return		;funcret
  7891   001E28                     __end_of_clean_rx_1_buffer:
  7892                           	callstack 0
  7893                           
  7894 ;; *************** function _TX_1_interrupt_disable *****************
  7895 ;; Defined at:
  7896 ;;		line 24 in file "src/interrupt_control_module/interrupt_setup.c"
  7897 ;; Parameters:    Size  Location     Type
  7898 ;;		None
  7899 ;; Auto vars:     Size  Location     Type
  7900 ;;		None
  7901 ;; Return value:  Size  Location     Type
  7902 ;;                  1    wreg      void 
  7903 ;; Registers used:
  7904 ;;		wreg, status,2, status,0
  7905 ;; Tracked objects:
  7906 ;;		On entry : 0/0
  7907 ;;		On exit  : 0/0
  7908 ;;		Unchanged: 0/0
  7909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK14
  7910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7913 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7914 ;;Total ram usage:        0 bytes
  7915 ;; Hardware stack levels used: 1
  7916 ;; This function calls:
  7917 ;;		Nothing
  7918 ;; This function is called by:
  7919 ;;		_ISR
  7920 ;; This function uses a non-reentrant model
  7921 ;;
  7922                           
  7923                           	psect	text95
  7924   002168                     __ptext95:
  7925                           	callstack 0
  7926   002168                     _TX_1_interrupt_disable:
  7927                           	callstack 24
  7928   002168                     
  7929                           ;src/interrupt_control_module/interrupt_setup.c: 26:     PIE3 = PIE3 & ~0b00010000;
  7930   002168  010E               	movlb	14	; () banked
  7931   00216A  51C0               	movf	192,w,b	;volatile
  7932   00216C  0BEF               	andlw	239
  7933   00216E  6FC0               	movwf	192,b	;volatile
  7934   002170                     
  7935                           ; BSR set to: 14
  7936   002170  0012               	return		;funcret
  7937   002172                     __end_of_TX_1_interrupt_disable:
  7938                           	callstack 0
  7939                           
  7940                           	psect	smallconst
  7941   000F00                     __psmallconst:
  7942                           	callstack 0
  7943   000F00  00                 	db	0
  7944   000F01  00                 	db	0	; dummy byte at the end
  7945   000000                     
  7946                           	psect	rparam
  7947   000000                     
  7948                           	psect	temp
  7949   000045                     btemp:
  7950                           	callstack 0
  7951   000045                     	ds	1
  7952   000000                     int$flags	set	btemp
  7953   000000                     wtemp8	set	btemp+1
  7954   000000                     ttemp5	set	btemp+1
  7955   000000                     ttemp6	set	btemp+4
  7956   000000                     ttemp7	set	btemp+8
  7957                           
  7958                           	psect	config
  7959                           
  7960                           ;Config register CONFIG1L @ 0x300000
  7961                           ;	External Oscillator mode Selection bits
  7962                           ;	FEXTOSC = OFF, Oscillator not enabled
  7963                           ;	Power-up default value for COSC bits
  7964                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
  7965   300000                     	org	3145728
  7966   300000  8C                 	db	140
  7967                           
  7968                           ;Config register CONFIG1H @ 0x300001
  7969                           ;	Clock Out Enable bit
  7970                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  7971                           ;	Clock Switch Enable bit
  7972                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  7973                           ;	Fail-Safe Clock Monitor Enable bit
  7974                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  7975   300001                     	org	3145729
  7976   300001  FF                 	db	255
  7977                           
  7978                           ;Config register CONFIG2L @ 0x300002
  7979                           ;	Master Clear Enable bit
  7980                           ;	MCLRE = EXTMCLR, MCLR pin (RE3) is MCLR
  7981                           ;	Power-up Timer Enable bit
  7982                           ;	PWRTE = OFF, Power up timer disabled
  7983                           ;	Low-power BOR enable bit
  7984                           ;	LPBOREN = OFF, Low power BOR is disabled
  7985                           ;	Brown-out Reset Enable bits
  7986                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  7987   300002                     	org	3145730
  7988   300002  FF                 	db	255
  7989                           
  7990                           ;Config register CONFIG2H @ 0x300003
  7991                           ;	Brown Out Reset Voltage selection bits
  7992                           ;	BORV = VBOR_190, Brown-out Reset Voltage (VBOR) set to 1.90V
  7993                           ;	ZCD Disable bit
  7994                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  7995                           ;	PPSLOCK bit One-Way Set Enable bit
  7996                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  7997                           ;	Stack Full/Underflow Reset Enable bit
  7998                           ;	STVREN = ON, Stack full/underflow will cause Reset
  7999                           ;	Extended Instruction Set Enable bit
  8000                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  8001   300003                     	org	3145731
  8002   300003  FF                 	db	255
  8003                           
  8004                           ;Config register CONFIG3L @ 0x300004
  8005                           ;	WDT Period Select bits
  8006                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  8007                           ;	WDT operating mode
  8008                           ;	WDTE = OFF, WDT Disabled
  8009   300004                     	org	3145732
  8010   300004  9F                 	db	159
  8011                           
  8012                           ;Config register CONFIG3H @ 0x300005
  8013                           ;	WDT Window Select bits
  8014                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  8015                           ;	WDT input clock selector
  8016                           ;	WDTCCS = SC, Software Control
  8017   300005                     	org	3145733
  8018   300005  FF                 	db	255
  8019                           
  8020                           ;Config register CONFIG4L @ 0x300006
  8021                           ;	Write Protection Block 0
  8022                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  8023                           ;	Write Protection Block 1
  8024                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  8025                           ;	Write Protection Block 2
  8026                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  8027                           ;	Write Protection Block 3
  8028                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  8029                           ;	Write Protection Block 4
  8030                           ;	WRT4 = OFF, Block 4 (010000-013FFFh) not write-protected
  8031                           ;	Write Protection Block 5
  8032                           ;	WRT5 = OFF, Block 5 (014000-017FFFh) not write-protected
  8033                           ;	Write Protection Block 6
  8034                           ;	WRT6 = OFF, Block 6 (018000-01BFFFh) not write-protected
  8035                           ;	Write Protection Block 7
  8036                           ;	WRT7 = OFF, Block 7 (01C000-01FFFFh) not write-protected
  8037   300006                     	org	3145734
  8038   300006  FF                 	db	255
  8039                           
  8040                           ;Config register CONFIG4H @ 0x300007
  8041                           ;	Configuration Register Write Protection bit
  8042                           ;	WRTC = OFF, Configuration registers (300000-30000Bh) not write-protected
  8043                           ;	Boot Block Write Protection bit
  8044                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  8045                           ;	Data EEPROM Write Protection bit
  8046                           ;	WRTD = OFF, Data EEPROM not write-protected
  8047                           ;	Scanner Enable bit
  8048                           ;	SCANE = ON, Scanner module is available for use, SCANMD bit can control the module
  8049                           ;	Low Voltage Programming Enable bit
  8050                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  8051   300007                     	org	3145735
  8052   300007  FF                 	db	255
  8053                           
  8054                           ;Config register CONFIG5L @ 0x300008
  8055                           ;	UserNVM Program Memory Code Protection bit
  8056                           ;	CP = OFF, UserNVM code protection disabled
  8057                           ;	DataNVM Memory Code Protection bit
  8058                           ;	CPD = OFF, DataNVM code protection disabled
  8059   300008                     	org	3145736
  8060   300008  FF                 	db	255
  8061                           
  8062                           ;Config register CONFIG5H @ 0x300009
  8063                           ;	unspecified, using default values
  8064   300009                     	org	3145737
  8065   300009  FF                 	db	255
  8066                           
  8067                           ;Config register CONFIG6L @ 0x30000A
  8068                           ;	Table Read Protection Block 0
  8069                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  8070                           ;	Table Read Protection Block 1
  8071                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  8072                           ;	Table Read Protection Block 2
  8073                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  8074                           ;	Table Read Protection Block 3
  8075                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  8076                           ;	Table Read Protection Block 4
  8077                           ;	EBTR4 = OFF, Block 4 (010000-013FFFh) not protected from table reads executed in other
      +                           blocks
  8078                           ;	Table Read Protection Block 5
  8079                           ;	EBTR5 = OFF, Block 5 (014000-017FFFh) not protected from table reads executed in other
      +                           blocks
  8080                           ;	Table Read Protection Block 6
  8081                           ;	EBTR6 = OFF, Block 6 (018000-01BFFFh) not protected from table reads executed in other
      +                           blocks
  8082                           ;	Table Read Protection Block 7
  8083                           ;	EBTR7 = OFF, Block 7 (01C000-01FFFFh) not protected from table reads executed in other
      +                           blocks
  8084   30000A                     	org	3145738
  8085   30000A  FF                 	db	255
  8086                           
  8087                           ;Config register CONFIG6H @ 0x30000B
  8088                           ;	Boot Block Table Read Protection bit
  8089                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  8090   30000B                     	org	3145739
  8091   30000B  FF                 	db	255
  8092                           tosu	equ	0xFFF
  8093                           tosh	equ	0xFFE
  8094                           tosl	equ	0xFFD
  8095                           stkptr	equ	0xFFC
  8096                           pclatu	equ	0xFFB
  8097                           pclath	equ	0xFFA
  8098                           pcl	equ	0xFF9
  8099                           tblptru	equ	0xFF8
  8100                           tblptrh	equ	0xFF7
  8101                           tblptrl	equ	0xFF6
  8102                           tablat	equ	0xFF5
  8103                           prodh	equ	0xFF4
  8104                           prodl	equ	0xFF3
  8105                           indf0	equ	0xFEF
  8106                           postinc0	equ	0xFEE
  8107                           postdec0	equ	0xFED
  8108                           preinc0	equ	0xFEC
  8109                           plusw0	equ	0xFEB
  8110                           fsr0h	equ	0xFEA
  8111                           fsr0l	equ	0xFE9
  8112                           wreg	equ	0xFE8
  8113                           indf1	equ	0xFE7
  8114                           postinc1	equ	0xFE6
  8115                           postdec1	equ	0xFE5
  8116                           preinc1	equ	0xFE4
  8117                           plusw1	equ	0xFE3
  8118                           fsr1h	equ	0xFE2
  8119                           fsr1l	equ	0xFE1
  8120                           bsr	equ	0xFE0
  8121                           indf2	equ	0xFDF
  8122                           postinc2	equ	0xFDE
  8123                           postdec2	equ	0xFDD
  8124                           preinc2	equ	0xFDC
  8125                           plusw2	equ	0xFDB
  8126                           fsr2h	equ	0xFDA
  8127                           fsr2l	equ	0xFD9
  8128                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         248
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     20      68
    BANK0           160      0     100
    BANK1           256      0     100
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK14           31      0       0

Pointer List with Targets:

    local_sending_buffer	PTR unsigned char  size(2) Largest target is 10
		 -> BUFFER_big(COMRAM[10]), BUFFER_small(COMRAM[8]), NULL(NULL[0]), 

    start_sending@source_buffer	PTR unsigned char  size(1) Largest target is 10
		 -> BUFFER_big(COMRAM[10]), BUFFER_small(COMRAM[8]), 


Critical Paths under _main in COMRAM

    _buttons_procedure_interface->_check_column_to_line_pins
    _buttons_procedure_interface->_check_line_to_column_pins
    _check_line_to_column_pins->_update_buttons_checker_line_to_column
    _update_buttons_checker_line_to_column->_get_button_pressed_line_to_column
    _update_buttons_checker_line_to_column->_get_column_pin_level
    _update_buttons_checker_line_to_column->_get_line_pin_level
    _check_column_to_line_pins->_update_buttons_checker_column_to_line
    _update_buttons_checker_column_to_line->_get_button_pressed_column_to_line
    _update_buttons_checker_column_to_line->_get_column_pin_level
    _update_buttons_checker_column_to_line->_get_line_pin_level
    _get_line_pin_level->_get_pin_r1_state
    _get_line_pin_level->_get_pin_r2_state
    _get_line_pin_level->_get_pin_r3_state
    _get_line_pin_level->_get_pin_r4_state
    _get_column_pin_level->_get_pin_c1_state
    _get_column_pin_level->_get_pin_c2_state
    _get_column_pin_level->_get_pin_c3_state
    _get_column_pin_level->_get_pin_c4_state
    _buttons_options_interface->_busy_wait
    _volume_up->_start_sending
    _volume_down->_start_sending
    _toggle_repeat_current_song->_start_sending
    _standby->_start_sending
    _reset_function->_start_sending
    _play_specific_from_folder->_start_sending
    _play_previous_song->_start_sending
    _play_next_song->_start_sending
    _play->_start_sending
    _pause->_start_sending
    _loop_all_songs_from_folder->_start_sending

Critical Paths under _ISR in COMRAM

    _ISR->_clean_rx_1_buffer
    _ISR->_copy_rx_1_buffer

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     0      5   24442
                                             15 COMRAM     5     0      5
                           _RX_setup
                           _TX_setup
                    _boud_rate_setup
                          _busy_wait
          _buttons_options_interface
        _buttons_procedure_interface
          _clear_all_interrupt_flags
               _curiosity_leds_setup
                    _interrupt_setup
              _keyboards_ansel_setup
 ---------------------------------------------------------------------------------
 (1) _keyboards_ansel_setup                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _interrupt_setup                                      0     0      0       0
              _RX_1_interrupt_enable
 ---------------------------------------------------------------------------------
 (2) _RX_1_interrupt_enable                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _curiosity_leds_setup                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _clear_all_interrupt_flags                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _buttons_procedure_interface                          0     0      0    2665
                          _busy_wait
          _check_column_to_line_pins
          _check_line_to_column_pins
              _reset_buttons_pressed
      _set_buttons_pressed_indicator
 ---------------------------------------------------------------------------------
 (2) _set_buttons_pressed_indicator                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _reset_buttons_pressed                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _check_line_to_column_pins                            2     2      0     816
                                             13 COMRAM     2     2      0
           _set_column_pins_as_input
                 _set_line_pin_level
            _set_line_pins_as_output
_update_buttons_checker_line_to_colu
 ---------------------------------------------------------------------------------
 (3) _update_buttons_checker_line_to_column                5     4      1     643
                                              8 COMRAM     5     4      1
  _get_button_pressed_line_to_column
               _get_column_pin_level
                 _get_line_pin_level
 ---------------------------------------------------------------------------------
 (4) _get_button_pressed_line_to_column                    3     2      1     229
                                              5 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (3) _set_line_pins_as_output                              0     0      0       0
                  _set_pin_r1_output
                  _set_pin_r2_output
                  _set_pin_r3_output
                  _set_pin_r4_output
 ---------------------------------------------------------------------------------
 (4) _set_pin_r4_output                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _set_pin_r3_output                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _set_pin_r2_output                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _set_pin_r1_output                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _set_line_pin_level                                   1     1      0      15
                                              5 COMRAM     1     1      0
                       _set_pin_r1_0
                       _set_pin_r1_1
                       _set_pin_r2_0
                       _set_pin_r2_1
                       _set_pin_r3_0
                       _set_pin_r3_1
                       _set_pin_r4_0
                       _set_pin_r4_1
 ---------------------------------------------------------------------------------
 (4) _set_pin_r4_1                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _set_pin_r4_0                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _set_pin_r3_1                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _set_pin_r3_0                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _set_pin_r2_1                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _set_pin_r2_0                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _set_pin_r1_1                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _set_pin_r1_0                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _set_column_pins_as_input                             0     0      0       0
                   _set_pin_c1_input
                   _set_pin_c2_input
                   _set_pin_c3_input
                   _set_pin_c4_input
 ---------------------------------------------------------------------------------
 (4) _set_pin_c4_input                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _set_pin_c3_input                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _set_pin_c2_input                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _set_pin_c1_input                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _check_column_to_line_pins                            2     2      0     815
                                             13 COMRAM     2     2      0
               _set_column_pin_level
          _set_column_pins_as_output
             _set_line_pins_as_input
_update_buttons_checker_column_to_li
 ---------------------------------------------------------------------------------
 (3) _update_buttons_checker_column_to_line                5     4      1     642
                                              8 COMRAM     5     4      1
  _get_button_pressed_column_to_line
               _get_column_pin_level
                 _get_line_pin_level
 ---------------------------------------------------------------------------------
 (4) _get_line_pin_level                                   2     2      0      90
                                              6 COMRAM     2     2      0
                   _get_pin_r1_state
                   _get_pin_r2_state
                   _get_pin_r3_state
                   _get_pin_r4_state
 ---------------------------------------------------------------------------------
 (5) _get_pin_r4_state                                     1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _get_pin_r3_state                                     1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _get_pin_r2_state                                     1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _get_pin_r1_state                                     1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _get_column_pin_level                                 2     2      0      90
                                              6 COMRAM     2     2      0
                   _get_pin_c1_state
                   _get_pin_c2_state
                   _get_pin_c3_state
                   _get_pin_c4_state
 ---------------------------------------------------------------------------------
 (5) _get_pin_c4_state                                     1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _get_pin_c3_state                                     1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _get_pin_c2_state                                     1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _get_pin_c1_state                                     1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _get_button_pressed_column_to_line                    3     2      1     228
                                              5 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (3) _set_line_pins_as_input                               0     0      0       0
                   _set_pin_r1_input
                   _set_pin_r2_input
                   _set_pin_r3_input
                   _set_pin_r4_input
 ---------------------------------------------------------------------------------
 (4) _set_pin_r4_input                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _set_pin_r3_input                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _set_pin_r2_input                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _set_pin_r1_input                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _set_column_pins_as_output                            0     0      0       0
                  _set_pin_c1_output
                  _set_pin_c2_output
                  _set_pin_c3_output
                  _set_pin_c4_output
 ---------------------------------------------------------------------------------
 (4) _set_pin_c4_output                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _set_pin_c3_output                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _set_pin_c2_output                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _set_pin_c1_output                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _set_column_pin_level                                 1     1      0      15
                                              5 COMRAM     1     1      0
                       _set_pin_c1_0
                       _set_pin_c1_1
                       _set_pin_c2_0
                       _set_pin_c2_1
                       _set_pin_c3_0
                       _set_pin_c3_1
                       _set_pin_c4_0
                       _set_pin_c4_1
 ---------------------------------------------------------------------------------
 (4) _set_pin_c4_1                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _set_pin_c4_0                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _set_pin_c3_1                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _set_pin_c3_0                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _set_pin_c2_1                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _set_pin_c2_0                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _set_pin_c1_1                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _set_pin_c1_0                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _buttons_options_interface                            0     0      0   20743
                          _busy_wait
         _loop_all_songs_from_folder
                              _pause
                               _play
                     _play_next_song
                 _play_previous_song
          _play_specific_from_folder
                     _reset_function
                            _standby
         _toggle_repeat_current_song
                    _turn_off_led_D2
                    _turn_off_led_D3
                     _turn_on_led_D2
                     _turn_on_led_D3
                        _volume_down
                          _volume_up
 ---------------------------------------------------------------------------------
 (2) _volume_up                                            0     0      0    1761
                 _reset_buffer_small
                      _start_sending
 ---------------------------------------------------------------------------------
 (2) _volume_down                                          0     0      0    1761
                 _reset_buffer_small
                      _start_sending
 ---------------------------------------------------------------------------------
 (2) _turn_on_led_D3                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _turn_on_led_D2                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _turn_off_led_D3                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _turn_off_led_D2                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _toggle_repeat_current_song                           2     1      1    1957
                                             10 COMRAM     2     1      1
                   _reset_buffer_big
                      _start_sending
 ---------------------------------------------------------------------------------
 (3) _reset_buffer_big                                     1     1      0      45
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _standby                                              0     0      0    1761
                 _reset_buffer_small
                      _start_sending
 ---------------------------------------------------------------------------------
 (2) _reset_function                                       0     0      0    1761
                 _reset_buffer_small
                      _start_sending
 ---------------------------------------------------------------------------------
 (2) _play_specific_from_folder                            2     1      1    1881
                                             10 COMRAM     2     1      1
                 _reset_buffer_small
                      _start_sending
 ---------------------------------------------------------------------------------
 (2) _play_previous_song                                   0     0      0    1761
                 _reset_buffer_small
                      _start_sending
 ---------------------------------------------------------------------------------
 (2) _play_next_song                                       0     0      0    1761
                 _reset_buffer_small
                      _start_sending
 ---------------------------------------------------------------------------------
 (2) _play                                                 0     0      0    1761
                 _reset_buffer_small
                      _start_sending
 ---------------------------------------------------------------------------------
 (2) _pause                                                0     0      0    1761
                 _reset_buffer_small
                      _start_sending
 ---------------------------------------------------------------------------------
 (2) _loop_all_songs_from_folder                           1     1      0    1783
                                             10 COMRAM     1     1      0
                 _reset_buffer_small
                      _start_sending
 ---------------------------------------------------------------------------------
 (3) _start_sending                                        5     0      5    1716
                                              5 COMRAM     5     0      5
                         _TX1_enable
              _TX_1_interrupt_enable
 ---------------------------------------------------------------------------------
 (4) _TX_1_interrupt_enable                                0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _TX1_enable                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _reset_buffer_small                                   1     1      0      45
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _busy_wait                                            8     4      4    1034
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _boud_rate_setup                                      0     0      0       0
                          _baud_9600
 ---------------------------------------------------------------------------------
 (2) _baud_9600                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TX_setup                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RX_setup                                             0     0      0       0
                         _RX1_enable
 ---------------------------------------------------------------------------------
 (2) _RX1_enable                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  4     4      0     114
                                              1 COMRAM     4     4      0
             _TX_1_interrupt_disable
                  _clean_rx_1_buffer
                   _copy_rx_1_buffer
                      _timer_0_reset
                       _timer_0_stop
 ---------------------------------------------------------------------------------
 (7) _timer_0_stop                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _timer_0_reset                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _copy_rx_1_buffer                                     1     1      0      69
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _clean_rx_1_buffer                                    1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _TX_1_interrupt_disable                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _RX_setup
     _RX1_enable
   _TX_setup
   _boud_rate_setup
     _baud_9600
   _busy_wait
   _buttons_options_interface
     _busy_wait
     _loop_all_songs_from_folder
       _reset_buffer_small
       _start_sending
         _TX1_enable
         _TX_1_interrupt_enable
     _pause
       _reset_buffer_small
       _start_sending
     _play
       _reset_buffer_small
       _start_sending
     _play_next_song
       _reset_buffer_small
       _start_sending
     _play_previous_song
       _reset_buffer_small
       _start_sending
     _play_specific_from_folder
       _reset_buffer_small
       _start_sending
     _reset_function
       _reset_buffer_small
       _start_sending
     _standby
       _reset_buffer_small
       _start_sending
     _toggle_repeat_current_song
       _reset_buffer_big
       _start_sending
     _turn_off_led_D2
     _turn_off_led_D3
     _turn_on_led_D2
     _turn_on_led_D3
     _volume_down
       _reset_buffer_small
       _start_sending
     _volume_up
       _reset_buffer_small
       _start_sending
   _buttons_procedure_interface
     _busy_wait
     _check_column_to_line_pins
       _set_column_pin_level
         _set_pin_c1_0
         _set_pin_c1_1
         _set_pin_c2_0
         _set_pin_c2_1
         _set_pin_c3_0
         _set_pin_c3_1
         _set_pin_c4_0
         _set_pin_c4_1
       _set_column_pins_as_output
         _set_pin_c1_output
         _set_pin_c2_output
         _set_pin_c3_output
         _set_pin_c4_output
       _set_line_pins_as_input
         _set_pin_r1_input
         _set_pin_r2_input
         _set_pin_r3_input
         _set_pin_r4_input
       _update_buttons_checker_column_to_line
         _get_button_pressed_column_to_line
         _get_column_pin_level
           _get_pin_c1_state
           _get_pin_c2_state
           _get_pin_c3_state
           _get_pin_c4_state
         _get_line_pin_level
           _get_pin_r1_state
           _get_pin_r2_state
           _get_pin_r3_state
           _get_pin_r4_state
     _check_line_to_column_pins
       _set_column_pins_as_input
         _set_pin_c1_input
         _set_pin_c2_input
         _set_pin_c3_input
         _set_pin_c4_input
       _set_line_pin_level
         _set_pin_r1_0
         _set_pin_r1_1
         _set_pin_r2_0
         _set_pin_r2_1
         _set_pin_r3_0
         _set_pin_r3_1
         _set_pin_r4_0
         _set_pin_r4_1
       _set_line_pins_as_output
         _set_pin_r1_output
         _set_pin_r2_output
         _set_pin_r3_output
         _set_pin_r4_output
       _update_buttons_checker_line_to_column
         _get_button_pressed_line_to_column
         _get_column_pin_level
         _get_line_pin_level
     _reset_buttons_pressed
     _set_buttons_pressed_indicator
   _clear_all_interrupt_flags
   _curiosity_leds_setup
   _interrupt_setup
     _RX_1_interrupt_enable
   _keyboards_ansel_setup

 _ISR (ROOT)
   _TX_1_interrupt_disable
   _clean_rx_1_buffer
   _copy_rx_1_buffer
   _timer_0_reset
   _timer_0_stop

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      51        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFR          100      0       0      50        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      64       7       39.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      64       5       62.5%
BITBIGSFR_1llll     91      0       0      47        0.0%
BITBIGSFR_1hlhh     65      0       0      39        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     14      44       1       72.3%
BITBIGSFR_1hhll     33      0       0      34        0.0%
BITBIGSFR_1hlll     2B      0       0      43        0.0%
BITBANK14           1F      0       0      30        0.0%
BANK14              1F      0       0      31        0.0%
BIGRAM_1            1F      0       0      49        0.0%
BITBIGSFR_1hhlh     1C      0       0      33        0.0%
BITBIGSFR_1hllh     13      0       0      42        0.0%
BITBIGSFR_1hllh      E      0       0      41        0.0%
BITBIGSFR_1hhh       D      0       0      32        0.0%
BITBIGSFR_1llll      C      0       0      46        0.0%
BITBIGSFR_1hlhh      8      0       0      35        0.0%
BITBIGSFR_1llh       4      0       0      44        0.0%
BITBIGSFR_1hlhl      3      0       0      40        0.0%
BITBIGSFR_1lllh      2      0       0      45        0.0%
BITBIGSFR_1hlhh      1      0       0      36        0.0%
BITBIGSFR_1hlhh      1      0       0      38        0.0%
BITBIGSFR_1hlhh      1      0       0      37        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     10C      48        0.0%
DATA                 0      0     10C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sat Jun  1 23:23:05 2024

                                             _TX1_enable 2212  
                                        ??_timer_0_reset 0031  
                                                     u10 1F36  
                                                     u11 1F32  
                                                     u20 1F54  
                                                     u21 1F50  
                                                     u30 1F72  
                                                     u31 1F6E  
                                                     u40 1F90  
                                                     u41 1F8C  
                                                     u50 1F18  
                                                     u51 1F14  
                                                     u60 1EFA  
                                                     u61 1EF6  
                                                     u70 1EDC  
                                                     u71 1ED8  
                                                     u80 1EBE  
                                                     u81 1EBA  
                                       _set_pin_r1_input 20D0  
                                       _set_pin_r2_input 20C0  
                                       _set_pin_r3_input 20B0  
                                       _set_pin_r4_input 20A0  
      update_buttons_checker_line_to_column@column_index 0039  
                                      ?_get_pin_r1_state 0031  
                                      ?_get_pin_r2_state 0031  
                                      ?_get_pin_r3_state 0031  
                                      ?_get_pin_r4_state 0031  
                                                    l100 1FC6  
                                                    l103 215C  
                                                    l201 203E  
                                                    l210 207E  
                                                    l115 1E4A  
                                                    l204 202E  
                                                    l301 21D8  
                                                    l213 208E  
                                                    l109 2152  
                                                    l222 20CE  
                                                    l310 2198  
                                                    l207 206E  
                                                    l304 21E8  
                                                    l232 1F42  
                                                    l216 209E  
                                                    l225 20BE  
                                                    l233 1F44  
                                                    l313 2188  
                                                    l401 15DE  
                                                    l242 1F7E  
                                                    l219 20DE  
                                                    l243 1F80  
                                                    l307 21A8  
                                                    l228 20AE  
                                                    l412 1606  
                                                    l252 1F24  
                                                    l316 2178  
                                                    l340 1FD8  
                                                    l180 201E  
                                                    l237 1F60  
                                                    l253 1F26  
                                                    l325 17AA  
                                                    l501 1D84  
                                                    l334 1828  
                                                    l238 1F62  
                                                    l262 1EE8  
                                                    l271 21C0  
                                                    l183 20EE  
                                                    l247 1F9C  
                                                    l263 1EEA  
                                                    l343 1FEA  
                                                    l280 21F0  
                                                    l192 211E  
                                                    l248 1F9E  
                                                    l504 213C  
                                                    l601 19F6  
                                                    l337 1FFC  
                                                    l257 1F06  
                                                    l274 21D0  
                                                    l186 20FE  
                                                    l346 200E  
                                                    l258 1F08  
                                                    l267 1ECA  
                                                    l355 1880  
                                                    l283 21B0  
                                                    l195 205E  
                                                    l507 1E00  
                                                    l364 18D8  
                                                    l268 1ECC  
                                                    l292 2180  
                                                    l525 110A  
                                                    l277 21E0  
                                                    l189 210E  
                                                    l461 12CC  
                                                    l438 172C  
                                                    l286 21A0  
                                                    l198 204E  
                                                    l295 21B8  
                                                    l375 14B8  
                                                    l289 2190  
                                                    l298 21C8  
                                                    l563 1E8E  
                                                    l571 1C9E  
                                                    l491 196A  
                                                    l580 1BAE  
                                                    l484 148E  
                                                    l574 1C62  
                                                    l583 1BEA  
                                                    l656 1EAE  
                                                    l592 1D16  
                                                    l568 1E6C  
                                                    l665 1DDA  
                                                    l577 1B72  
                                                    l674 2148  
                                                    l682 1A3A  
                                                    l586 1C26  
                                                    l498 19B0  
                                                    l659 2220  
                                                    l595 1AF8  
                                                    l763 1FB4  
                                                    l668 2218  
                                                    l677 2166  
                                                    l685 1A9C  
                                                    l589 1CDA  
                                                    l781 2208  
                                                    l598 1B36  
                                                    l766 2200  
                                                    l688 1ABA  
                                                    l769 21F8  
                                                    l778 2210  
                                                    u130 1E8E  
                                                    u131 1E8A  
                                                    u140 1E6C  
                                                    u141 1E68  
                                                    u500 19B0  
                                                    u420 112E  
                                                    u501 19AC  
                                                    u421 112A  
                                                    u510 1ABA  
                                                    u430 113E  
                                                    u511 1AB6  
                                                    u431 113A  
                                                    u600 1020  
                                                    u440 12F0  
                                                    u601 101C  
                                                    u441 12EC  
                                                    u610 1030  
                                                    u530 0F10  
                                                    u450 1300  
                                                    u611 102C  
                                                    u531 0F0C  
                                                    u451 12FC  
                                                    u460 1A08  
                                                    u620 107A  
                                                    u540 0F3C  
                                                    _ISR 0008  
                                                    u461 1A04  
                                                    u621 1076  
                                                    u541 0F38  
                                                    u630 108A  
                                                    u550 0F62  
                                                    u470 1958  
                                                    u631 1086  
                                                    u551 0F5E  
                                                    u471 1954  
                                                    u640 10CC  
                                                    u560 0F88  
                                                    u480 196A  
                                                    u641 10C8  
                                                    u561 0F84  
                                                    u481 1966  
                                                    u650 10F2  
                                                    u570 0FAE  
                                                    u490 199E  
                                                    u651 10EE  
                                                    u571 0FAA  
                                                    u491 199A  
                                                    u580 0FD4  
                                                    u581 0FD0  
                                                    u590 0FFA  
                                                    u591 0FF6  
                         __end_of_TX_1_interrupt_disable 2172  
                              __end_of_set_pin_c1_output 2120  
                                     ??_get_pin_r1_state 0036  
                              __end_of_set_pin_c2_output 2110  
                                     ??_get_pin_r2_state 0036  
                                     ??_get_pin_r3_state 0036  
                              __end_of_set_pin_c3_output 2100  
                                     ??_get_pin_r4_state 0036  
                                      _set_pin_r1_output 2050  
                                                    wreg 0FE8  
                              __end_of_set_pin_c4_output 20F0  
                                      _set_pin_r2_output 2040  
                                ?_set_line_pins_as_input 0031  
              __end_of_get_button_pressed_column_to_line 172E  
                    ??_get_button_pressed_column_to_line 0037  
                     ?_get_button_pressed_column_to_line 0036  
                      _get_button_pressed_column_to_line 15E0  
                                      _set_pin_r3_output 2030  
          get_button_pressed_column_to_line@column_index 0036  
                              _clear_all_interrupt_flags 1E28  
                                      _set_pin_r4_output 2020  
                                     ?_set_pin_r1_output 0031  
                  check_line_to_column_pins@column_index 003E  
                                       ?_boud_rate_setup 0031  
                                 ?_keyboards_ansel_setup 0031  
                                                   ?_ISR 0031  
                                     ?_set_pin_r2_output 0031  
                                     ?_set_pin_r3_output 0031  
                                                   l3001 0F3C  
                                                   l3011 0F7A  
                                                   l3003 0F40  
                                                   l2213 221A  
                                                   l3021 0FB2  
                                                   l3013 0F88  
                                                   l3005 0F54  
                                                   l2215 215E  
                                                   l3031 0FFA  
                                                   l3023 0FC6  
                                                   l3015 0F8C  
                                                   l3007 0F62  
                                                   l1503 1EEC  
                                                   l1511 1ECE  
                                                   l2145 21FA  
                                                   l3041 103A  
                                                   l3033 0FFE  
                                                   l3025 0FD4  
                                                   l3017 0FA0  
                                                   l3009 0F66  
                                                   l1505 1EFA  
                                                   l1513 1EDC  
                                                   l1521 1EBE  
                                                   l1601 184E  
                                                   l2147 220A  
                                                   l2171 2202  
                                                   l3051 1058  
                                                   l3043 103E  
                                                   l3035 1012  
                                                   l3027 0FD8  
                                                   l3019 0FAE  
                                                   l1531 20F0  
                                                   l1611 1884  
                                                   l1507 1F02  
                                                   l1515 1EE4  
                                                   l1523 1EC6  
                                                   l3131 1A3C  
                                                   l3061 1094  
                                                   l3045 1046  
                                                   l3037 1020  
                                                   l3053 106C  
                                                   l3029 0FEC  
                                                   l1533 2100  
                                                   l1613 1888  
                                                   l1605 1858  
                                                   l1541 2030  
                                                   l2501 14FC  
                                                   l3141 1A50  
                                                   l3133 1A40  
                                                   l1527 2154  
                                                   l3063 109C  
                                                   l3055 107A  
                                                   l3071 10BE  
                                                   l3047 1050  
                                                   l3039 1030  
                                                   l1535 2110  
                                                   l1471 1F46  
                                                   l1463 1F28  
                                                   l1615 1892  
                                                   l1623 18B0  
                                                   l1519 1EB0  
                                                   l1607 187E  
                                                   l1551 2090  
                                                   l1543 2020  
                                                   l2511 153A  
                                                   l2271 2010  
                                                   l3143 1A54  
                                                   l3135 1A44  
                                                   l2169 21F2  
                                                   l3081 10F6  
                                                   l3073 10CC  
                                                   l3065 10A2  
                                                   l3057 108A  
                                                   l3049 1054  
                                                   l1561 21BA  
                                                   l1529 20E0  
                                                   l1553 20D0  
                                                   l1481 1F72  
                                                   l1473 1F54  
                                                   l1465 1F36  
                                                   l1617 189C  
                                                   l1625 18D6  
                                                   l1545 2060  
                                                   l1537 2050  
                                                   l2521 1578  
                                                   l2513 1542  
                                                   l2505 1504  
                                                   l2601 111E  
                                                   l2265 1FB6  
                                                   l3145 1A58  
                                                   l3137 1A48  
                                                   l2371 1EA4  
                                                   l3075 10D0  
                                                   l3067 10A6  
                                                   l3059 1090  
                                                   l1563 21CA  
                                                   l1555 20C0  
                                                   l1491 1F98  
                                                   l1483 1F7A  
                                                   l1475 1F5C  
                                                   l1467 1F3E  
                                                   l1619 18A6  
                                                   l1547 2070  
                                                   l1571 219A  
                                                   l1539 2040  
                                                   l2523 1580  
                                                   l2507 152A  
                                                   l2611 116E  
                                                   l2603 112E  
                                                   l2267 1FC2  
                                                   l3147 1A6C  
                                                   l3139 1A4C  
                                                   l2373 1EAA  
                                                   l2365 1E90  
                                                   l2381 1DC8  
                                                   l2701 1A36  
                                                   l3077 10E4  
                                                   l3069 10AA  
                                                   l1565 21DA  
                                                   l1581 21D2  
                                                   l1557 20B0  
                                                   l2541 15E6  
                                                   l1549 2080  
                                                   l1573 218A  
                                                   l2525 1588  
                                                   l2517 154A  
                                                   l2509 1532  
                                                   l2533 15B6  
                                                   l2621 11BE  
                                                   l2613 117E  
                                                   l2605 113E  
                                                   l2269 1E28  
                                                   l3149 1A70  
                                                   l2367 1E96  
                                                   l2383 1DCE  
                                                   l2375 1DB4  
                                                   l3079 10F2  
                                                   l1567 21EA  
                                                   l1583 21E2  
                                                   l1559 20A0  
                                                   l2551 160C  
                                                   l2543 15EE  
                                                   l1487 1F82  
                                                   l1479 1F64  
                                                   l1495 1F0A  
                                                   l1575 217A  
                                                   l1591 2172  
                                                   l1751 1748  
                                                   l2519 1570  
                                                   l2535 15DC  
                                                   l2631 1206  
                                                   l2623 11CE  
                                                   l2615 118E  
                                                   l2607 114E  
                                                   l2711 1932  
                                                   l2703 1926  
                                                   l2391 1FA0  
                                                   l2369 1E9E  
                                                   l2385 1DD4  
                                                   l2377 1DBA  
                                                   l1745 2212  
                                                   l2801 1C68  
                                                   l1577 21B2  
                                                   l1761 17AE  
                                                   l2553 1632  
                                                   l2545 15F6  
                                                   l1489 1F90  
                                                   l1497 1F18  
                                                   l1593 182C  
                                                   l1569 21AA  
                                                   l1585 21A2  
                                                   l1753 175C  
                                                   l2529 1590  
                                                   l2481 1492  
                                                   l2633 1214  
                                                   l2625 11DC  
                                                   l2617 119E  
                                                   l2609 115E  
                                                   l2641 123E  
                                                   l2721 1946  
                                                   l2713 1938  
                                                   l2705 192E  
                                                   l1913 214A  
                                                   l2379 1DC2  
                                                   l2387 213E  
                                                   l2811 1C7A  
                                                   l2803 1C6C  
                                                   l1579 21C2  
                                                   l1763 17B2  
                                                   l2571 1690  
                                                   l2563 1652  
                                                   l2555 163A  
                                                   l2547 15FE  
                                                   l2539 15E2  
                                                   l1499 1F20  
                                                   l1595 1830  
                                                   l2651 1300  
                                                   l2643 12D0  
                                                   l2731 1974  
                                                   l1587 2192  
                                                   l1755 1770  
                                                   l1747 1730  
                                                   l2483 1498  
                                                   l2635 1222  
                                                   l2627 11EA  
                                                   l2619 11AE  
                                                   l2723 1948  
                                                   l2389 2144  
                                                   l2813 1C7E  
                                                   l2805 1C6E  
                                                   l2901 19B8  
                                                   l2821 1B3C  
                                                   l1765 17C6  
                                                   l1773 1802  
                                                   l1781 1FFE  
                                                   l2581 16CE  
                                                   l2565 1678  
                                                   l2557 1642  
                                                   l1597 183A  
                                                   l2661 1350  
                                                   l2653 1310  
                                                   l2645 12D0  
                                                   l1589 2182  
                                                   l1749 1734  
                                                   l2493 14BE  
                                                   l2485 14A0  
                                                   l2637 1230  
                                                   l2629 11F8  
                                                   l2725 1958  
                                                   l2815 1C82  
                                                   l2807 1C72  
                                                   l2911 19CA  
                                                   l2903 19BC  
                                                   l2831 1B4E  
                                                   l2823 1B40  
                                                   l1767 17DA  
                                                   l1775 1FEC  
                                                   l2583 16D6  
                                                   l2575 1698  
                                                   l2567 1680  
                                                   l2559 164A  
                                                   l2591 1704  
                                                   l1599 1844  
                                                   l2671 139E  
                                                   l2663 1360  
                                                   l2655 1320  
                                                   l2647 12E0  
                                                   l2751 199E  
                                                   l1759 1784  
                                                   l2495 14E4  
                                                   l2487 14A8  
                                                   l2727 195A  
                                                   l2719 193C  
                                                   l1881 1E72  
                                                   l2817 1C86  
                                                   l2809 1C76  
                                                   l2761 1AC2  
                                                   l2921 19DE  
                                                   l2913 19CE  
                                                   l2905 19BE  
                                                   l2841 1B78  
                                                   l2833 1B52  
                                                   l2825 1B42  
                                                   l1769 17EE  
                                                   l2577 16BE  
                                                   l2569 1688  
                                                   l2593 172A  
                                                   l2681 13E4  
                                                   l2673 13AC  
                                                   l2665 1370  
                                                   l2657 1330  
                                                   l2649 12F0  
                                                   l2753 19A0  
                                                   l2745 1982  
                                                   l2737 1978  
                                                   l2729 196C  
                                                   l1777 1FC8  
                                                   l2497 14EC  
                                                   l2489 14B0  
                                                   l2755 1A7C  
                                                   l1883 1E7C  
                                                   l1875 1E6E  
                                                   l2691 1A08  
                                                   l2931 1B0A  
                                                   l2923 1AFC  
                                                   l2771 1AD4  
                                                   l2763 1AC6  
                                                   l2915 19D2  
                                                   l2907 19C2  
                                                   l2851 1B8A  
                                                   l2843 1B7C  
                                                   l2835 1B56  
                                                   l2827 1B46  
                                                   l2819 1B38  
                                                   l2587 16DE  
                                                   l2579 16C6  
                                                   l2683 13F2  
                                                   l2675 13BA  
                                                   l2667 1380  
                                                   l2659 1340  
                                                   l2747 198C  
                                                   l2739 197E  
                                                   l1779 1FDA  
                                                   l2499 14F4  
                                                   l1971 1D74  
                                                   l2757 1A90  
                                                   l1885 1E7E  
                                                   l2693 1A18  
                                                   l2941 1B1E  
                                                   l2933 1B0E  
                                                   l2925 1B00  
                                                   l2861 1CA4  
                                                   l2781 1C2C  
                                                   l2773 1AD8  
                                                   l2765 1AC8  
                                                   l1893 1E50  
                                                   l2917 19D6  
                                                   l2909 19C6  
                                                   l2853 1B8E  
                                                   l2845 1B7E  
                                                   l2837 1B5A  
                                                   l2829 1B4A  
                                                   l2677 13C8  
                                                   l2669 1390  
                                                   l2749 198E  
                                                   l2597 110E  
                                                   l1973 1D7C  
                                                   l2695 1A1E  
                                                   l2935 1B12  
                                                   l2927 1B04  
                                                   l2871 1CB6  
                                                   l2863 1CA8  
                                                   l2791 1C3E  
                                                   l2783 1C30  
                                                   l2775 1ADC  
                                                   l2767 1ACC  
                                                   l2759 1ABE  
                                                   l2951 1BBE  
                                                   l2943 1BB0  
                                                   l1895 1E5A  
                                                   l1887 1E4C  
                                                   l2919 19DA  
                                                   l2855 1B92  
                                                   l2847 1B82  
                                                   l2839 1B74  
                                                   l2679 13D6  
                                                   l2687 1400  
                                                   l2599 110E  
                                                   l1967 1D52  
                                                   l1975 2130  
                                                   l2697 1A2E  
                                                   l2689 19F8  
                                                   l2937 1B16  
                                                   l2929 1B06  
                                                   l2881 1CE0  
                                                   l2873 1CBA  
                                                   l2865 1CAA  
                                                   l2793 1C42  
                                                   l2785 1C32  
                                                   l2777 1AE0  
                                                   l2769 1AD0  
                                                   l2961 1BD2  
                                                   l2953 1BC2  
                                                   l2945 1BB4  
                                                   l1897 1E5C  
                                                   l2857 1B96  
                                                   l2849 1B86  
                                                   l1969 1D6C  
                                                   l2699 1A32  
                                                   l2939 1B1A  
                                                   l2891 1CF2  
                                                   l2883 1CE4  
                                                   l2875 1CBE  
                                                   l2867 1CAE  
                                                   l2859 1CA0  
                                                   l2795 1C46  
                                                   l2787 1C36  
                                                   l2779 1C28  
                                                   l2971 1BFA  
                                                   l2963 1BEC  
                                                   l2955 1BC6  
                                                   l2947 1BB8  
                                                   l2893 1CF6  
                                                   l2885 1CE6  
                                                   l2877 1CC2  
                                                   l2869 1CB2  
                                                   l2797 1C4A  
                                                   l2789 1C3A  
                                                   l2981 1C0E  
                                                   l2973 1BFE  
                                                   l2965 1BF0  
                                                   l2957 1BCA  
                                                   l2949 1BBA  
                                                   l2895 1CFA  
                                                   l2887 1CEA  
                                                   l2879 1CDC  
                                                   l2799 1C64  
                                                   l2975 1C02  
                                                   l2967 1BF4  
                                                   l2959 1BCE  
                                                   l2991 1DDC  
                                                   l2897 1CFE  
                                                   l2889 1CEE  
                                                   l2977 1C06  
                                                   l2969 1BF6  
                                                   l2993 0F02  
                                                   l2979 1C0A  
                                                   l2899 19B4  
                                                   l2995 0F10  
                                                   l2997 0F1A  
                                                   l2999 0F2E  
                                __end_of_interrupt_setup 1FC8  
                                     ?_set_pin_r4_output 0031  
                                                   _PIE0 0EBD  
                                                   _PIE3 0EC0  
                                                   _PIR0 0EC5  
                                                   _PIR1 0EC6  
                                                   _PIR2 0EC7  
                                                   _PIR3 0EC8  
                                                   _PIR4 0EC9  
                                                   i2l53 009E  
                                                   _PIR5 0ECA  
                                                   _PIR6 0ECB  
                                                   i2l63 1E26  
                                                   _PIR7 0ECC  
                                                   i2l56 00C2  
                                                   i2l58 00DA  
                                                   i2l69 1D50  
                                                   _WPUC 0F1B  
                                                   _WPUD 0F20  
                                 ??_get_column_pin_level 0037  
                                                   _main 1A3C  
                                    ??_set_pin_r1_output 0036  
                                                   _play 1CA0  
                                                   fsr1h 0FE2  
                                                   fsr2h 0FDA  
                                                   indf1 0FE7  
                                                   indf2 0FDF  
                                                   fsr1l 0FE1  
                                                   fsr2l 0FD9  
                                                   btemp 0045  
                                 ??_set_column_pin_level 0036  
                                    ??_set_pin_r2_output 0036  
                                    ??_set_pin_r3_output 0036  
                                 get_pin_r1_state@output 0036  
                                                   start 00EE  
                                    ??_set_pin_r4_output 0036  
                             _local_sending_buffer_index 0001  
                                         _rx_copy_buffer 0100  
                                  _reset_buttons_pressed 1D52  
                             ?_set_column_pins_as_output 0031  
                                           ___param_bank 0000  
                                  _rx_1_copy_buffer_size 001D  
                               ?_set_line_pins_as_output 0031  
                                                  ??_ISR 0032  
                          _loop_all_songs_from_folder_on 0015  
                                            _volume_down 1B74  
                               __end_of_copy_rx_1_buffer 1D52  
                                                  ?_main 0040  
                                                  ?_play 0031  
                              __end_of_set_pin_r1_output 2060  
                                       _rx_1_buffer_size 001E  
                              __end_of_set_pin_r2_output 2050  
                                                  i2l106 2170  
                                                  i2l620 1924  
                                                  i2l623 212E  
                              __end_of_set_pin_r3_output 2040  
                                                  _TMR0H 0FD3  
                                                  _TMR0L 0FD2  
                         __end_of_set_line_pins_as_input 1FFE  
                                                  _PORTA 0F8C  
                                                  _PORTC 0F8E  
                                                  _PORTD 0F8F  
                                                  _TRISA 0F87  
                                                  _TRISC 0F89  
                                                  _TRISD 0F8A  
                            ??_check_line_to_column_pins 003E  
                              __end_of_set_pin_r4_output 2030  
                                                  _pause 1CDC  
                                          _start_sending 19F8  
      update_buttons_checker_column_to_line@column_index 0039  
          __end_of_update_buttons_checker_column_to_line 1490  
                ??_update_buttons_checker_column_to_line 003A  
                 ?_update_buttons_checker_column_to_line 0039  
                  _update_buttons_checker_column_to_line 12CE  
                      __end_of_buttons_options_interface 110C  
                                        __end_of_standby 1BEC  
                                                  ttemp5 0046  
                                                  ttemp6 0049  
                                                  ttemp7 004D  
                                                  status 0FD8  
                                            ?_RX1_enable 0031  
                                                  wtemp8 0046  
                            _local_sending_buffer_length 0005  
                                 get_pin_c2_state@output 0036  
                                        __initialization 1D86  
                                            ?_TX1_enable 0031  
                                           __end_of_main 1A7C  
                                       __end_of_RX_setup 1EB0  
                                           __end_of_play 1CDC  
                                       __end_of_TX_setup 1DDC  
                                                 ??_main 0045  
                                                 ??_play 003B  
                                          __activetblptr 0003  
            update_buttons_checker_line_to_column@button 003C  
                             ??_set_column_pins_as_input 0036  
                                         ?_start_sending 0036  
                                reset_buffer_small@index 0036  
                                                 ?_pause 0031  
                                       ??_turn_on_led_D2 0036  
                                       ??_turn_on_led_D3 0036  
                                                 _ANSELA 0F0C  
                                                 _ANSELC 0F1C  
                                                 _ANSELD 0F21  
                                                 _T0CON0 0FD4  
                                                 _T0CON1 0FD5  
                                                 _RC1REG 0F98  
                                       ?_interrupt_setup 0031  
                                                 _RC1STA 0F9C  
                           __end_of_curiosity_leds_setup 1FB6  
                                                 _RC6PPS 0EF8  
                                                 i2l3101 008A  
                                                 i2l3111 00AE  
                                                 i2l3103 008E  
                                                 i2l2217 2168  
                                                 i2l2241 18DA  
                                                 i2l3121 00D6  
                                                 i2l3113 00BE  
                                                 i2l3105 0092  
                                                 i2l2235 1E0A  
                                                 i2l2251 18FC  
                                                 i2l2243 18E2  
                                                 i2l2219 2120  
                                                 i2l3115 00C6  
                                                 i2l3107 0096  
                                                 i2l2237 1E14  
                                                 i2l2229 1E02  
                                                 i2l2261 1916  
                                                 i2l2253 1902  
                                                 i2l2245 18EA  
                                                 i2l3117 00D2  
                                                 i2l3109 009A  
                                                 i2l2239 1E16  
                                                 i2l2263 191C  
                                                 i2l2255 1908  
                                                 i2l2247 18F0  
                                                 i2l3119 00D4  
                                                 i2l2257 190E  
                                                 i2l2249 18F6  
                                                 i2l2259 1912  
                                                 i2l3091 0068  
                                                 i2l3083 001A  
                                                 i2l3093 006C  
                                                 i2l3085 002A  
                                                 i2l3087 0048  
                                                 i2l3095 0070  
                                                 i2l3097 0080  
                                                 i2l3089 0058  
                                                 i2l3099 0086  
                                                 i2l2983 1D18  
                                                 _INTCON 0FF2  
                                                 i2l2985 1D24  
                                                 i2l2987 1D3C  
                                                 i2l2989 1D3E  
                                                 _SP1BRG 0F9A  
                                                 _RX1PPS 0EB0  
                                                 _TX1REG 0F99  
                                                 _TX1STA 0F9D  
                                  _RX_1_interrupt_enable 214A  
                              _check_line_to_column_pins 1926  
                                   _local_sending_buffer 0011  
                                 ?_reset_buttons_pressed 0031  
                             ?_play_specific_from_folder 003B  
                                 get_pin_r2_state@output 0036  
                            ?_loop_all_songs_from_folder 0031  
               _buttons_pressed_indicator_column_to_line 000D  
                               __end_of_set_pin_c1_input 20A0  
                                                 clear_0 1D8C  
                                                 clear_1 1D98  
                                                 clear_2 1DA4  
                               __end_of_set_pin_c2_input 2090  
                               __end_of_set_pin_c3_input 2080  
                                                 isa$std 0001  
                               __end_of_set_pin_c4_input 2070  
                                           __mediumconst 0000  
                                _ir_tr_rec_is_has_signal 001A  
                                      ?_reset_buffer_big 0031  
             toggle_repeat_current_song@option_corr_code 003B  
                                ??_TX_1_interrupt_enable 0036  
                                              ??_standby 003B  
                            ??_check_column_to_line_pins 003E  
                                     ??_reset_buffer_big 0036  
                               __end_of_set_pin_r1_input 20E0  
                               __end_of_set_pin_r2_input 20D0  
                               __end_of_set_pin_r3_input 20C0  
                               __end_of_set_pin_r4_input 20B0  
                                             __accesstop 0060  
                                __end_of__initialization 1DAA  
                            ?_toggle_repeat_current_song 003B  
                                          ___rparam_used 0001  
                                 get_pin_c3_state@output 0036  
                                         _play_next_song 1C64  
                                         __pcstackCOMRAM 0031  
                                          __end_of_pause 1D18  
                       toggle_repeat_current_song@option 003C  
                                ??_keyboards_ansel_setup 0036  
                                        ??_start_sending 003B  
                             start_sending@source_buffer 0036  
                                                ??_pause 003B  
                                              ?_RX_setup 0031  
update_buttons_checker_line_to_column@column_level_value 003B  
                                             __pbssBANK0 0060  
                                             __pbssBANK1 0100  
                             __end_of_play_previous_song 1C64  
                                 ?_RX_1_interrupt_enable 0031  
                                              ?_TX_setup 0031  
                                      ??_turn_off_led_D2 0036  
                                      ??_turn_off_led_D3 0036  
                                 __end_of_play_next_song 1CA0  
                                 get_pin_r3_state@output 0036  
                      __end_of_clear_all_interrupt_flags 1E4C  
                            ??_set_column_pins_as_output 0036  
                                           _BUFFER_small 0029  
                              _check_column_to_line_pins 196C  
        update_buttons_checker_line_to_column@line_index 003D  
                                           ?_volume_down 0031  
                                  __end_of_timer_0_reset 1926  
                                   _curiosity_leds_setup 1FA0  
                                      ?_copy_rx_1_buffer 0031  
                                     ??_copy_rx_1_buffer 0031  
                                  copy_rx_1_buffer@index 0031  
                                        _buttons_pressed 000B  
                       __end_of_set_column_pins_as_input 1FEC  
                                      __end_of_baud_9600 2168  
                                                i2u22_40 1E26  
                                                i2u22_41 1E22  
                                                i2u52_40 1D50  
                                                i2u52_41 1D4C  
                                                i2u70_40 00BE  
                                                i2u70_41 00BA  
                                                i2u66_40 002A  
                                                i2u66_41 0026  
                                                i2u67_40 0048  
                                                i2u67_41 0044  
                                                i2u68_40 0080  
                                                i2u68_41 007C  
                                                i2u69_40 00AE  
                                                i2u69_41 00AA  
                                             ??_RX_setup 0036  
                                             ??_TX_setup 0036  
                       get_column_pin_level@column_index 0037  
                       set_column_pin_level@column_index 0036  
                                           ??_RX1_enable 0036  
                             get_column_pin_level@output 0038  
                                        ?_play_next_song 0031  
                                                __Hparam 0000  
                                                __Lparam 0000  
                                 get_pin_c4_state@output 0036  
                                           ??_TX1_enable 0036  
                                          ?_set_pin_c1_0 0031  
                                          ?_set_pin_c1_1 0031  
                                          ?_set_pin_c2_0 0031  
                                          ?_set_pin_c2_1 0031  
                                          ?_set_pin_c3_0 0031  
                                          ?_set_pin_c3_1 0031  
                                    busy_wait@iterations 0036  
                                          ?_set_pin_c4_0 0031  
                                          ?_set_pin_c4_1 0031  
                                          ?_set_pin_r1_0 0031  
                                          ?_set_pin_r1_1 0031  
                                          ?_set_pin_r2_0 0031  
                                          ?_set_pin_r2_1 0031  
                                          ?_set_pin_r3_0 0031  
                                          ?_set_pin_r3_1 0031  
                                          ?_set_pin_r4_0 0031  
                                          ?_set_pin_r4_1 0031  
                               get_line_pin_level@output 0038  
                                      _clean_rx_1_buffer 1E02  
                                           __psmallconst 0F00  
                                  ?_curiosity_leds_setup 0031  
                                                __pcinit 1D86  
                                                __ramtop 0F00  
                                     ?_clean_rx_1_buffer 0031  
                                                __ptext0 1A3C  
                                                __ptext1 2010  
                                                __ptext2 1FB6  
                                                __ptext3 214A  
                                                __ptext4 1FA0  
                                                __ptext5 1E28  
                                                __ptext6 1DDC  
                                                __ptext7 2130  
                                                __ptext8 1D52  
                                                __ptext9 1926  
                                      __end_of_busy_wait 1ABC  
                                     __end_of_RX1_enable 2222  
                              _set_column_pins_as_output 1FFE  
                                    ??_clean_rx_1_buffer 0031  
                             __end_of_get_line_pin_level 1882  
                             __end_of_set_line_pin_level 17AC  
                                                _standby 1BB0  
                                             _rx_1_index 001B  
                                          ?_timer_0_stop 0031  
                                   end_of_initialization 1DAA  
                                     __end_of_TX1_enable 221A  
                                         _reset_function 1BEC  
                                ??_reset_buttons_pressed 0036  
                             ?_buttons_options_interface 0031  
                 play_specific_from_folder@folder_number 003C  
                            ??_play_specific_from_folder 003C  
                                 get_pin_r4_state@output 0036  
                                         ??_set_pin_c1_0 0036  
                                         ??_set_pin_c1_1 0036  
                                         ??_set_pin_c2_0 0036  
                                         ??_set_pin_c2_1 0036  
                                         ??_set_pin_c3_0 0036  
                                         ??_set_pin_c3_1 0036  
                                         ??_set_pin_c4_0 0036  
                                         ??_set_pin_c4_1 0036  
                                         ??_set_pin_r1_0 0036  
                                         ??_set_pin_r1_1 0036  
                                         ??_set_pin_r2_0 0036  
                                         ??_set_pin_r2_1 0036  
                                         ??_set_pin_r3_0 0036  
                                         ??_set_pin_r3_1 0036  
                                         ??_set_pin_r4_0 0036  
                                         ??_set_pin_r4_1 0036  
                              __end_of_clean_rx_1_buffer 1E28  
                                                postinc0 0FEE  
                               ??_TX_1_interrupt_disable 0031  
                                       _get_pin_c1_state 1F82  
                                       _get_pin_c2_state 1F64  
                                      ?_set_pin_c1_input 0031  
                                       _get_pin_c3_state 1F46  
                                      ?_set_pin_c2_input 0031  
                                       _get_pin_c4_state 1F28  
                                      ?_set_pin_c3_input 0031  
                      __end_of_check_line_to_column_pins 196C  
                                      ?_set_pin_c4_input 0031  
                           ?_buttons_procedure_interface 0031  
                get_button_pressed_column_to_line@output 0038  
                                      __end_of_volume_up 1B74  
                                     ??_set_pin_c1_input 0036  
                                     ??_set_pin_c2_input 0036  
                                     ??_set_pin_c3_input 0036  
                                     ??_set_pin_c4_input 0036  
                                         ??_timer_0_stop 0031  
                           get_line_pin_level@line_index 0037  
                                 __end_of_reset_function 1C28  
                          __end_of_TX_1_interrupt_enable 215E  
                                       _get_pin_r1_state 1F0A  
                                       _get_pin_r2_state 1EEC  
                                      ?_set_pin_r1_input 0031  
                                       _get_pin_r3_state 1ECE  
            get_button_pressed_line_to_column@line_index 0037  
                                      ?_set_pin_r2_input 0031  
                                       _get_pin_r4_state 1EB0  
                                      ?_set_pin_r3_input 0031  
                                      ?_set_pin_r4_input 0031  
                                     ??_set_pin_r1_input 0036  
                                     ??_set_pin_r2_input 0036  
                                     ??_set_pin_r3_input 0036  
                                     ??_set_pin_r4_input 0036  
                              ?_set_column_pins_as_input 0031  
  update_buttons_checker_column_to_line@line_level_value 003A  
                                 ??_curiosity_leds_setup 0036  
                                      ??_boud_rate_setup 0036  
                               ??_set_line_pins_as_input 0036  
                        ??_set_buttons_pressed_indicator 0036  
                              _play_specific_from_folder 1ABC  
              __end_of_get_button_pressed_line_to_column 15E0  
                    ??_get_button_pressed_line_to_column 0037  
                     ?_get_button_pressed_line_to_column 0036  
                      _get_button_pressed_line_to_column 1490  
                                _set_line_pins_as_output 1FC8  
                                 clean_rx_1_buffer@index 0031  
                          ??_buttons_procedure_interface 0040  
                                    start_initialization 1D86  
                                            __end_of_ISR 00EE  
                                        _turn_off_led_D2 220A  
                                        _turn_off_led_D3 2202  
                          __end_of_keyboards_ansel_setup 2020  
                                ??_RX_1_interrupt_enable 0036  
                                        ?_reset_function 0031  
                    check_column_to_line_pins@line_index 003E  
                                     _play_previous_song 1C28  
        update_buttons_checker_column_to_line@line_index 003D  
                  loop_all_songs_from_folder@loop_option 003B  
                                    ?_play_previous_song 0031  
                                            __pbssCOMRAM 0001  
                                         _timer_0_offset 0009  
                      __end_of_check_column_to_line_pins 19B2  
                                   __end_of_set_pin_c1_0 21F2  
                                   __end_of_set_pin_c1_1 21EA  
                                   __end_of_set_pin_c2_0 21E2  
                                   __end_of_set_pin_c2_1 21DA  
                                   __end_of_set_pin_c3_0 21D2  
                                   __end_of_set_pin_c3_1 21CA  
          __end_of_update_buttons_checker_line_to_column 12CE  
                ??_update_buttons_checker_line_to_column 003A  
                 ?_update_buttons_checker_line_to_column 0039  
                  _update_buttons_checker_line_to_column 110C  
                                   __end_of_set_pin_c4_0 21C2  
                                   __end_of_set_pin_c4_1 21BA  
                                  __end_of_start_sending 1A3C  
                             __end_of_reset_buffer_small 1E90  
                                   __end_of_set_pin_r1_0 21B2  
                                   __end_of_set_pin_r1_1 21AA  
                                   __end_of_set_pin_r2_0 21A2  
                                   __end_of_set_pin_r2_1 219A  
                                   __end_of_set_pin_r3_0 2192  
                                   __end_of_set_pin_r3_1 218A  
                                   __end_of_set_pin_r4_0 2182  
                                   __end_of_set_pin_r4_1 217A  
                                              _baud_9600 215E  
                                       ??_play_next_song 003B  
  update_buttons_checker_line_to_column@line_level_value 003A  
                                           _is_buzzer_on 0019  
                           set_line_pin_level@line_index 0036  
                                   ??_play_previous_song 003B  
                             ?_clear_all_interrupt_flags 0031  
                                              __pintcode 0008  
                                   __end_of_timer_0_stop 2130  
                                      ??_interrupt_setup 0036  
                              ??_set_line_pins_as_output 0036  
                                __end_of_turn_off_led_D2 2212  
                                __end_of_turn_off_led_D3 220A  
                           __end_of_get_column_pin_level 18DA  
                                               _BAUD1CON 0F9E  
                                            __smallconst 0F00  
                           __end_of_set_column_pin_level 182A  
                  __end_of_set_buttons_pressed_indicator 213E  
                          _set_buttons_pressed_indicator 2130  
                                               ?_standby 0031  
                                              _busy_wait 1A7C  
                                             ?_baud_9600 0031  
                                 _TX_1_interrupt_disable 2168  
                                    _rx_1_buffer_receive 0060  
                               __end_of_get_pin_c1_state 1FA0  
                               __end_of_get_pin_c2_state 1F82  
                               __end_of_get_pin_c3_state 1F64  
                               __end_of_get_pin_c4_state 1F46  
                            ??_buttons_options_interface 003E  
                          __end_of_reset_buttons_pressed 1D86  
                      __end_of_set_column_pins_as_output 2010  
                                     _get_line_pin_level 182A  
                                     _set_line_pin_level 172E  
                                       _reset_buffer_big 1E4C  
               _buttons_pressed_indicator_line_to_column 000F  
            update_buttons_checker_column_to_line@button 003C  
                           ??_loop_all_songs_from_folder 003B  
                                    ?_get_line_pin_level 0031  
                                    ?_set_line_pin_level 0031  
                               __end_of_get_pin_r1_state 1F28  
                               __end_of_get_pin_r2_state 1F0A  
                               __end_of_get_pin_r3_state 1EEC  
                               __end_of_get_pin_r4_state 1ECE  
                                     _rx_1_rec_character 0017  
                                              _volume_up 1B38  
                                             ?_busy_wait 0036  
                                   ??_get_line_pin_level 0037  
                                 _set_line_pins_as_input 1FEC  
                                   ??_set_line_pin_level 0036  
                                               _RX_setup 1E90  
                        __end_of_set_line_pins_as_output 1FDA  
                                               _TX_setup 1DB4  
                                        _boud_rate_setup 213E  
            get_button_pressed_column_to_line@line_index 0037  
                           ??_toggle_repeat_current_song 003C  
                      start_sending@source_buffer_length 0037  
                                               __Hrparam 0000  
                                         _turn_on_led_D2 21FA  
                                         _turn_on_led_D3 21F2  
                                               __Lrparam 0000  
                                          _timer_0_reset 18DA  
                              _buttons_options_interface 0F02  
                  check_column_to_line_pins@column_index 003F  
                                       ?_turn_off_led_D2 0031  
                                       ?_turn_off_led_D3 0031  
                                       ??_reset_function 003B  
                             ?_check_line_to_column_pins 0031  
                                             _BUFFER_big 001F  
                                             ?_volume_up 0031  
                                               __ptext10 110C  
                                               __ptext11 1490  
                                               __ptext20 2182  
                                               __ptext12 1FC8  
                                               __ptext21 218A  
                                               __ptext13 2020  
                                               __ptext30 2090  
                                               __ptext22 2192  
                                               __ptext14 2030  
                                               __ptext31 196C  
                                               __ptext23 219A  
                                               __ptext15 2040  
                                               __ptext40 1F46  
                                               __ptext32 12CE  
                                               __ptext24 21A2  
                                               __ptext16 2050  
                                               __ptext41 1F64  
                                               __ptext33 182A  
                                               __ptext25 21AA  
                                               __ptext17 172E  
                                               __ptext50 20E0  
                                               __ptext42 1F82  
                                               __ptext34 1EB0  
                                               __ptext26 1FDA  
                                               __ptext18 2172  
                                               __ptext51 20F0  
                                               __ptext43 15E0  
                                               __ptext35 1ECE  
                                               __ptext27 2060  
                                               __ptext19 217A  
                                               __ptext60 21DA  
                                               __ptext52 2100  
                                               __ptext44 1FEC  
                                               __ptext36 1EEC  
                                               __ptext28 2070  
                                               __ptext61 21E2  
                                               __ptext53 2110  
                                               __ptext45 20A0  
                                               __ptext37 1F0A  
                                               __ptext29 2080  
                                               __ptext70 19B2  
                                               __ptext62 21EA  
                                               __ptext54 17AC  
                                               __ptext46 20B0  
                                               __ptext38 1882  
                                               __ptext71 1E4C  
                                               __ptext63 0F02  
                                               __ptext55 21B2  
                                               __ptext47 20C0  
                                               __ptext39 1F28  
                                               __ptext80 19F8  
                                               __ptext72 1BB0  
                                               __ptext64 1B38  
                                               __ptext56 21BA  
                                               __ptext48 20D0  
                                               __ptext81 2154  
                                               __ptext73 1BEC  
                                               __ptext65 1B74  
                                               __ptext57 21C2  
                                               __ptext49 1FFE  
                                               __ptext82 2212  
                                               __ptext74 1ABC  
                                               __ptext66 21F2  
                                               __ptext58 21CA  
                                               __ptext91 2120  
                                               __ptext83 1E6E  
                                               __ptext75 1C28  
                                               __ptext67 21FA  
                                               __ptext59 21D2  
                                               __ptext92 18DA  
                                               __ptext84 1A7C  
                                               __ptext76 1C64  
                                               __ptext68 2202  
                                               __ptext93 1D18  
                                               __ptext85 213E  
                                               __ptext77 1CA0  
                                               __ptext69 220A  
                                               __ptext94 1E02  
                                               __ptext86 215E  
                                               __ptext78 1CDC  
                                               __ptext95 2168  
                                               __ptext87 1DB4  
                                               __ptext79 1AFA  
                                               __ptext88 1E90  
                                               __ptext89 221A  
                                            ??_baud_9600 0036  
                          __end_of_RX_1_interrupt_enable 2154  
                                       _copy_rx_1_buffer 1D18  
                    check_line_to_column_pins@line_index 003F  
                         ?_set_buttons_pressed_indicator 0031  
                                      busy_wait@iterator 003A  
                                  _TX_1_interrupt_enable 2154  
                      __end_of_play_specific_from_folder 1AFA  
                                 __end_of_turn_on_led_D2 2202  
                                 __end_of_turn_on_led_D3 21FA  
                                   _get_column_pin_level 1882  
                  play_specific_from_folder@track_number 003B  
                                   _set_column_pin_level 17AC  
                                               isa$xinst 0000  
                                           _set_pin_c1_0 21EA  
                                           _set_pin_c1_1 21E2  
                                           _set_pin_c2_0 21DA  
                                           _set_pin_c2_1 21D2  
                                           _set_pin_c3_0 21CA  
                                           _set_pin_c3_1 21C2  
                                           _set_pin_c4_0 21BA  
                                           _set_pin_c4_1 21B2  
                                               int$flags 0045  
                                           _set_pin_r1_0 21AA  
                                           _set_pin_r1_1 21A2  
update_buttons_checker_column_to_line@column_level_value 003B  
                                           _set_pin_r2_0 219A  
                                           _set_pin_r2_1 2192  
                                           _set_pin_r3_0 218A  
                                           _set_pin_r3_1 2182  
                                           _set_pin_r4_0 217A  
                                           _set_pin_r4_1 2172  
                               _finished_received_buffer 001C  
                                          ??_volume_down 003B  
                                         ?_timer_0_reset 0031  
                                               main@argc 0040  
                                               main@argv 0042  
                                __end_of_boud_rate_setup 214A  
                                            ??_busy_wait 003A  
                                           _timer_0_high 0013  
                get_button_pressed_line_to_column@output 0038  
                                           _timer_0_stop 2120  
                                               intlevel2 0000  
                                  _keyboards_ansel_setup 2010  
                               _set_column_pins_as_input 1FDA  
                                        ?_turn_on_led_D2 0031  
                                        ?_turn_on_led_D3 0031  
                                  ?_get_column_pin_level 0031  
                                        _interrupt_setup 1FB6  
                                  ?_set_column_pin_level 0031  
                                     _reset_buffer_small 1E6E  
                     __end_of_loop_all_songs_from_folder 1B38  
                             _loop_all_songs_from_folder 1AFA  
                            ??_clear_all_interrupt_flags 0036  
          get_button_pressed_line_to_column@column_index 0036  
                                    ?_reset_buffer_small 0031  
                                  reset_buffer_big@index 0036  
                    __end_of_buttons_procedure_interface 1E02  
                            _buttons_procedure_interface 1DDC  
                                            _timer_0_low 0014  
                              _current_song_repeating_on 0016  
                                    __end_of_volume_down 1BB0  
                                ?_TX_1_interrupt_disable 0031  
                               __end_of_reset_buffer_big 1E6E  
                                      _set_pin_c1_output 2110  
                                      _set_pin_c2_output 2100  
                                            ??_volume_up 003B  
                                      _set_pin_c3_output 20F0  
                             ?_check_column_to_line_pins 0031  
                                      _set_pin_c4_output 20E0  
                                     ?_set_pin_c1_output 0031  
                                     ?_set_pin_c2_output 0031  
                                     ?_set_pin_c3_output 0031  
                                   ??_reset_buffer_small 0036  
                                       _set_pin_c1_input 2090  
                                     ?_set_pin_c4_output 0031  
                                       _set_pin_c2_input 2080  
                                 ?_TX_1_interrupt_enable 0031  
                                       _set_pin_c3_input 2070  
                                       _set_pin_c4_input 2060  
                     __end_of_toggle_repeat_current_song 19F8  
                             _toggle_repeat_current_song 19B2  
                                      ?_get_pin_c1_state 0031  
                                      ?_get_pin_c2_state 0031  
                                             _RX1_enable 221A  
                                      ?_get_pin_c3_state 0031  
                                      ?_get_pin_c4_state 0031  
                                    ??_set_pin_c1_output 0036  
                                    _sending_in_progress 0018  
                                    ??_set_pin_c2_output 0036  
                                     ??_get_pin_c1_state 0036  
                                    ??_set_pin_c3_output 0036  
                                     ??_get_pin_c2_state 0036  
                                     ??_get_pin_c3_state 0036  
                                 get_pin_c1_state@output 0036  
                                    ??_set_pin_c4_output 0036  
                                     ??_get_pin_c4_state 0036  
